// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: errors.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 错误码
type ErrorCode int32

const (
	ErrorCode_ERROR_SUCCESS ErrorCode = 0 // 成功
	ErrorCode_ERROR_FAILED  ErrorCode = 1 // 失败
	ErrorCode_ERROR_TIMEOUT ErrorCode = 2 // 超时
	// ------------德州扑克错误码-------------
	ErrorCode_EC_TEXAS_ROOM_NOT_LOAD               ErrorCode = 4096 // 房间数据为加载
	ErrorCode_EC_TEXAS_ROOM_NOT_FOUND              ErrorCode = 4097 // 房间不存在
	ErrorCode_EC_TEXAS_REDIS_LOAD_ROOM             ErrorCode = 4098 // redis加载房间数据失败
	ErrorCode_EC_TEXAS_TEXAS_ROOM_CFG_NOT_FOUND    ErrorCode = 4099 // 房间配置不存在
	ErrorCode_EC_TEXAS_TEXAS_MACHINE_CFG_NOT_FOUND ErrorCode = 4100 // 状态机配置不存在
	ErrorCode_EC_TEXAS_PLAYER_NOT_IN_ROOM          ErrorCode = 4101 // 玩家不存在
	ErrorCode_EC_TEXAS_TABLE_FULL                  ErrorCode = 4102 // 牌桌已满
	ErrorCode_EC_TEXAS_CHIPS_NOT_ENOUGH            ErrorCode = 4103 // 筹码不足
	ErrorCode_EC_TEXAS_PLAYER_IN_CHAIR             ErrorCode = 4104 // 玩家已坐下
	ErrorCode_EC_TEXAS_CHAIR_OCCUPIED              ErrorCode = 4105 // 座位已被占用
	ErrorCode_EC_TEXAS_REQUEST_PARAM_ERROR         ErrorCode = 4106 // 请求参数错误
	ErrorCode_EC_TEXAS_PLAYER_HAS_STAND_UP         ErrorCode = 4107 // 玩家已站起
	ErrorCode_EC_TEXAS_PLAYER_HAS_FOLD_OR_ALLIN    ErrorCode = 4108 // 玩家已弃牌或全下
	ErrorCode_EC_TEXAS_OPERATE_NOT_SUPPORTED       ErrorCode = 4109 // 操作不支持
	ErrorCode_EC_TEXAS_BUILD_ROOM_FAILED           ErrorCode = 4110 // redis保存房间数据失败
	ErrorCode_EC_TEXAS_REDIS_SAVE                  ErrorCode = 4111 // redis加载房间数据失败
	ErrorCode_EC_TEXAS_REDIS_DELETE                ErrorCode = 4112 // redis删除房间数据失败
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:    "ERROR_SUCCESS",
		1:    "ERROR_FAILED",
		2:    "ERROR_TIMEOUT",
		4096: "EC_TEXAS_ROOM_NOT_LOAD",
		4097: "EC_TEXAS_ROOM_NOT_FOUND",
		4098: "EC_TEXAS_REDIS_LOAD_ROOM",
		4099: "EC_TEXAS_TEXAS_ROOM_CFG_NOT_FOUND",
		4100: "EC_TEXAS_TEXAS_MACHINE_CFG_NOT_FOUND",
		4101: "EC_TEXAS_PLAYER_NOT_IN_ROOM",
		4102: "EC_TEXAS_TABLE_FULL",
		4103: "EC_TEXAS_CHIPS_NOT_ENOUGH",
		4104: "EC_TEXAS_PLAYER_IN_CHAIR",
		4105: "EC_TEXAS_CHAIR_OCCUPIED",
		4106: "EC_TEXAS_REQUEST_PARAM_ERROR",
		4107: "EC_TEXAS_PLAYER_HAS_STAND_UP",
		4108: "EC_TEXAS_PLAYER_HAS_FOLD_OR_ALLIN",
		4109: "EC_TEXAS_OPERATE_NOT_SUPPORTED",
		4110: "EC_TEXAS_BUILD_ROOM_FAILED",
		4111: "EC_TEXAS_REDIS_SAVE",
		4112: "EC_TEXAS_REDIS_DELETE",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_SUCCESS":                        0,
		"ERROR_FAILED":                         1,
		"ERROR_TIMEOUT":                        2,
		"EC_TEXAS_ROOM_NOT_LOAD":               4096,
		"EC_TEXAS_ROOM_NOT_FOUND":              4097,
		"EC_TEXAS_REDIS_LOAD_ROOM":             4098,
		"EC_TEXAS_TEXAS_ROOM_CFG_NOT_FOUND":    4099,
		"EC_TEXAS_TEXAS_MACHINE_CFG_NOT_FOUND": 4100,
		"EC_TEXAS_PLAYER_NOT_IN_ROOM":          4101,
		"EC_TEXAS_TABLE_FULL":                  4102,
		"EC_TEXAS_CHIPS_NOT_ENOUGH":            4103,
		"EC_TEXAS_PLAYER_IN_CHAIR":             4104,
		"EC_TEXAS_CHAIR_OCCUPIED":              4105,
		"EC_TEXAS_REQUEST_PARAM_ERROR":         4106,
		"EC_TEXAS_PLAYER_HAS_STAND_UP":         4107,
		"EC_TEXAS_PLAYER_HAS_FOLD_OR_ALLIN":    4108,
		"EC_TEXAS_OPERATE_NOT_SUPPORTED":       4109,
		"EC_TEXAS_BUILD_ROOM_FAILED":           4110,
		"EC_TEXAS_REDIS_SAVE":                  4111,
		"EC_TEXAS_REDIS_DELETE":                4112,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_errors_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_errors_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_errors_proto_rawDescGZIP(), []int{0}
}

var File_errors_proto protoreflect.FileDescriptor

var file_errors_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2a, 0xf3, 0x04, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x45,
	0x43, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x80, 0x20, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x43, 0x5f, 0x54,
	0x45, 0x58, 0x41, 0x53, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x81, 0x20, 0x12, 0x1d, 0x0a, 0x18, 0x45, 0x43, 0x5f, 0x54, 0x45, 0x58,
	0x41, 0x53, 0x5f, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x52, 0x4f,
	0x4f, 0x4d, 0x10, 0x82, 0x20, 0x12, 0x26, 0x0a, 0x21, 0x45, 0x43, 0x5f, 0x54, 0x45, 0x58, 0x41,
	0x53, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x43, 0x46, 0x47,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x83, 0x20, 0x12, 0x29, 0x0a,
	0x24, 0x45, 0x43, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f,
	0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x5f, 0x43, 0x46, 0x47, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x84, 0x20, 0x12, 0x20, 0x0a, 0x1b, 0x45, 0x43, 0x5f, 0x54,
	0x45, 0x58, 0x41, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x85, 0x20, 0x12, 0x18, 0x0a, 0x13, 0x45, 0x43,
	0x5f, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x46, 0x55, 0x4c,
	0x4c, 0x10, 0x86, 0x20, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x43, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53,
	0x5f, 0x43, 0x48, 0x49, 0x50, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47,
	0x48, 0x10, 0x87, 0x20, 0x12, 0x1d, 0x0a, 0x18, 0x45, 0x43, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x5f, 0x43, 0x48, 0x41, 0x49, 0x52,
	0x10, 0x88, 0x20, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x43, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f,
	0x43, 0x48, 0x41, 0x49, 0x52, 0x5f, 0x4f, 0x43, 0x43, 0x55, 0x50, 0x49, 0x45, 0x44, 0x10, 0x89,
	0x20, 0x12, 0x21, 0x0a, 0x1c, 0x45, 0x43, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x8a, 0x20, 0x12, 0x21, 0x0a, 0x1c, 0x45, 0x43, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x48, 0x41, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x4e,
	0x44, 0x5f, 0x55, 0x50, 0x10, 0x8b, 0x20, 0x12, 0x26, 0x0a, 0x21, 0x45, 0x43, 0x5f, 0x54, 0x45,
	0x58, 0x41, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x48, 0x41, 0x53, 0x5f, 0x46,
	0x4f, 0x4c, 0x44, 0x5f, 0x4f, 0x52, 0x5f, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x10, 0x8c, 0x20, 0x12,
	0x23, 0x0a, 0x1e, 0x45, 0x43, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45,
	0x44, 0x10, 0x8d, 0x20, 0x12, 0x1f, 0x0a, 0x1a, 0x45, 0x43, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53,
	0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x8e, 0x20, 0x12, 0x18, 0x0a, 0x13, 0x45, 0x43, 0x5f, 0x54, 0x45, 0x58, 0x41,
	0x53, 0x5f, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x10, 0x8f, 0x20, 0x12,
	0x1a, 0x0a, 0x15, 0x45, 0x43, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x52, 0x45, 0x44, 0x49,
	0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x90, 0x20, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_errors_proto_rawDescOnce sync.Once
	file_errors_proto_rawDescData []byte
)

func file_errors_proto_rawDescGZIP() []byte {
	file_errors_proto_rawDescOnce.Do(func() {
		file_errors_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_errors_proto_rawDesc), len(file_errors_proto_rawDesc)))
	})
	return file_errors_proto_rawDescData
}

var file_errors_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_errors_proto_goTypes = []any{
	(ErrorCode)(0), // 0: poker.ErrorCode
}
var file_errors_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_errors_proto_init() }
func file_errors_proto_init() {
	if File_errors_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_errors_proto_rawDesc), len(file_errors_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_errors_proto_goTypes,
		DependencyIndexes: file_errors_proto_depIdxs,
		EnumInfos:         file_errors_proto_enumTypes,
	}.Build()
	File_errors_proto = out.File
	file_errors_proto_goTypes = nil
	file_errors_proto_depIdxs = nil
}
