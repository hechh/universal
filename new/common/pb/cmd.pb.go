//
// 本代码由xlsx工具生成，请勿手动修改

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: cmd.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMD int32

const (
	CMD_CMD_EMPTY             CMD = 0        // 空参数
	CMD_GATE_LOGIN_REQUEST    CMD = 16777216 // 登录接口
	CMD_GATE_LOGIN_RESPONSE   CMD = 16777217 // 登录接口
	CMD_GATE_HEART_REQUEST    CMD = 16777218 //
	CMD_GATE_HEART_RESPONSE   CMD = 16777219 //
	CMD_TEXAS_ROOM_LIST_REQ   CMD = 50331648 // 查询房间列表
	CMD_TEXAS_ROOM_LIST_RSP   CMD = 50331649 // 查询房间列表
	CMD_TEXAS_EVENT_NOTIFY    CMD = 67108864 // 德州扑克游戏通知请求
	CMD_TEXAS_JOIN_ROOM_REQ   CMD = 67108866 // 德州扑克加入房间请求
	CMD_TEXAS_JOIN_ROOM_RSP   CMD = 67108867 // 德州扑克加入房间请求
	CMD_TEXAS_BUY_IN_REQ      CMD = 67108868 // 购买筹码请求
	CMD_TEXAS_BUY_IN_RSP      CMD = 67108869 // 购买筹码请求
	CMD_TEXAS_SIT_DOWN_REQ    CMD = 67108870 // 坐下请求
	CMD_TEXAS_SIT_DOWN_RSP    CMD = 67108871 // 坐下请求
	CMD_TEXAS_STAND_UP_REQ    CMD = 67108872 // 站起请求
	CMD_TEXAS_STAND_UP_RSP    CMD = 67108873 // 站起请求
	CMD_TEXAS_DO_BET_REQ      CMD = 67108880 // 下注请求
	CMD_TEXAS_DO_BET_RSP      CMD = 67108881 // 下注请求
	CMD_TEXAS_ROOM_INFO_REQ   CMD = 67108882 // 获取房间信息请求
	CMD_TEXAS_ROOM_INFO_RSP   CMD = 67108883 // 获取房间信息请求
	CMD_TEXAS_CREATE_ROOM_REQ CMD = 67108884 // 创建房间请求
	CMD_TEXAS_CREATE_ROOM_RSP CMD = 67108885 // 创建房间请求
	CMD_TEXAS_QUIT_ROOM_REQ   CMD = 67108886 // 退出房间请求
	CMD_TEXAS_QUIT_ROOM_RSP   CMD = 67108887 // 退出房间请求
)

// Enum value maps for CMD.
var (
	CMD_name = map[int32]string{
		0:        "CMD_EMPTY",
		16777216: "GATE_LOGIN_REQUEST",
		16777217: "GATE_LOGIN_RESPONSE",
		16777218: "GATE_HEART_REQUEST",
		16777219: "GATE_HEART_RESPONSE",
		50331648: "TEXAS_ROOM_LIST_REQ",
		50331649: "TEXAS_ROOM_LIST_RSP",
		67108864: "TEXAS_EVENT_NOTIFY",
		67108866: "TEXAS_JOIN_ROOM_REQ",
		67108867: "TEXAS_JOIN_ROOM_RSP",
		67108868: "TEXAS_BUY_IN_REQ",
		67108869: "TEXAS_BUY_IN_RSP",
		67108870: "TEXAS_SIT_DOWN_REQ",
		67108871: "TEXAS_SIT_DOWN_RSP",
		67108872: "TEXAS_STAND_UP_REQ",
		67108873: "TEXAS_STAND_UP_RSP",
		67108880: "TEXAS_DO_BET_REQ",
		67108881: "TEXAS_DO_BET_RSP",
		67108882: "TEXAS_ROOM_INFO_REQ",
		67108883: "TEXAS_ROOM_INFO_RSP",
		67108884: "TEXAS_CREATE_ROOM_REQ",
		67108885: "TEXAS_CREATE_ROOM_RSP",
		67108886: "TEXAS_QUIT_ROOM_REQ",
		67108887: "TEXAS_QUIT_ROOM_RSP",
	}
	CMD_value = map[string]int32{
		"CMD_EMPTY":             0,
		"GATE_LOGIN_REQUEST":    16777216,
		"GATE_LOGIN_RESPONSE":   16777217,
		"GATE_HEART_REQUEST":    16777218,
		"GATE_HEART_RESPONSE":   16777219,
		"TEXAS_ROOM_LIST_REQ":   50331648,
		"TEXAS_ROOM_LIST_RSP":   50331649,
		"TEXAS_EVENT_NOTIFY":    67108864,
		"TEXAS_JOIN_ROOM_REQ":   67108866,
		"TEXAS_JOIN_ROOM_RSP":   67108867,
		"TEXAS_BUY_IN_REQ":      67108868,
		"TEXAS_BUY_IN_RSP":      67108869,
		"TEXAS_SIT_DOWN_REQ":    67108870,
		"TEXAS_SIT_DOWN_RSP":    67108871,
		"TEXAS_STAND_UP_REQ":    67108872,
		"TEXAS_STAND_UP_RSP":    67108873,
		"TEXAS_DO_BET_REQ":      67108880,
		"TEXAS_DO_BET_RSP":      67108881,
		"TEXAS_ROOM_INFO_REQ":   67108882,
		"TEXAS_ROOM_INFO_RSP":   67108883,
		"TEXAS_CREATE_ROOM_REQ": 67108884,
		"TEXAS_CREATE_ROOM_RSP": 67108885,
		"TEXAS_QUIT_ROOM_REQ":   67108886,
		"TEXAS_QUIT_ROOM_RSP":   67108887,
	}
)

func (x CMD) Enum() *CMD {
	p := new(CMD)
	*p = x
	return p
}

func (x CMD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMD) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_proto_enumTypes[0].Descriptor()
}

func (CMD) Type() protoreflect.EnumType {
	return &file_cmd_proto_enumTypes[0]
}

func (x CMD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CMD.Descriptor instead.
func (CMD) EnumDescriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0}
}

var File_cmd_proto protoreflect.FileDescriptor

var file_cmd_proto_rawDesc = string([]byte{
	0x0a, 0x09, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x6f, 0x6b,
	0x65, 0x72, 0x2a, 0x89, 0x05, 0x0a, 0x03, 0x43, 0x4d, 0x44, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4d,
	0x44, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x12, 0x47, 0x41, 0x54,
	0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x80, 0x80, 0x80, 0x08, 0x12, 0x1a, 0x0a, 0x13, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x47,
	0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x81, 0x80, 0x80, 0x08,
	0x12, 0x19, 0x0a, 0x12, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x82, 0x80, 0x80, 0x08, 0x12, 0x1a, 0x0a, 0x13, 0x47,
	0x41, 0x54, 0x45, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x10, 0x83, 0x80, 0x80, 0x08, 0x12, 0x1a, 0x0a, 0x13, 0x54, 0x45, 0x58, 0x41, 0x53,
	0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x80,
	0x80, 0x80, 0x18, 0x12, 0x1a, 0x0a, 0x13, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x52, 0x4f, 0x4f,
	0x4d, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x81, 0x80, 0x80, 0x18, 0x12,
	0x19, 0x0a, 0x12, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x80, 0x80, 0x80, 0x20, 0x12, 0x1a, 0x0a, 0x13, 0x54, 0x45,
	0x58, 0x41, 0x53, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0x82, 0x80, 0x80, 0x20, 0x12, 0x1a, 0x0a, 0x13, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f,
	0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x83, 0x80,
	0x80, 0x20, 0x12, 0x17, 0x0a, 0x10, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x42, 0x55, 0x59, 0x5f,
	0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x84, 0x80, 0x80, 0x20, 0x12, 0x17, 0x0a, 0x10, 0x54,
	0x45, 0x58, 0x41, 0x53, 0x5f, 0x42, 0x55, 0x59, 0x5f, 0x49, 0x4e, 0x5f, 0x52, 0x53, 0x50, 0x10,
	0x85, 0x80, 0x80, 0x20, 0x12, 0x19, 0x0a, 0x12, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x53, 0x49,
	0x54, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x86, 0x80, 0x80, 0x20, 0x12,
	0x19, 0x0a, 0x12, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x53, 0x49, 0x54, 0x5f, 0x44, 0x4f, 0x57,
	0x4e, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x87, 0x80, 0x80, 0x20, 0x12, 0x19, 0x0a, 0x12, 0x54, 0x45,
	0x58, 0x41, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x5f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x51,
	0x10, 0x88, 0x80, 0x80, 0x20, 0x12, 0x19, 0x0a, 0x12, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x53,
	0x54, 0x41, 0x4e, 0x44, 0x5f, 0x55, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x89, 0x80, 0x80, 0x20,
	0x12, 0x17, 0x0a, 0x10, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x44, 0x4f, 0x5f, 0x42, 0x45, 0x54,
	0x5f, 0x52, 0x45, 0x51, 0x10, 0x90, 0x80, 0x80, 0x20, 0x12, 0x17, 0x0a, 0x10, 0x54, 0x45, 0x58,
	0x41, 0x53, 0x5f, 0x44, 0x4f, 0x5f, 0x42, 0x45, 0x54, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x91, 0x80,
	0x80, 0x20, 0x12, 0x1a, 0x0a, 0x13, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x52, 0x4f, 0x4f, 0x4d,
	0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x92, 0x80, 0x80, 0x20, 0x12, 0x1a,
	0x0a, 0x13, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x93, 0x80, 0x80, 0x20, 0x12, 0x1c, 0x0a, 0x15, 0x54, 0x45,
	0x58, 0x41, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0x94, 0x80, 0x80, 0x20, 0x12, 0x1c, 0x0a, 0x15, 0x54, 0x45, 0x58, 0x41,
	0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x53,
	0x50, 0x10, 0x95, 0x80, 0x80, 0x20, 0x12, 0x1a, 0x0a, 0x13, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f,
	0x51, 0x55, 0x49, 0x54, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x96, 0x80,
	0x80, 0x20, 0x12, 0x1a, 0x0a, 0x13, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x51, 0x55, 0x49, 0x54,
	0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x97, 0x80, 0x80, 0x20, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_cmd_proto_rawDescOnce sync.Once
	file_cmd_proto_rawDescData []byte
)

func file_cmd_proto_rawDescGZIP() []byte {
	file_cmd_proto_rawDescOnce.Do(func() {
		file_cmd_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cmd_proto_rawDesc), len(file_cmd_proto_rawDesc)))
	})
	return file_cmd_proto_rawDescData
}

var file_cmd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cmd_proto_goTypes = []any{
	(CMD)(0), // 0: poker.CMD
}
var file_cmd_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cmd_proto_init() }
func file_cmd_proto_init() {
	if File_cmd_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cmd_proto_rawDesc), len(file_cmd_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_proto_goTypes,
		DependencyIndexes: file_cmd_proto_depIdxs,
		EnumInfos:         file_cmd_proto_enumTypes,
	}.Build()
	File_cmd_proto = out.File
	file_cmd_proto_goTypes = nil
	file_cmd_proto_depIdxs = nil
}
