// Code generated by protoc-gen-go-xorm. DO NOT EDIT.
// Source: client_room_rummy.proto

package pb

import (
	"github.com/golang/protobuf/proto"
)

func (x *RummyCardGroup) SetCards(val []uint32) {
	x.Cards = val
}

func (x *RummyCardGroup) SetGroupType(val RummyGroupType) {
	x.GroupType = val
}

func (x *RummyCardGroup) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyCardGroup) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyZhuangCard) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *RummyZhuangCard) SetCard(val uint32) {
	x.Card = val
}

func (x *RummyZhuangCard) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyZhuangCard) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummySettlePlayerInfo) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *RummySettlePlayerInfo) SetCardGroup(val []*RummyCardGroup) {
	x.CardGroup = val
}

func (x *RummySettlePlayerInfo) SetScore(val int64) {
	x.Score = val
}

func (x *RummySettlePlayerInfo) SetCoin(val int64) {
	x.Coin = val
}

func (x *RummySettlePlayerInfo) SetState(val RummyPlayState) {
	x.State = val
}

func (x *RummySettlePlayerInfo) SetNickName(val string) {
	x.NickName = val
}

func (x *RummySettlePlayerInfo) SetBonusCash(val int64) {
	x.BonusCash = val
}

func (x *RummySettlePlayerInfo) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySettlePlayerInfo) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyTotalSettlePlayer) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *RummyTotalSettlePlayer) SetNickName(val string) {
	x.NickName = val
}

func (x *RummyTotalSettlePlayer) SetPicUrl(val string) {
	x.PicUrl = val
}

func (x *RummyTotalSettlePlayer) SetState(val RummyPlayState) {
	x.State = val
}

func (x *RummyTotalSettlePlayer) SetTotalScore(val int64) {
	x.TotalScore = val
}

func (x *RummyTotalSettlePlayer) SetPrize(val string) {
	x.Prize = val
}

func (x *RummyTotalSettlePlayer) SetBonusCash(val string) {
	x.BonusCash = val
}

func (x *RummyTotalSettlePlayer) SetVipPoints(val string) {
	x.VipPoints = val
}

func (x *RummyTotalSettlePlayer) SetNewIcon(val string) {
	x.NewIcon = val
}

func (x *RummyTotalSettlePlayer) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyTotalSettlePlayer) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyScoreBoardPlayer) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *RummyScoreBoardPlayer) SetNickName(val string) {
	x.NickName = val
}

func (x *RummyScoreBoardPlayer) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyScoreBoardPlayer) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyPlayerScore) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *RummyPlayerScore) SetScore(val int64) {
	x.Score = val
}

func (x *RummyPlayerScore) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyPlayerScore) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyRoundSettle) SetRound(val int32) {
	x.Round = val
}

func (x *RummyRoundSettle) SetScores(val []*RummyPlayerScore) {
	x.Scores = val
}

func (x *RummyRoundSettle) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyRoundSettle) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyRoomPlayer) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *RummyRoomPlayer) SetPlayerNick(val string) {
	x.PlayerNick = val
}

func (x *RummyRoomPlayer) SetPicUrl(val string) {
	x.PicUrl = val
}

func (x *RummyRoomPlayer) SetState(val RummyPlayState) {
	x.State = val
}

func (x *RummyRoomPlayer) SetHealth(val RummyPlayHealth) {
	x.Health = val
}

func (x *RummyRoomPlayer) SetCoin(val uint64) {
	x.Coin = val
}

func (x *RummyRoomPlayer) SetSeat(val uint32) {
	x.Seat = val
}

func (x *RummyRoomPlayer) SetVip(val int32) {
	x.Vip = val
}

func (x *RummyRoomPlayer) SetLocation(val string) {
	x.Location = val
}

func (x *RummyRoomPlayer) SetPrivate(val *RummyPlayerRumtime) {
	x.Private = val
}

func (x *RummyRoomPlayer) SetTimeoutCount(val uint32) {
	x.TimeoutCount = val
}

func (x *RummyRoomPlayer) SetReadyTimeout(val int64) {
	x.ReadyTimeout = val
}

func (x *RummyRoomPlayer) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyRoomPlayer) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyRoomData) SetStage(val GameState) {
	x.Stage = val
}

func (x *RummyRoomData) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyRoomData) SetGameId(val uint32) {
	x.GameId = val
}

func (x *RummyRoomData) SetRoomName(val string) {
	x.RoomName = val
}

func (x *RummyRoomData) SetCommon(val *RummyCommon) {
	x.Common = val
}

func (x *RummyRoomData) SetMatch(val *MatchParam) {
	x.Match = val
}

func (x *RummyRoomData) SetMachineCfg(val *RummyMachineConfig) {
	x.MachineCfg = val
}

func (x *RummyRoomData) SetRoomCfg(val *RummyConfig) {
	x.RoomCfg = val
}

func (x *RummyRoomData) SetPrivate(val *RummyPrivate) {
	x.Private = val
}

func (x *RummyRoomData) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyRoomData) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyRoomPubData) SetStage(val GameState) {
	x.Stage = val
}

func (x *RummyRoomPubData) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyRoomPubData) SetGameId(val uint32) {
	x.GameId = val
}

func (x *RummyRoomPubData) SetRoomName(val string) {
	x.RoomName = val
}

func (x *RummyRoomPubData) SetCommon(val *RummyCommon) {
	x.Common = val
}

func (x *RummyRoomPubData) SetMatch(val *MatchParam) {
	x.Match = val
}

func (x *RummyRoomPubData) SetRoomCfg(val *RummyConfig) {
	x.RoomCfg = val
}

func (x *RummyRoomPubData) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyRoomPubData) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyPrivate) SetCardIdx(val uint32) {
	x.CardIdx = val
}

func (x *RummyPrivate) SetCards(val []uint32) {
	x.Cards = val
}

func (x *RummyPrivate) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyPrivate) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyCommon) SetSeats(val map[uint32]uint64) {
	x.Seats = val
}

func (x *RummyCommon) SetPlayers(val map[uint64]*RummyRoomPlayer) {
	x.Players = val
}

func (x *RummyCommon) SetPlayerIds(val []uint64) {
	x.PlayerIds = val
}

func (x *RummyCommon) SetGhostCard(val uint32) {
	x.GhostCard = val
}

func (x *RummyCommon) SetShowCard(val uint32) {
	x.ShowCard = val
}

func (x *RummyCommon) SetZhuangId(val uint64) {
	x.ZhuangId = val
}

func (x *RummyCommon) SetTimeOut(val int64) {
	x.TimeOut = val
}

func (x *RummyCommon) SetFixCard(val uint32) {
	x.FixCard = val
}

func (x *RummyCommon) SetShowCard2(val uint32) {
	x.ShowCard2 = val
}

func (x *RummyCommon) SetCreateTime(val int64) {
	x.CreateTime = val
}

func (x *RummyCommon) SetWinnerId(val uint64) {
	x.WinnerId = val
}

func (x *RummyCommon) SetGameFinish(val bool) {
	x.GameFinish = val
}

func (x *RummyCommon) SetOprPlayer(val *RummyOprPlayer) {
	x.OprPlayer = val
}

func (x *RummyCommon) SetEmptySeats(val []uint32) {
	x.EmptySeats = val
}

func (x *RummyCommon) SetTotalTime(val int64) {
	x.TotalTime = val
}

func (x *RummyCommon) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyCommon) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyOprPlayer) SetStep(val RummyRoundStep) {
	x.Step = val
}

func (x *RummyOprPlayer) SetCurOprPlayerId(val uint64) {
	x.CurOprPlayerId = val
}

func (x *RummyOprPlayer) SetOprCurId(val uint32) {
	x.OprCurId = val
}

func (x *RummyOprPlayer) SetPrevOutUid(val uint64) {
	x.PrevOutUid = val
}

func (x *RummyOprPlayer) SetIsEat(val bool) {
	x.IsEat = val
}

func (x *RummyOprPlayer) SetScorePool(val int64) {
	x.ScorePool = val
}

func (x *RummyOprPlayer) SetRound(val uint32) {
	x.Round = val
}

func (x *RummyOprPlayer) SetZhuangId(val uint64) {
	x.ZhuangId = val
}

func (x *RummyOprPlayer) SetOutCards(val []uint32) {
	x.OutCards = val
}

func (x *RummyOprPlayer) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyOprPlayer) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyPlayerRumtime) SetIsGrabCard(val bool) {
	x.IsGrabCard = val
}

func (x *RummyPlayerRumtime) SetHandCards(val []uint32) {
	x.HandCards = val
}

func (x *RummyPlayerRumtime) SetCardGroup(val []*RummyCardGroup) {
	x.CardGroup = val
}

func (x *RummyPlayerRumtime) SetScore(val int64) {
	x.Score = val
}

func (x *RummyPlayerRumtime) SetPrevCard(val uint32) {
	x.PrevCard = val
}

func (x *RummyPlayerRumtime) SetOutCards(val []uint32) {
	x.OutCards = val
}

func (x *RummyPlayerRumtime) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyPlayerRumtime) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *MatchParam) SetMatch(val uint32) {
	x.Match = val
}

func (x *MatchParam) SetStartTime(val int64) {
	x.StartTime = val
}

func (x *MatchParam) SetEndTime(val int64) {
	x.EndTime = val
}

func (x *MatchParam) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *MatchParam) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyJoinRoomReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyJoinRoomReq) SetPlayerInfo(val *PlayerInfo) {
	x.PlayerInfo = val
}

func (x *RummyJoinRoomReq) SetIsChange(val bool) {
	x.IsChange = val
}

func (x *RummyJoinRoomReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyJoinRoomReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyJoinRoomRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummyJoinRoomRsp) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyJoinRoomRsp) SetRoomInfo(val *RummyRoomPubData) {
	x.RoomInfo = val
}

func (x *RummyJoinRoomRsp) SetIsReconnect(val bool) {
	x.IsReconnect = val
}

func (x *RummyJoinRoomRsp) SetGaveScore(val int64) {
	x.GaveScore = val
}

func (x *RummyJoinRoomRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyJoinRoomRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyEventNotify) SetEvent(val RummyEventType) {
	x.Event = val
}

func (x *RummyEventNotify) SetContent(val []byte) {
	x.Content = val
}

func (x *RummyEventNotify) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyEventNotify) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyEnterDeskNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyEnterDeskNtf) SetPlayer(val *RummyRoomPlayer) {
	x.Player = val
}

func (x *RummyEnterDeskNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyEnterDeskNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyQuitRoomReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyQuitRoomReq) SetIsChange(val bool) {
	x.IsChange = val
}

func (x *RummyQuitRoomReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyQuitRoomReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyQuitRoomRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummyQuitRoomRsp) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyQuitRoomRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyQuitRoomRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyQuitRoomNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyQuitRoomNtf) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *RummyQuitRoomNtf) SetLeaveType(val RummyLeaveType) {
	x.LeaveType = val
}

func (x *RummyQuitRoomNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyQuitRoomNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyReadyStartGameNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyReadyStartGameNtf) SetTimeOut(val int64) {
	x.TimeOut = val
}

func (x *RummyReadyStartGameNtf) SetTotalTime(val int64) {
	x.TotalTime = val
}

func (x *RummyReadyStartGameNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyReadyStartGameNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyStartGameNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyStartGameNtf) SetZhuangId(val uint64) {
	x.ZhuangId = val
}

func (x *RummyStartGameNtf) SetCurMatch(val uint32) {
	x.CurMatch = val
}

func (x *RummyStartGameNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyStartGameNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummySetZhuangNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummySetZhuangNtf) SetCards(val []*RummyZhuangCard) {
	x.Cards = val
}

func (x *RummySetZhuangNtf) SetZhuangId(val uint64) {
	x.ZhuangId = val
}

func (x *RummySetZhuangNtf) SetTimeOut(val uint64) {
	x.TimeOut = val
}

func (x *RummySetZhuangNtf) SetTotalTime(val int64) {
	x.TotalTime = val
}

func (x *RummySetZhuangNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySetZhuangNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyDealNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyDealNtf) SetHandCards(val []uint32) {
	x.HandCards = val
}

func (x *RummyDealNtf) SetGhostCard(val uint32) {
	x.GhostCard = val
}

func (x *RummyDealNtf) SetShowCard(val uint32) {
	x.ShowCard = val
}

func (x *RummyDealNtf) SetTimeOut(val int64) {
	x.TimeOut = val
}

func (x *RummyDealNtf) SetGroups(val []*RummyCardGroup) {
	x.Groups = val
}

func (x *RummyDealNtf) SetGroupsScore(val int64) {
	x.GroupsScore = val
}

func (x *RummyDealNtf) SetShowCard2(val uint32) {
	x.ShowCard2 = val
}

func (x *RummyDealNtf) SetTotalTime(val int64) {
	x.TotalTime = val
}

func (x *RummyDealNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyDealNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyPlayCardNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyPlayCardNtf) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *RummyPlayCardNtf) SetPlayStep(val int32) {
	x.PlayStep = val
}

func (x *RummyPlayCardNtf) SetIsChi(val bool) {
	x.IsChi = val
}

func (x *RummyPlayCardNtf) SetTimeOut(val int64) {
	x.TimeOut = val
}

func (x *RummyPlayCardNtf) SetTotalTime(val int64) {
	x.TotalTime = val
}

func (x *RummyPlayCardNtf) SetGaveScore(val int64) {
	x.GaveScore = val
}

func (x *RummyPlayCardNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyPlayCardNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyOprCardReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyOprCardReq) SetOprType(val RummyOprType) {
	x.OprType = val
}

func (x *RummyOprCardReq) SetOprCard(val uint32) {
	x.OprCard = val
}

func (x *RummyOprCardReq) SetGroups(val []*RummyCardGroup) {
	x.Groups = val
}

func (x *RummyOprCardReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyOprCardReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyOprCardRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummyOprCardRsp) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyOprCardRsp) SetOprCard(val uint32) {
	x.OprCard = val
}

func (x *RummyOprCardRsp) SetPlayStep(val int32) {
	x.PlayStep = val
}

func (x *RummyOprCardRsp) SetIsEat(val bool) {
	x.IsEat = val
}

func (x *RummyOprCardRsp) SetOprType(val RummyOprType) {
	x.OprType = val
}

func (x *RummyOprCardRsp) SetGroups(val []*RummyCardGroup) {
	x.Groups = val
}

func (x *RummyOprCardRsp) SetGroupsScore(val int64) {
	x.GroupsScore = val
}

func (x *RummyOprCardRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyOprCardRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyOprCardNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyOprCardNtf) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *RummyOprCardNtf) SetOprType(val RummyOprType) {
	x.OprType = val
}

func (x *RummyOprCardNtf) SetOprCard(val uint32) {
	x.OprCard = val
}

func (x *RummyOprCardNtf) SetShowCard(val uint32) {
	x.ShowCard = val
}

func (x *RummyOprCardNtf) SetShowCard2(val uint32) {
	x.ShowCard2 = val
}

func (x *RummyOprCardNtf) SetScorePoll(val int64) {
	x.ScorePoll = val
}

func (x *RummyOprCardNtf) SetDrawCount(val uint32) {
	x.DrawCount = val
}

func (x *RummyOprCardNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyOprCardNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyFixCardReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyFixCardReq) SetGroups(val []*RummyCardGroup) {
	x.Groups = val
}

func (x *RummyFixCardReq) SetScore(val int64) {
	x.Score = val
}

func (x *RummyFixCardReq) SetOprCard(val uint32) {
	x.OprCard = val
}

func (x *RummyFixCardReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyFixCardReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyFixCardRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummyFixCardRsp) SetScore(val int64) {
	x.Score = val
}

func (x *RummyFixCardRsp) SetGroups(val []*RummyCardGroup) {
	x.Groups = val
}

func (x *RummyFixCardRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyFixCardRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyFixCardPlayersNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyFixCardPlayersNtf) SetTimeOut(val int64) {
	x.TimeOut = val
}

func (x *RummyFixCardPlayersNtf) SetPlayers(val []uint64) {
	x.Players = val
}

func (x *RummyFixCardPlayersNtf) SetWinId(val uint64) {
	x.WinId = val
}

func (x *RummyFixCardPlayersNtf) SetCurPlayerId(val uint64) {
	x.CurPlayerId = val
}

func (x *RummyFixCardPlayersNtf) SetTotalTime(val int64) {
	x.TotalTime = val
}

func (x *RummyFixCardPlayersNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyFixCardPlayersNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummySettleNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummySettleNtf) SetPlayers(val []*RummySettlePlayerInfo) {
	x.Players = val
}

func (x *RummySettleNtf) SetTimeOut(val int64) {
	x.TimeOut = val
}

func (x *RummySettleNtf) SetRake(val int64) {
	x.Rake = val
}

func (x *RummySettleNtf) SetGhostCard(val uint32) {
	x.GhostCard = val
}

func (x *RummySettleNtf) SetTotalTime(val int64) {
	x.TotalTime = val
}

func (x *RummySettleNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySettleNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyPlayerActionNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyPlayerActionNtf) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *RummyPlayerActionNtf) SetType(val RummyPlayerActionType) {
	x.Type = val
}

func (x *RummyPlayerActionNtf) SetOprCard(val uint32) {
	x.OprCard = val
}

func (x *RummyPlayerActionNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyPlayerActionNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyGiveUpNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyGiveUpNtf) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *RummyGiveUpNtf) SetScore(val int64) {
	x.Score = val
}

func (x *RummyGiveUpNtf) SetIsFinish(val bool) {
	x.IsFinish = val
}

func (x *RummyGiveUpNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyGiveUpNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummySaveCardGroupReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummySaveCardGroupReq) SetGroups(val []*RummyCardGroup) {
	x.Groups = val
}

func (x *RummySaveCardGroupReq) SetLastReq(val bool) {
	x.LastReq = val
}

func (x *RummySaveCardGroupReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySaveCardGroupReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummySaveCardGroupRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummySaveCardGroupRsp) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummySaveCardGroupRsp) SetScore(val int64) {
	x.Score = val
}

func (x *RummySaveCardGroupRsp) SetGroups(val []*RummyCardGroup) {
	x.Groups = val
}

func (x *RummySaveCardGroupRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySaveCardGroupRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyGetScoreBoardReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyGetScoreBoardReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyGetScoreBoardReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyGetScoreBoardRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummyGetScoreBoardRsp) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyGetScoreBoardRsp) SetPlayers(val []*RummyScoreBoardPlayer) {
	x.Players = val
}

func (x *RummyGetScoreBoardRsp) SetRounds(val []*RummyRoundSettle) {
	x.Rounds = val
}

func (x *RummyGetScoreBoardRsp) SetInitScore(val int64) {
	x.InitScore = val
}

func (x *RummyGetScoreBoardRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyGetScoreBoardRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyGetLastSettleReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyGetLastSettleReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyGetLastSettleReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyGetLastSettleRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummyGetLastSettleRsp) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyGetLastSettleRsp) SetPlayers(val []*RummySettlePlayerInfo) {
	x.Players = val
}

func (x *RummyGetLastSettleRsp) SetGhostCard(val uint32) {
	x.GhostCard = val
}

func (x *RummyGetLastSettleRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyGetLastSettleRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyPauseDeskMsgReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyPauseDeskMsgReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyPauseDeskMsgReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyPauseDeskMsgRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummyPauseDeskMsgRsp) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyPauseDeskMsgRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyPauseDeskMsgRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *PlayerOutCards) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *PlayerOutCards) SetNickName(val string) {
	x.NickName = val
}

func (x *PlayerOutCards) SetCards(val []uint32) {
	x.Cards = val
}

func (x *PlayerOutCards) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *PlayerOutCards) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyGetOutCardsReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyGetOutCardsReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyGetOutCardsReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyGetOutCardsRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummyGetOutCardsRsp) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyGetOutCardsRsp) SetOutCards(val []uint32) {
	x.OutCards = val
}

func (x *RummyGetOutCardsRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyGetOutCardsRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyReadyRoomReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyReadyRoomReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyReadyRoomReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyReadyRoomRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummyReadyRoomRsp) SetStage(val GameState) {
	x.Stage = val
}

func (x *RummyReadyRoomRsp) SetRoomInfo(val *RummyRoomPubData) {
	x.RoomInfo = val
}

func (x *RummyReadyRoomRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyReadyRoomRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyReadyRoomNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyReadyRoomNtf) SetPlayerId(val []uint64) {
	x.PlayerId = val
}

func (x *RummyReadyRoomNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyReadyRoomNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyShuffleNtf) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyShuffleNtf) SetDrawCount(val uint32) {
	x.DrawCount = val
}

func (x *RummyShuffleNtf) SetShowCard(val uint32) {
	x.ShowCard = val
}

func (x *RummyShuffleNtf) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyShuffleNtf) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}
