// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: client_match.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取房间列表请求
type TexasRoomListReq struct {
	state         protoimpl.MessageState `xorm:"-"` 
	GameType      int32                  `protobuf:"varint,1,opt,name=game_type,json=gameType,proto3" json:"game_type,omitempty"` // 游戏类型
	CoinType      int32                  `protobuf:"varint,2,opt,name=coin_type,json=coinType,proto3" json:"coin_type,omitempty"` // 币种类型
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *TexasRoomListReq) Reset() {
	*x = TexasRoomListReq{}
	mi := &file_client_match_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TexasRoomListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TexasRoomListReq) ProtoMessage() {}

func (x *TexasRoomListReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_match_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TexasRoomListReq.ProtoReflect.Descriptor instead.
func (*TexasRoomListReq) Descriptor() ([]byte, []int) {
	return file_client_match_proto_rawDescGZIP(), []int{0}
}

func (x *TexasRoomListReq) GetGameType() int32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

func (x *TexasRoomListReq) GetCoinType() int32 {
	if x != nil {
		return x.CoinType
	}
	return 0
}

type TexasRoomListRsp struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Head          *RspHead               `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	RoomList      []*TexasRoomInfo       `protobuf:"bytes,2,rep,name=room_list,json=roomList,proto3" json:"room_list,omitempty"` // 房间列表
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *TexasRoomListRsp) Reset() {
	*x = TexasRoomListRsp{}
	mi := &file_client_match_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TexasRoomListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TexasRoomListRsp) ProtoMessage() {}

func (x *TexasRoomListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_match_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TexasRoomListRsp.ProtoReflect.Descriptor instead.
func (*TexasRoomListRsp) Descriptor() ([]byte, []int) {
	return file_client_match_proto_rawDescGZIP(), []int{1}
}

func (x *TexasRoomListRsp) GetHead() *RspHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *TexasRoomListRsp) GetRoomList() []*TexasRoomInfo {
	if x != nil {
		return x.RoomList
	}
	return nil
}

type RummyRoomListReq struct {
	state         protoimpl.MessageState `xorm:"-"` 
	GameType      int32                  `protobuf:"varint,1,opt,name=GameType,proto3" json:"GameType,omitempty"` // 游戏类型
	CoinType      int32                  `protobuf:"varint,2,opt,name=CoinType,proto3" json:"CoinType,omitempty"` // 币种类型
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *RummyRoomListReq) Reset() {
	*x = RummyRoomListReq{}
	mi := &file_client_match_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RummyRoomListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RummyRoomListReq) ProtoMessage() {}

func (x *RummyRoomListReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_match_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RummyRoomListReq.ProtoReflect.Descriptor instead.
func (*RummyRoomListReq) Descriptor() ([]byte, []int) {
	return file_client_match_proto_rawDescGZIP(), []int{2}
}

func (x *RummyRoomListReq) GetGameType() int32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

func (x *RummyRoomListReq) GetCoinType() int32 {
	if x != nil {
		return x.CoinType
	}
	return 0
}

type RummyRoomListRsp struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Head          *RspHead               `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	RoomList      []*RummyRoomPubData    `protobuf:"bytes,2,rep,name=room_list,json=roomList,proto3" json:"room_list,omitempty"` // 房间列表
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *RummyRoomListRsp) Reset() {
	*x = RummyRoomListRsp{}
	mi := &file_client_match_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RummyRoomListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RummyRoomListRsp) ProtoMessage() {}

func (x *RummyRoomListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_match_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RummyRoomListRsp.ProtoReflect.Descriptor instead.
func (*RummyRoomListRsp) Descriptor() ([]byte, []int) {
	return file_client_match_proto_rawDescGZIP(), []int{3}
}

func (x *RummyRoomListRsp) GetHead() *RspHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *RummyRoomListRsp) GetRoomList() []*RummyRoomPubData {
	if x != nil {
		return x.RoomList
	}
	return nil
}

type HasRoomReq struct {
	state         protoimpl.MessageState `xorm:"-"` 
	RoomId        uint64                 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *HasRoomReq) Reset() {
	*x = HasRoomReq{}
	mi := &file_client_match_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasRoomReq) ProtoMessage() {}

func (x *HasRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_match_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasRoomReq.ProtoReflect.Descriptor instead.
func (*HasRoomReq) Descriptor() ([]byte, []int) {
	return file_client_match_proto_rawDescGZIP(), []int{4}
}

func (x *HasRoomReq) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type HasRoomRsp struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Head          *RspHead               `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	IsExist       bool                   `protobuf:"varint,2,opt,name=is_exist,json=isExist,proto3" json:"is_exist,omitempty"`
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *HasRoomRsp) Reset() {
	*x = HasRoomRsp{}
	mi := &file_client_match_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasRoomRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasRoomRsp) ProtoMessage() {}

func (x *HasRoomRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_match_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasRoomRsp.ProtoReflect.Descriptor instead.
func (*HasRoomRsp) Descriptor() ([]byte, []int) {
	return file_client_match_proto_rawDescGZIP(), []int{5}
}

func (x *HasRoomRsp) GetHead() *RspHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *HasRoomRsp) GetIsExist() bool {
	if x != nil {
		return x.IsExist
	}
	return false
}

var File_client_match_proto protoreflect.FileDescriptor

var file_client_match_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x1a, 0x0c, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x72, 0x75, 0x6d, 0x6d, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x10, 0x54, 0x65, 0x78, 0x61, 0x73, 0x52, 0x6f,
	0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x69, 0x0a, 0x10, 0x54, 0x65, 0x78, 0x61, 0x73, 0x52, 0x6f, 0x6f, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x73,
	0x70, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x61, 0x73, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4a,
	0x0a, 0x10, 0x52, 0x75, 0x6d, 0x6d, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6c, 0x0a, 0x10, 0x52, 0x75,
	0x6d, 0x6d, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x22,
	0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65,
	0x61, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x75,
	0x6d, 0x6d, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x75, 0x62, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x72, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22,
	0x4b, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a,
	0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_client_match_proto_rawDescOnce sync.Once
	file_client_match_proto_rawDescData []byte
)

func file_client_match_proto_rawDescGZIP() []byte {
	file_client_match_proto_rawDescOnce.Do(func() {
		file_client_match_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_client_match_proto_rawDesc), len(file_client_match_proto_rawDesc)))
	})
	return file_client_match_proto_rawDescData
}

var file_client_match_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_client_match_proto_goTypes = []any{
	(*TexasRoomListReq)(nil), // 0: poker.TexasRoomListReq
	(*TexasRoomListRsp)(nil), // 1: poker.TexasRoomListRsp
	(*RummyRoomListReq)(nil), // 2: poker.RummyRoomListReq
	(*RummyRoomListRsp)(nil), // 3: poker.RummyRoomListRsp
	(*HasRoomReq)(nil),       // 4: poker.HasRoomReq
	(*HasRoomRsp)(nil),       // 5: poker.HasRoomRsp
	(*RspHead)(nil),          // 6: poker.RspHead
	(*TexasRoomInfo)(nil),    // 7: poker.TexasRoomInfo
	(*RummyRoomPubData)(nil), // 8: poker.RummyRoomPubData
}
var file_client_match_proto_depIdxs = []int32{
	6, // 0: poker.TexasRoomListRsp.head:type_name -> poker.RspHead
	7, // 1: poker.TexasRoomListRsp.room_list:type_name -> poker.TexasRoomInfo
	6, // 2: poker.RummyRoomListRsp.head:type_name -> poker.RspHead
	8, // 3: poker.RummyRoomListRsp.room_list:type_name -> poker.RummyRoomPubData
	6, // 4: poker.HasRoomRsp.head:type_name -> poker.RspHead
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_client_match_proto_init() }
func file_client_match_proto_init() {
	if File_client_match_proto != nil {
		return
	}
	file_packet_proto_init()
	file_client_room_proto_init()
	file_client_room_rummy_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_client_match_proto_rawDesc), len(file_client_match_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_match_proto_goTypes,
		DependencyIndexes: file_client_match_proto_depIdxs,
		MessageInfos:      file_client_match_proto_msgTypes,
	}.Build()
	File_client_match_proto = out.File
	file_client_match_proto_goTypes = nil
	file_client_match_proto_depIdxs = nil
}
