// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: packet.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// -------框架核心协议，请勿修改-------
// 发送类型
type SendType int32

const (
	SendType_SendTypeNode SendType = 0 // 发送类型-无
	SendType_POINT        SendType = 1 // 发送类型-点对点
	SendType_BROADCAST    SendType = 2 // 发送类型-广播
)

// Enum value maps for SendType.
var (
	SendType_name = map[int32]string{
		0: "SendTypeNode",
		1: "POINT",
		2: "BROADCAST",
	}
	SendType_value = map[string]int32{
		"SendTypeNode": 0,
		"POINT":        1,
		"BROADCAST":    2,
	}
)

func (x SendType) Enum() *SendType {
	p := new(SendType)
	*p = x
	return p
}

func (x SendType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendType) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_proto_enumTypes[0].Descriptor()
}

func (SendType) Type() protoreflect.EnumType {
	return &file_packet_proto_enumTypes[0]
}

func (x SendType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendType.Descriptor instead.
func (SendType) EnumDescriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{0}
}

// 节点信息
type Node struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                      // 节点名称
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`                      // 节点地址
	Type          NodeType               `protobuf:"varint,3,opt,name=type,proto3,enum=poker.NodeType" json:"type,omitempty"` // 节点类型
	Id            int32                  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                         // 节点ID
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_packet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Node) GetType() NodeType {
	if x != nil {
		return x.Type
	}
	return NodeType_NodeTypeBegin
}

func (x *Node) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 玩家路由信息
type Router struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Gate          int32                  `protobuf:"varint,1,opt,name=gate,proto3" json:"gate,omitempty"`       // 网关服务
	Room          int32                  `protobuf:"varint,2,opt,name=room,proto3" json:"room,omitempty"`       // 房间服务
	Match         int32                  `protobuf:"varint,3,opt,name=match,proto3" json:"match,omitempty"`     // 匹配服务
	Db            int32                  `protobuf:"varint,4,opt,name=db,proto3" json:"db,omitempty"`           // 数据服务
	Builder       int32                  `protobuf:"varint,5,opt,name=builder,proto3" json:"builder,omitempty"` // 构建服务
	Gm            int32                  `protobuf:"varint,6,opt,name=gm,proto3" json:"gm,omitempty"`           // GM服务
	Game          int32                  `protobuf:"varint,7,opt,name=game,proto3" json:"game,omitempty"`       // 游戏服务
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *Router) Reset() {
	*x = Router{}
	mi := &file_packet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Router) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Router) ProtoMessage() {}

func (x *Router) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Router.ProtoReflect.Descriptor instead.
func (*Router) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{1}
}

func (x *Router) GetGate() int32 {
	if x != nil {
		return x.Gate
	}
	return 0
}

func (x *Router) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *Router) GetMatch() int32 {
	if x != nil {
		return x.Match
	}
	return 0
}

func (x *Router) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Router) GetBuilder() int32 {
	if x != nil {
		return x.Builder
	}
	return 0
}

func (x *Router) GetGm() int32 {
	if x != nil {
		return x.Gm
	}
	return 0
}

func (x *Router) GetGame() int32 {
	if x != nil {
		return x.Game
	}
	return 0
}

type NodeRouter struct {
	state         protoimpl.MessageState `xorm:"-"` 
	NodeType      NodeType               `protobuf:"varint,1,opt,name=node_type,json=nodeType,proto3,enum=poker.NodeType" json:"node_type,omitempty"`         // 节点类型
	NodeId        int32                  `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                                   // 节点ID
	ActorName     string                 `protobuf:"bytes,3,opt,name=actor_name,json=actorName,proto3" json:"actor_name,omitempty"`                           // 路由ID类型
	FuncName      string                 `protobuf:"bytes,4,opt,name=func_name,json=funcName,proto3" json:"func_name,omitempty"`                              // 消息来源Actor函数名称
	ActorId       uint64                 `protobuf:"varint,5,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`                                // 路由ID
	RouterType    RouterType             `protobuf:"varint,6,opt,name=router_type,json=routerType,proto3,enum=poker.RouterType" json:"router_type,omitempty"` // 路由类型
	Router        *Router                `protobuf:"bytes,7,opt,name=router,proto3" json:"router,omitempty"`                                                  // 路由信息
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *NodeRouter) Reset() {
	*x = NodeRouter{}
	mi := &file_packet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeRouter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRouter) ProtoMessage() {}

func (x *NodeRouter) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRouter.ProtoReflect.Descriptor instead.
func (*NodeRouter) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{2}
}

func (x *NodeRouter) GetNodeType() NodeType {
	if x != nil {
		return x.NodeType
	}
	return NodeType_NodeTypeBegin
}

func (x *NodeRouter) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeRouter) GetActorName() string {
	if x != nil {
		return x.ActorName
	}
	return ""
}

func (x *NodeRouter) GetFuncName() string {
	if x != nil {
		return x.FuncName
	}
	return ""
}

func (x *NodeRouter) GetActorId() uint64 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *NodeRouter) GetRouterType() RouterType {
	if x != nil {
		return x.RouterType
	}
	return RouterType_RouterTypeNone
}

func (x *NodeRouter) GetRouter() *Router {
	if x != nil {
		return x.Router
	}
	return nil
}

// 协议头
type Head struct {
	state         protoimpl.MessageState `xorm:"-"` 
	SendType      SendType               `protobuf:"varint,1,opt,name=send_type,json=sendType,proto3,enum=poker.SendType" json:"send_type,omitempty"` // 消息发送类型
	Src           *NodeRouter            `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`                                                // 消息来源Actor路由信息
	Dst           *NodeRouter            `protobuf:"bytes,3,opt,name=dst,proto3" json:"dst,omitempty"`                                                // 消息来源Actor路由信息
	ActorName     string                 `protobuf:"bytes,4,opt,name=actor_name,json=actorName,proto3" json:"actor_name,omitempty"`                   // 路由ID类型
	FuncName      string                 `protobuf:"bytes,5,opt,name=func_name,json=funcName,proto3" json:"func_name,omitempty"`                      // 消息来源Actor函数名称
	ActorId       uint64                 `protobuf:"varint,6,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`                        // 路由ID
	Uid           uint64                 `protobuf:"varint,7,opt,name=uid,proto3" json:"uid,omitempty"`                                               // 玩家ID
	Seq           uint32                 `protobuf:"varint,8,opt,name=seq,proto3" json:"seq,omitempty"`                                               // 消息序列号
	Cmd           uint32                 `protobuf:"varint,9,opt,name=cmd,proto3" json:"cmd,omitempty"`                                               // 消息命令
	Reply         string                 `protobuf:"bytes,10,opt,name=reply,proto3" json:"reply,omitempty"`                                           // 消息回复Actor名称
	Reference     int32                  `protobuf:"varint,11,opt,name=reference,proto3" json:"reference,omitempty"`                                  // 消息引用计数
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *Head) Reset() {
	*x = Head{}
	mi := &file_packet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Head) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Head) ProtoMessage() {}

func (x *Head) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Head.ProtoReflect.Descriptor instead.
func (*Head) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{3}
}

func (x *Head) GetSendType() SendType {
	if x != nil {
		return x.SendType
	}
	return SendType_SendTypeNode
}

func (x *Head) GetSrc() *NodeRouter {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *Head) GetDst() *NodeRouter {
	if x != nil {
		return x.Dst
	}
	return nil
}

func (x *Head) GetActorName() string {
	if x != nil {
		return x.ActorName
	}
	return ""
}

func (x *Head) GetFuncName() string {
	if x != nil {
		return x.FuncName
	}
	return ""
}

func (x *Head) GetActorId() uint64 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *Head) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Head) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Head) GetCmd() uint32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *Head) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *Head) GetReference() int32 {
	if x != nil {
		return x.Reference
	}
	return 0
}

// 内网包协议
type Packet struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Head          *Head                  `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"` // 协议头
	Body          []byte                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"` // 消息体
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	mi := &file_packet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{4}
}

func (x *Packet) GetHead() *Head {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Packet) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

// 应答协议头
type RspHead struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 错误码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 错误信息
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *RspHead) Reset() {
	*x = RspHead{}
	mi := &file_packet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RspHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspHead) ProtoMessage() {}

func (x *RspHead) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspHead.ProtoReflect.Descriptor instead.
func (*RspHead) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{5}
}

func (x *RspHead) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RspHead) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 通用奖励协议
type Reward struct {
	state         protoimpl.MessageState `xorm:"-"` 
	PropId        uint32                 `protobuf:"varint,1,opt,name=prop_id,json=propId,proto3" json:"prop_id,omitempty"` // 道具ID
	Incr          int64                  `protobuf:"varint,2,opt,name=incr,proto3" json:"incr,omitempty"`                   // 增加数量
	Total         int64                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`                 // 总数量
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *Reward) Reset() {
	*x = Reward{}
	mi := &file_packet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

func (x *Reward) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{6}
}

func (x *Reward) GetPropId() uint32 {
	if x != nil {
		return x.PropId
	}
	return 0
}

func (x *Reward) GetIncr() int64 {
	if x != nil {
		return x.Incr
	}
	return 0
}

func (x *Reward) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_packet_proto protoreflect.FileDescriptor

var file_packet_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x6f, 0x6b, 0x65, 0x72, 0x1a, 0x15, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x5f, 0x63, 0x66, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x63, 0x0a, 0x04,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x23, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x94, 0x01, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x64, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x67, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x67, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x85, 0x02, 0x0a, 0x0a, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x75, 0x6e, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x6f, 0x6b, 0x65,
	0x72, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x22, 0xbf, 0x02, 0x0a, 0x04, 0x48, 0x65, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70,
	0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x73,
	0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x23, 0x0a, 0x03,
	0x64, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6b, 0x65,
	0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x03, 0x64, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x22, 0x3d, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x04,
	0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x22, 0x2f, 0x0a, 0x07, 0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x4b, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70,
	0x72, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x63, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x6e, 0x63, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x2a,
	0x36, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x52, 0x4f, 0x41,
	0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x02, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_packet_proto_rawDescOnce sync.Once
	file_packet_proto_rawDescData []byte
)

func file_packet_proto_rawDescGZIP() []byte {
	file_packet_proto_rawDescOnce.Do(func() {
		file_packet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_packet_proto_rawDesc), len(file_packet_proto_rawDesc)))
	})
	return file_packet_proto_rawDescData
}

var file_packet_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_packet_proto_goTypes = []any{
	(SendType)(0),      // 0: poker.SendType
	(*Node)(nil),       // 1: poker.Node
	(*Router)(nil),     // 2: poker.Router
	(*NodeRouter)(nil), // 3: poker.NodeRouter
	(*Head)(nil),       // 4: poker.Head
	(*Packet)(nil),     // 5: poker.Packet
	(*RspHead)(nil),    // 6: poker.RspHead
	(*Reward)(nil),     // 7: poker.Reward
	(NodeType)(0),      // 8: poker.NodeType
	(RouterType)(0),    // 9: poker.RouterType
}
var file_packet_proto_depIdxs = []int32{
	8, // 0: poker.Node.type:type_name -> poker.NodeType
	8, // 1: poker.NodeRouter.node_type:type_name -> poker.NodeType
	9, // 2: poker.NodeRouter.router_type:type_name -> poker.RouterType
	2, // 3: poker.NodeRouter.router:type_name -> poker.Router
	0, // 4: poker.Head.send_type:type_name -> poker.SendType
	3, // 5: poker.Head.src:type_name -> poker.NodeRouter
	3, // 6: poker.Head.dst:type_name -> poker.NodeRouter
	4, // 7: poker.Packet.head:type_name -> poker.Head
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_packet_proto_init() }
func file_packet_proto_init() {
	if File_packet_proto != nil {
		return
	}
	file_global_enum_cfg_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_packet_proto_rawDesc), len(file_packet_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packet_proto_goTypes,
		DependencyIndexes: file_packet_proto_depIdxs,
		EnumInfos:         file_packet_proto_enumTypes,
		MessageInfos:      file_packet_proto_msgTypes,
	}.Build()
	File_packet_proto = out.File
	file_packet_proto_goTypes = nil
	file_packet_proto_depIdxs = nil
}
