package test

import (
	"corps/base"
	"corps/base/cfgEnum"
	"corps/common"
	"corps/common/cfgData"
	"corps/pb"
	"corps/server/game/module/entry"
	"fmt"
	"testing"

	"google.golang.org/protobuf/proto"
)

func TestHero(t *testing.T) {
	playerHero := &pb.PBHero{Sn: 43, Id: 11, Star: 4}
	pPlayerProf := &pb.PBPlayerSystemProfInfo{ProfType: 1, Level: 100, Grade: 2}

	cfgHero := cfgData.GetCfgHero(playerHero.Id)
	cfgHeroStar := cfgData.GetCfgHeroStar(playerHero.Star)
	cfgHeroGrade := cfgData.GetCfgHeroGrade(cfgHero.Grade)

	talentProp := cfgData.GetCfgTalentProperty(playerHero.Id, playerHero.Star)                             // 英雄天赋属性
	breakthroughGrow := cfgData.GetCfgGlobalConfig(cfgEnum.GlobalConfig_GLOBAL_CFG_BREAKTHROUGHLEVEL_GROW) // 突破成长比例
	level := base.MinUint32(pPlayerProf.Level, cfgHeroStar.MaxLevel)                                       // 等级

	for k, v := range cfgHero.MapProf {
		uGrow, ok := cfgHero.MapProfGrow[k]
		if !ok {
			uGrow = 0
		}

		talent := talentProp.GetProperty(k)                                                                      // 天赋固定值
		talentRate := talentProp.GetPropertyRate(k)                                                              // 天赋百分比
		gradeStar := float64(cfgHeroGrade.GrowRate*cfgHeroStar.GrowRate) / (base.MIL_PERCENT * base.MIL_PERCENT) // 稀有度系数*星级系数
		breakRate := 1 + float64(pPlayerProf.Grade*breakthroughGrow)/base.MIL_PERCENT                            // 突破系数

		// 英雄属性 = (英雄基础属性 + (等级-1)*成长系数*(1+突破次数*突破成长比例) + 天赋固定值)*稀有度系数*星级系数*(1+天赋百分比)
		value := (float64(v) + float64(level-1)*uGrow*breakRate + talent) * gradeStar * (1 + talentRate/base.MIL_PERCENT)

		t.Log("grow: ", uGrow)
		t.Log("grade: ", pPlayerProf.Grade)
		t.Log("level: ", level)
		t.Log("breakUpRate: ", breakRate)
		t.Log("starUpRate: ", gradeStar)
		t.Log(cfgHero.Grade, cfgHeroGrade.GrowRate, playerHero.Star, cfgHeroStar.GrowRate)
		t.Log(fmt.Sprintf("=====propertyTypeBase heroId: %d, prof: %d, %v: %f  -----> %d, talent: %f %f", playerHero.Id, cfgHero.Prof, k, value, v, talent, talentRate))
	}
}

func TestScore(t *testing.T) {
	prop := common.NewProperty()
	prop.UpdateScorePropertyVal(6, 2567.300000)
	prop.UpdateScorePropertyVal(7, 653.175997)
	prop.UpdateScorePropertyVal(8, 19685.000000)
	prop.UpdateScorePropertyVal(16, 10000.000000)
	prop.UpdateScorePropertyVal(20, 2000.000000)
	prop.UpdateScorePropertyVal(21, 20000.000000)
	prop.UpdateScorePropertyVal(22, 6500.000000)
	prop.UpdateScorePropertyVal(23, 12000.000000)
	prop.UpdateScorePropertyVal(24, 10000.000000)
	prop.UpdateScorePropertyVal(26, 10000.000000)
	// 3777.47
	t.Log(cfgData.GetRankScoreCfgProfScore(prop, 1, 1))
}

func TestEntru(t *testing.T) {
	val := cfgData.GetCfgEntryToCrystalID(110402)
	t.Log(val)
	/*
		percent := uint32(0)
		for i := uint32(1); i <= 2; i++ {
			if qualityCfg := cfgData.GetCfgCrystalQuality(4, i); qualityCfg != nil {
				percent += qualityCfg.RedefinePercent
			}
		}
		t.Log(percent)
	*/
}

func TestFloat64(t *testing.T) {
	score := float64(2567.3)
	val := float32(2)
	score *= float64(val)
	t.Log(score)
}

func TestAttack(t *testing.T) {
	cfg := cfgData.GetCfgCrystal(105)
	tmps := map[uint32]float64{}
	for _, val := range cfg.TalentProps {
		tmps[val.Key] += float64(val.Value)
	}
	// 升级属性增加
	for _, val := range cfg.AddTalentProps {
		tmps[val.Key] += float64(val.Value * 15)
		t.Log("=====>", val.Key, tmps[val.Key])
	}
	// 突破属性增加
	percent := uint32(0)
	for i := uint32(1); i <= 20; i++ {
		if qualityCfg := cfgData.GetCfgCrystalQuality(3, i); qualityCfg != nil {
			percent += qualityCfg.RedefinePercent
		}
	}
	for key, val := range tmps {
		tmps[key] += val * float64(percent) / base.MIL_PERCENT
		t.Log(key, tmps[key])
	}
}

func TestEntry(t *testing.T) {
	service := entry.NewEntryService(100100826, &pb.PBPlayerCrystal{
		Conditions: []*pb.EntryCondition{
			{CfgID: 15, Times: 23},
			{CfgID: 16, Times: 1},
			{CfgID: 17, Times: 1},
			{CfgID: 18, Times: 1},
		},
	}, nil, func(uint32) {})

	data := entry.KeyValueToMap(service.Get(uint32(cfgEnum.EntryEffectType_HeroProp), 1)...)
	for k, val := range data {
		t.Log(k, "-----", val/100)
	}
}

func TestCrystal(t *testing.T) {
	//bbuf := []byte{10, 2, 16, 1, 18, 15, 8, 1, 16, 1, 32, 235, 7, 58, 6, 101, 102, 103, 104, 105, 106, 18, 21, 8, 2, 16, 1, 32, 232, 7, 58, 12, 201, 1, 202, 1, 203, 1, 204, 1, 205, 1, 206, 1, 18, 21, 8, 3, 16, 1, 32, 233, 7, 58, 12, 173, 2, 174, 2, 175, 2, 176, 2, 177, 2, 178, 2}
	//buf01 := []byte{10, 2, 16, 1, 18, 20, 8, 1, 16, 2, 24, 1, 32, 235, 7, 50, 1, 1, 58, 6, 101, 102, 103, 104, 105, 106, 18, 21, 8, 2, 16, 1, 32, 232, 7, 58, 12, 201, 1, 202, 1, 203, 1, 204, 1, 205, 1, 206, 1, 18, 21, 8, 3, 16, 1, 32, 233, 7, 58, 12, 173, 2, 174, 2, 175, 2, 176, 2, 177, 2, 178, 2}
	//buf02 := []byte{10, 2, 16, 1, 18, 15, 8, 1, 16, 1, 32, 235, 7, 58, 6, 101, 102, 103, 104, 105, 106, 18, 21, 8, 2, 16, 1, 32, 232, 7, 58, 12, 201, 1, 202, 1, 203, 1, 204, 1, 205, 1, 206, 1, 18, 21, 8, 3, 16, 1, 32, 233, 7, 58, 12, 173, 2, 174, 2, 175, 2, 176, 2, 177, 2, 178, 2}
	//buf := []byte{10,2,16,1,18,15,8,1,16,1,32,235,7,58,6,101,102,103,104,105,106,18,21,8,2,16,1,32,232,7,58,12,201,1,202,1,203,1,204,1,205,1,206,1,18,21,8,3,16,1,32,233,7,58,12,173,2,174,2,175,2,176,2,177,2,178,2}
	//buf := []byte{10,2,16,1,18,15,8,1,16,1,32,235,7,58,6,101,102,103,104,105,106,18,21,8,2,16,1,32,232,7,58,12,201,1,202,1,203,1,204,1,205,1,206,1,18,21,8,3,16,1,32,233,7,58,12,173,2,174,2,175,2,176,2,177,2,178,2}
	//buf := []byte{10,2,16,1,18,15,8,1,16,1,32,235,7,58,6,101,102,103,104,105,106,18,21,8,2,16,1,32,232,7,58,12,201,1,202,1,203,1,204,1,205,1,206,1,18,21,8,3,16,1,32,233,7,58,12,173,2,174,2,175,2,176,2,177,2,178,2}
	buf := []byte{10, 2, 16, 1, 18, 15, 8, 1, 16, 1, 32, 235, 7, 58, 6, 101, 102, 103, 104, 105, 106, 18, 21, 8, 2, 16, 1, 32, 232, 7, 58, 12, 201, 1, 202, 1, 203, 1, 204, 1, 205, 1, 206, 1, 18, 21, 8, 3, 16, 1, 32, 233, 7, 58, 12, 173, 2, 174, 2, 175, 2, 176, 2, 177, 2, 178, 2}
	data := &pb.PBPlayerCrystal{}
	t.Log(proto.Unmarshal(buf, data))
	t.Log(data)

	/*
		data := &pb.PBPlayerCrystal{}
		t.Log(proto.Unmarshal(buf01, data))
		t.Log(data)

		data2 := &pb.PBPlayerCrystal{}
		t.Log(proto.Unmarshal(buf02, data2))
		t.Log(data2)
	*/
}

func TestSystem(t *testing.T) {

	buf0 := []byte{10, 20, 26, 2, 2, 1, 34, 2, 8, 5, 34, 2, 8, 1, 34, 2, 8, 4, 42, 2, 8, 1, 18, 200, 1, 10, 4, 8, 1, 24, 1, 18, 70, 10, 4, 8, 2, 24, 1, 10, 4, 8, 5, 24, 1, 10, 4, 8, 8, 24, 10, 10, 4, 8, 9, 24, 1, 10, 4, 8, 11, 24, 1, 10, 8, 8, 1, 16, 1, 24, 1, 32, 1, 10, 4, 8, 3, 24, 5, 10, 4, 8, 4, 24, 10, 10, 4, 8, 6, 24, 1, 10, 4, 8, 7, 24, 1, 10, 4, 8, 10, 24, 1, 26, 8, 8, 41, 18, 2, 5, 0, 24, 1, 26, 8, 8, 41, 18, 2, 1, 0, 24, 1, 26, 8, 8, 41, 18, 2, 4, 0, 24, 1, 26, 8, 8, 55, 18, 2, 1, 0, 24, 1, 26, 8, 8, 3, 18, 2, 1, 0, 24, 1, 26, 8, 8, 3, 18, 2, 0, 0, 24, 1, 26, 9, 8, 18, 18, 2, 0, 0, 24, 161, 3, 26, 9, 8, 22, 18, 3, 239, 7, 0, 24, 4, 26, 8, 8, 22, 18, 2, 14, 0, 24, 4, 26, 8, 8, 24, 18, 2, 1, 0, 24, 3, 26, 8, 8, 25, 18, 2, 1, 0, 24, 3, 26, 8, 8, 27, 18, 2, 1, 0, 24, 3, 26, 130, 2, 10, 48, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 1, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 2, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 3, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 4, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 34, 44, 10, 18, 10, 12, 8, 1, 16, 1, 24, 162, 187, 240, 181, 6, 48, 1, 16, 1, 24, 1, 18, 18, 10, 10, 8, 1, 16, 1, 24, 162, 187, 240, 181, 6, 16, 1, 24, 1, 32, 1, 26, 0, 34, 0, 42, 4, 16, 1, 24, 1, 50, 92, 10, 66, 8, 128, 169, 243, 181, 6, 18, 5, 8, 139, 1, 16, 10, 18, 4, 8, 29, 16, 10, 18, 4, 8, 5, 16, 10, 18, 4, 8, 13, 16, 9, 18, 4, 8, 1, 16, 10, 18, 4, 8, 8, 16, 8, 18, 5, 8, 135, 1, 16, 6, 18, 4, 8, 3, 16, 6, 18, 4, 8, 94, 16, 10, 26, 2, 32, 2, 18, 2, 8, 3, 18, 8, 8, 5, 16, 128, 181, 136, 182, 6, 18, 8, 8, 1, 16, 128, 169, 243, 181, 6, 58, 16, 10, 2, 8, 1, 10, 2, 8, 3, 10, 2, 8, 4, 10, 2, 8, 2, 66, 2, 10, 0, 74, 26, 8, 1, 18, 2, 8, 2, 18, 2, 8, 3, 18, 2, 8, 4, 18, 2, 8, 5, 18, 2, 8, 6, 18, 2, 8, 1, 82, 12, 8, 162, 187, 240, 181, 6, 16, 167, 187, 240, 181, 6, 90, 0, 98, 102, 10, 100, 8, 1, 16, 128, 134, 238, 181, 6, 24, 128, 240, 183, 182, 6, 50, 8, 8, 1, 16, 1, 24, 1, 32, 1, 50, 5, 8, 2, 24, 176, 9, 50, 5, 8, 3, 24, 152, 117, 50, 4, 8, 4, 24, 1, 50, 4, 8, 5, 24, 1, 50, 4, 8, 6, 24, 1, 50, 4, 8, 7, 24, 10, 50, 4, 8, 8, 24, 20, 50, 4, 8, 9, 24, 5, 50, 4, 8, 10, 24, 100, 50, 4, 8, 11, 24, 5, 50, 4, 8, 12, 24, 5, 58, 2, 8, 1, 58, 2, 8, 2, 106, 2, 8, 1, 114, 31, 32, 1, 42, 4, 8, 11, 24, 100, 50, 4, 8, 1, 24, 1, 58, 4, 8, 21, 24, 1, 66, 9, 8, 31, 16, 161, 3, 24, 176, 234, 1, 122, 196, 1, 10, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 18, 69, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 4, 8, 7, 24, 30, 34, 4, 8, 8, 24, 40, 34, 4, 8, 9, 24, 50, 34, 4, 8, 1, 24, 1, 34, 4, 8, 2, 24, 2, 34, 4, 8, 3, 24, 5, 34, 4, 8, 4, 24, 10, 34, 4, 8, 5, 24, 15, 34, 4, 8, 6, 24, 20, 26, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 21, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 32, 162, 187, 240, 181, 6, 42, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6}
	buf1 := []byte{10, 8, 26, 2, 1, 2, 42, 2, 8, 1, 18, 8, 10, 4, 8, 1, 24, 1, 18, 0, 26, 130, 2, 10, 48, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 1, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 2, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 3, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 4, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 34, 40, 10, 16, 10, 10, 8, 1, 16, 1, 24, 190, 187, 240, 181, 6, 16, 1, 24, 1, 18, 16, 10, 10, 8, 1, 16, 1, 24, 190, 187, 240, 181, 6, 16, 1, 24, 1, 26, 0, 34, 0, 42, 4, 16, 1, 24, 1, 50, 28, 10, 2, 26, 0, 18, 8, 8, 1, 16, 128, 169, 243, 181, 6, 18, 2, 8, 3, 18, 8, 8, 5, 16, 128, 181, 136, 182, 6, 58, 16, 10, 2, 8, 2, 10, 2, 8, 4, 10, 2, 8, 1, 10, 2, 8, 3, 66, 2, 10, 0, 74, 26, 8, 1, 18, 2, 8, 1, 18, 2, 8, 2, 18, 2, 8, 3, 18, 2, 8, 4, 18, 2, 8, 5, 18, 2, 8, 6, 82, 12, 8, 190, 187, 240, 181, 6, 16, 195, 187, 240, 181, 6, 90, 0, 98, 0, 106, 2, 8, 1, 114, 26, 42, 4, 8, 11, 24, 100, 50, 4, 8, 1, 24, 1, 58, 4, 8, 21, 24, 1, 66, 6, 8, 31, 24, 176, 234, 1, 122, 196, 1, 10, 15, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 10, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 18, 69, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 4, 8, 1, 24, 1, 34, 4, 8, 3, 24, 5, 34, 4, 8, 4, 24, 10, 34, 4, 8, 6, 24, 20, 34, 4, 8, 7, 24, 30, 34, 4, 8, 2, 24, 2, 34, 4, 8, 5, 24, 15, 34, 4, 8, 8, 24, 40, 34, 4, 8, 9, 24, 50, 26, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 21, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 32, 162, 187, 240, 181, 6, 42, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6}
	buf2 := []byte{10, 8, 26, 2, 1, 2, 42, 2, 8, 1, 18, 8, 10, 4, 8, 1, 24, 1, 18, 0, 26, 130, 2, 10, 48, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 1, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 2, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 3, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 4, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 34, 40, 10, 16, 10, 10, 8, 1, 16, 1, 24, 190, 187, 240, 181, 6, 16, 1, 24, 1, 18, 16, 10, 10, 8, 1, 16, 1, 24, 190, 187, 240, 181, 6, 16, 1, 24, 1, 26, 0, 34, 0, 42, 4, 16, 1, 24, 1, 50, 28, 10, 2, 26, 0, 18, 8, 8, 1, 16, 128, 169, 243, 181, 6, 18, 2, 8, 3, 18, 8, 8, 5, 16, 128, 181, 136, 182, 6, 58, 16, 10, 2, 8, 2, 10, 2, 8, 4, 10, 2, 8, 1, 10, 2, 8, 3, 66, 2, 10, 0, 74, 26, 8, 1, 18, 2, 8, 1, 18, 2, 8, 2, 18, 2, 8, 3, 18, 2, 8, 4, 18, 2, 8, 5, 18, 2, 8, 6, 82, 12, 8, 190, 187, 240, 181, 6, 16, 195, 187, 240, 181, 6, 90, 0, 98, 0, 106, 2, 8, 1, 114, 26, 42, 4, 8, 11, 24, 100, 50, 4, 8, 1, 24, 1, 58, 4, 8, 21, 24, 1, 66, 6, 8, 31, 24, 176, 234, 1, 122, 196, 1, 10, 15, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 10, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 18, 69, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 4, 8, 1, 24, 1, 34, 4, 8, 3, 24, 5, 34, 4, 8, 4, 24, 10, 34, 4, 8, 6, 24, 20, 34, 4, 8, 7, 24, 30, 34, 4, 8, 2, 24, 2, 34, 4, 8, 5, 24, 15, 34, 4, 8, 8, 24, 40, 34, 4, 8, 9, 24, 50, 26, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 21, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 32, 162, 187, 240, 181, 6, 42, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6}
	buf3 := []byte{10, 20, 26, 2, 2, 1, 34, 2, 8, 5, 34, 2, 8, 1, 34, 2, 8, 4, 42, 2, 8, 1, 18, 200, 1, 10, 4, 8, 1, 24, 1, 18, 70, 10, 4, 8, 2, 24, 1, 10, 4, 8, 5, 24, 1, 10, 4, 8, 8, 24, 10, 10, 4, 8, 9, 24, 1, 10, 4, 8, 11, 24, 1, 10, 8, 8, 1, 16, 1, 24, 1, 32, 1, 10, 4, 8, 3, 24, 5, 10, 4, 8, 4, 24, 10, 10, 4, 8, 6, 24, 1, 10, 4, 8, 7, 24, 1, 10, 4, 8, 10, 24, 1, 26, 8, 8, 41, 18, 2, 5, 0, 24, 1, 26, 8, 8, 41, 18, 2, 1, 0, 24, 1, 26, 8, 8, 41, 18, 2, 4, 0, 24, 1, 26, 8, 8, 55, 18, 2, 1, 0, 24, 1, 26, 8, 8, 3, 18, 2, 1, 0, 24, 1, 26, 8, 8, 3, 18, 2, 0, 0, 24, 1, 26, 9, 8, 18, 18, 2, 0, 0, 24, 161, 3, 26, 9, 8, 22, 18, 3, 239, 7, 0, 24, 4, 26, 8, 8, 22, 18, 2, 14, 0, 24, 4, 26, 8, 8, 24, 18, 2, 1, 0, 24, 3, 26, 8, 8, 25, 18, 2, 1, 0, 24, 3, 26, 8, 8, 27, 18, 2, 1, 0, 24, 3, 26, 130, 2, 10, 48, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 1, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 2, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 3, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 4, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 34, 44, 10, 18, 10, 12, 8, 1, 16, 1, 24, 162, 187, 240, 181, 6, 48, 1, 16, 1, 24, 1, 18, 18, 10, 10, 8, 1, 16, 1, 24, 162, 187, 240, 181, 6, 16, 1, 24, 1, 32, 1, 26, 0, 34, 0, 42, 4, 16, 1, 24, 1, 50, 92, 10, 66, 8, 128, 169, 243, 181, 6, 18, 5, 8, 139, 1, 16, 10, 18, 4, 8, 29, 16, 10, 18, 4, 8, 5, 16, 10, 18, 4, 8, 13, 16, 9, 18, 4, 8, 1, 16, 10, 18, 4, 8, 8, 16, 8, 18, 5, 8, 135, 1, 16, 6, 18, 4, 8, 3, 16, 6, 18, 4, 8, 94, 16, 10, 26, 2, 32, 2, 18, 2, 8, 3, 18, 8, 8, 5, 16, 128, 181, 136, 182, 6, 18, 8, 8, 1, 16, 128, 169, 243, 181, 6, 58, 16, 10, 2, 8, 1, 10, 2, 8, 3, 10, 2, 8, 4, 10, 2, 8, 2, 66, 2, 10, 0, 74, 26, 8, 1, 18, 2, 8, 2, 18, 2, 8, 3, 18, 2, 8, 4, 18, 2, 8, 5, 18, 2, 8, 6, 18, 2, 8, 1, 82, 12, 8, 162, 187, 240, 181, 6, 16, 167, 187, 240, 181, 6, 90, 0, 98, 102, 10, 100, 8, 1, 16, 128, 134, 238, 181, 6, 24, 128, 240, 183, 182, 6, 50, 8, 8, 1, 16, 1, 24, 1, 32, 1, 50, 5, 8, 2, 24, 176, 9, 50, 5, 8, 3, 24, 152, 117, 50, 4, 8, 4, 24, 1, 50, 4, 8, 5, 24, 1, 50, 4, 8, 6, 24, 1, 50, 4, 8, 7, 24, 10, 50, 4, 8, 8, 24, 20, 50, 4, 8, 9, 24, 5, 50, 4, 8, 10, 24, 100, 50, 4, 8, 11, 24, 5, 50, 4, 8, 12, 24, 5, 58, 2, 8, 1, 58, 2, 8, 2, 106, 2, 8, 1, 114, 31, 32, 1, 42, 4, 8, 11, 24, 100, 50, 4, 8, 1, 24, 1, 58, 4, 8, 21, 24, 1, 66, 9, 8, 31, 16, 161, 3, 24, 176, 234, 1, 122, 196, 1, 10, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 18, 69, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 4, 8, 7, 24, 30, 34, 4, 8, 8, 24, 40, 34, 4, 8, 9, 24, 50, 34, 4, 8, 1, 24, 1, 34, 4, 8, 2, 24, 2, 34, 4, 8, 3, 24, 5, 34, 4, 8, 4, 24, 10, 34, 4, 8, 5, 24, 15, 34, 4, 8, 6, 24, 20, 26, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 21, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 32, 162, 187, 240, 181, 6, 42, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6}
	//buf2 := []byte{10, 8, 26, 2, 1, 2, 42, 2, 8, 1, 18, 8, 10, 4, 8, 1, 24, 1, 18, 0, 26, 130, 2, 10, 48, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 1, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 2, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 3, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 4, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 34, 40, 10, 16, 10, 10, 8, 1, 16, 1, 24, 190, 187, 240, 181, 6, 16, 1, 24, 1, 18, 16, 10, 10, 8, 1, 16, 1, 24, 190, 187, 240, 181, 6, 16, 1, 24, 1, 26, 0, 34, 0, 42, 4, 16, 1, 24, 1, 50, 28, 10, 2, 26, 0, 18, 8, 8, 1, 16, 128, 169, 243, 181, 6, 18, 2, 8, 3, 18, 8, 8, 5, 16, 128, 181, 136, 182, 6, 58, 16, 10, 2, 8, 2, 10, 2, 8, 4, 10, 2, 8, 1, 10, 2, 8, 3, 66, 2, 10, 0, 74, 26, 8, 1, 18, 2, 8, 1, 18, 2, 8, 2, 18, 2, 8, 3, 18, 2, 8, 4, 18, 2, 8, 5, 18, 2, 8, 6, 82, 12, 8, 190, 187, 240, 181, 6, 16, 205, 187, 240, 181, 6, 90, 0, 98, 0, 106, 2, 8, 1, 114, 26, 42, 4, 8, 11, 24, 100, 50, 4, 8, 1, 24, 1, 58, 4, 8, 21, 24, 1, 66, 6, 8, 31, 24, 176, 234, 1, 122, 196, 1, 10, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 10, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 18, 69, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 4, 8, 1, 24, 1, 34, 4, 8, 3, 24, 5, 34, 4, 8, 4, 24, 10, 34, 4, 8, 6, 24, 20, 34, 4, 8, 7, 24, 30, 34, 4, 8, 2, 24, 2, 34, 4, 8, 5, 24, 15, 34, 4, 8, 8, 24, 40, 34, 4, 8, 9, 24, 50, 26, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 21, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 32, 162, 187, 240, 181, 6, 42, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6}
	//buf3 := []byte{10, 8, 26, 2, 1, 2, 42, 2, 8, 1, 18, 8, 10, 4, 8, 1, 24, 1, 18, 0, 26, 130, 2, 10, 48, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 1, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 2, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 3, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 4, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 34, 40, 10, 16, 10, 10, 8, 1, 16, 1, 24, 190, 187, 240, 181, 6, 16, 1, 24, 1, 18, 16, 10, 10, 8, 1, 16, 1, 24, 190, 187, 240, 181, 6, 16, 1, 24, 1, 26, 0, 34, 0, 42, 4, 16, 1, 24, 1, 50, 28, 10, 2, 26, 0, 18, 8, 8, 1, 16, 128, 169, 243, 181, 6, 18, 2, 8, 3, 18, 8, 8, 5, 16, 128, 181, 136, 182, 6, 58, 16, 10, 2, 8, 2, 10, 2, 8, 4, 10, 2, 8, 1, 10, 2, 8, 3, 66, 2, 10, 0, 74, 26, 8, 1, 18, 2, 8, 1, 18, 2, 8, 2, 18, 2, 8, 3, 18, 2, 8, 4, 18, 2, 8, 5, 18, 2, 8, 6, 82, 12, 8, 190, 187, 240, 181, 6, 16, 215, 187, 240, 181, 6, 90, 0, 98, 0, 106, 2, 8, 1, 114, 26, 42, 4, 8, 11, 24, 100, 50, 4, 8, 1, 24, 1, 58, 4, 8, 21, 24, 1, 66, 6, 8, 31, 24, 176, 234, 1, 122, 196, 1, 10, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 10, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 18, 69, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 4, 8, 1, 24, 1, 34, 4, 8, 3, 24, 5, 34, 4, 8, 4, 24, 10, 34, 4, 8, 6, 24, 20, 34, 4, 8, 7, 24, 30, 34, 4, 8, 2, 24, 2, 34, 4, 8, 5, 24, 15, 34, 4, 8, 8, 24, 40, 34, 4, 8, 9, 24, 50, 26, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 21, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 32, 162, 187, 240, 181, 6, 42, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6}
	//buf4 := []byte{10, 8, 26, 2, 1, 2, 42, 2, 8, 1, 18, 8, 10, 4, 8, 1, 24, 1, 18, 0, 26, 130, 2, 10, 48, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 1, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 2, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 3, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 10, 50, 8, 4, 16, 1, 42, 4, 16, 1, 32, 1, 42, 6, 8, 1, 16, 1, 32, 1, 42, 6, 8, 2, 16, 1, 32, 1, 42, 6, 8, 3, 16, 1, 32, 1, 42, 6, 8, 4, 16, 1, 32, 1, 42, 6, 8, 5, 16, 1, 32, 1, 34, 40, 10, 16, 10, 10, 8, 1, 16, 1, 24, 190, 187, 240, 181, 6, 16, 1, 24, 1, 18, 16, 10, 10, 8, 1, 16, 1, 24, 190, 187, 240, 181, 6, 16, 1, 24, 1, 26, 0, 34, 0, 42, 4, 16, 1, 24, 1, 50, 28, 10, 2, 26, 0, 18, 8, 8, 1, 16, 128, 169, 243, 181, 6, 18, 2, 8, 3, 18, 8, 8, 5, 16, 128, 181, 136, 182, 6, 58, 16, 10, 2, 8, 4, 10, 2, 8, 1, 10, 2, 8, 3, 10, 2, 8, 2, 66, 2, 10, 0, 74, 26, 8, 1, 18, 2, 8, 1, 18, 2, 8, 2, 18, 2, 8, 3, 18, 2, 8, 4, 18, 2, 8, 5, 18, 2, 8, 6, 82, 12, 8, 190, 187, 240, 181, 6, 16, 225, 187, 240, 181, 6, 90, 0, 98, 0, 106, 2, 8, 1, 114, 26, 42, 4, 8, 11, 24, 100, 50, 4, 8, 1, 24, 1, 58, 4, 8, 21, 24, 1, 66, 6, 8, 31, 24, 176, 234, 1, 122, 196, 1, 10, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 10, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 10, 15, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 18, 69, 8, 233, 7, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 4, 8, 1, 24, 1, 34, 4, 8, 3, 24, 5, 34, 4, 8, 4, 24, 10, 34, 4, 8, 6, 24, 20, 34, 4, 8, 7, 24, 30, 34, 4, 8, 2, 24, 2, 34, 4, 8, 5, 24, 15, 34, 4, 8, 8, 24, 40, 34, 4, 8, 9, 24, 50, 26, 15, 8, 209, 15, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6, 34, 21, 8, 185, 23, 16, 162, 187, 240, 181, 6, 24, 255, 203, 248, 181, 6, 32, 162, 187, 240, 181, 6, 42, 15, 8, 161, 31, 16, 162, 187, 240, 181, 6, 24, 255, 159, 140, 183, 6}
	print := func(buf []byte) {
		data := &pb.PBPlayerSystem{}
		proto.Unmarshal(buf, data)
		t.Log(data.SevenDay)
	}
	print(buf0)
	t.Log("-----0------")
	print(buf1)
	t.Log("-----1------")
	print(buf2)
	t.Log("-----2------")
	print(buf3)
	t.Log("-----3------")
	/*
		print(buf2)
		t.Log("-----2------")
		print(buf3)
		t.Log("-----3------")
		print(buf4)
		t.Log("-----4------")
	*/
}
