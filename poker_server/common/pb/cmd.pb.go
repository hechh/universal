// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: cmd.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMD int32

const (
	CMD_CMD_EMPTY                 CMD = 0        // 空参数
	CMD_GATE_LOGIN_REQUEST        CMD = 16777216 // 登录请求
	CMD_GATE_LOGIN_RESPONSE       CMD = 16777217 // 登录请求
	CMD_KICK_PLAYER_NOTIFY        CMD = 16777218 // 剔除玩家通知
	CMD_GATE_HEART_REQUEST        CMD = 33554432 // 心跳请求
	CMD_GATE_HEART_RESPONSE       CMD = 33554433 // 心跳请求
	CMD_GET_BAG_REQ               CMD = 33554434 // 查询背包
	CMD_GET_BAG_RSP               CMD = 33554435 // 查询背包
	CMD_TEXAS_ROOM_LIST_REQ       CMD = 50331648 // 德州房间列表请求
	CMD_TEXAS_ROOM_LIST_RSP       CMD = 50331649 // 德州房间列表请求
	CMD_RUMMY_ROOM_LIST_REQ       CMD = 50331650 // 获取房间列表
	CMD_RUMMY_ROOM_LIST_RSP       CMD = 50331651 // 获取房间列表
	CMD_SNG_JOIN_ROOM_REQ         CMD = 50331652 // sng加入房间
	CMD_SNG_JOIN_ROOM_RSP         CMD = 50331653 // sng加入房间
	CMD_TEXAS_EVENT_NOTIFY        CMD = 67108864 // 德州扑克游戏通知请求
	CMD_TEXAS_JOIN_ROOM_REQ       CMD = 67108866 // 德州扑克加入房间请求
	CMD_TEXAS_JOIN_ROOM_RSP       CMD = 67108867 // 德州扑克加入房间请求
	CMD_TEXAS_QUIT_ROOM_REQ       CMD = 67108868 // 离开房间
	CMD_TEXAS_QUIT_ROOM_RSP       CMD = 67108869 // 离开房间
	CMD_TEXAS_SIT_DOWN_REQ        CMD = 67108870 // 坐下请求
	CMD_TEXAS_SIT_DOWN_RSP        CMD = 67108871 // 坐下请求
	CMD_TEXAS_STAND_UP_REQ        CMD = 67108872 // 站起请求
	CMD_TEXAS_STAND_UP_RSP        CMD = 67108873 // 站起请求
	CMD_TEXAS_BUY_IN_REQ          CMD = 67108880 // 买入请求
	CMD_TEXAS_BUY_IN_RSP          CMD = 67108881 // 买入请求
	CMD_TEXAS_DO_BET_REQ          CMD = 67108882 // 下注请求
	CMD_TEXAS_DO_BET_RSP          CMD = 67108883 // 下注请求
	CMD_RUMMY_JOIN_ROOM_REQ       CMD = 67108884 // Rummy加入房间请求
	CMD_RUMMY_JOIN_ROOM_RSP       CMD = 67108885 // Rummy加入房间请求
	CMD_RUMMY_EVENT_NOTIFY        CMD = 67108886 // Rummy游戏通知请求
	CMD_RUMMY_QUIT_ROOM_REQ       CMD = 67108888 // Rummy退出房间请求
	CMD_RUMMY_QUIT_ROOM_RSP       CMD = 67108889 // Rummy退出房间请求
	CMD_TEXAS_CHANGE_ROOM_REQ     CMD = 67108890 // 德州换房间
	CMD_TEXAS_CHANGE_ROOM_RSP     CMD = 67108891 // 德州换房间
	CMD_RUMMY_SAVE_CARD_GROUP_REQ CMD = 67108896 // Rummy玩家保存手牌
	CMD_RUMMY_SAVE_CARD_GROUP_RSP CMD = 67108897 // Rummy玩家保存手牌
	CMD_RUMMY_OPR_CARD_REQ        CMD = 67108898 // Rummy玩家操作
	CMD_RUMMY_OPR_CARD_RSP        CMD = 67108899 // Rummy玩家操作
	CMD_RUMMY_FIX_CARD_REQ        CMD = 67108900 // Rummy玩家胡牌操作
	CMD_RUMMY_FIX_CARD_RSP        CMD = 67108901 // Rummy玩家胡牌操作
	CMD_RUMMY_READY_ROOM_REQ      CMD = 67108902 // Rummy玩家准备请求
	CMD_RUMMY_READY_ROOM_RSP      CMD = 67108903 // Rummy玩家准备请求
	CMD_RUMMY_GET_OUT_CARDS_REQ   CMD = 67108904 // Rummy玩家请求出牌列表
	CMD_RUMMY_GET_OUT_CARDS_RSP   CMD = 67108905 // Rummy玩家请求出牌列表
	CMD_TEXAS_STATISTICS_REQ      CMD = 67108906 // 查询房间统计信息
	CMD_TEXAS_STATISTICS_RSP      CMD = 67108907 // 查询房间统计信息
	CMD_SNG_RANK_REQ              CMD = 67108908 // 查询sng排行榜
	CMD_SNG_RANK_RSP              CMD = 67108909 // 查询sng排行榜
	CMD_TEXAS_QUIT_ROOM_NOTIFY    CMD = 67108910 // 退出房间通知
	CMD_RUMMY_CHANGE_ROOM_REQ     CMD = 67108912 // Rummy更换房间请求
	CMD_RUMMY_CHANGE_ROOM_RSP     CMD = 67108913 // Rummy更换房间请求
	CMD_RUMMY_MATCH_REQ           CMD = 67108914 // Rummy分支玩法开启匹配
	CMD_RUMMY_MATCH_RSP           CMD = 67108915 // Rummy分支玩法开启匹配
	CMD_RUMMY_CANCEL_MATCH_REQ    CMD = 67108916 // Rummy分支玩法退出匹配
	CMD_RUMMY_CANCEL_MATCH_RSP    CMD = 67108917 // Rummy分支玩法退出匹配
	CMD_RUMMY_GIVE_UP_REQ         CMD = 67108918 // Rummy分支玩法退出房间
	CMD_RUMMY_GIVE_UP_RSP         CMD = 67108919 // Rummy分支玩法退出房间
	CMD_TEXAS_GAME_REPORT_REQ     CMD = 83886080 // 查询德州牌局记录
	CMD_TEXAS_GAME_REPORT_RSP     CMD = 83886081 // 查询德州牌局记录
	CMD_RUMMY_MATCH_SELECT_REQ    CMD = 83886082 // 游戏内查询玩家输赢记录
	CMD_RUMMY_MATCH_SELECT_RSP    CMD = 83886083 // 游戏内查询玩家输赢记录
	CMD_GET_USER_INFO_REQ         CMD = 83886084 // 查询缓存玩家信息
	CMD_GET_USER_INFO_RSP         CMD = 83886085 // 查询缓存玩家信息
	CMD_GET_TEXAS_GAME_REPORT_REQ CMD = 83886086 // 查询牌局信息
	CMD_GET_TEXAS_GAME_REPORT_RSP CMD = 83886087 // 查询牌局信息
)

// Enum value maps for CMD.
var (
	CMD_name = map[int32]string{
		0:        "CMD_EMPTY",
		16777216: "GATE_LOGIN_REQUEST",
		16777217: "GATE_LOGIN_RESPONSE",
		16777218: "KICK_PLAYER_NOTIFY",
		33554432: "GATE_HEART_REQUEST",
		33554433: "GATE_HEART_RESPONSE",
		33554434: "GET_BAG_REQ",
		33554435: "GET_BAG_RSP",
		50331648: "TEXAS_ROOM_LIST_REQ",
		50331649: "TEXAS_ROOM_LIST_RSP",
		50331650: "RUMMY_ROOM_LIST_REQ",
		50331651: "RUMMY_ROOM_LIST_RSP",
		50331652: "SNG_JOIN_ROOM_REQ",
		50331653: "SNG_JOIN_ROOM_RSP",
		67108864: "TEXAS_EVENT_NOTIFY",
		67108866: "TEXAS_JOIN_ROOM_REQ",
		67108867: "TEXAS_JOIN_ROOM_RSP",
		67108868: "TEXAS_QUIT_ROOM_REQ",
		67108869: "TEXAS_QUIT_ROOM_RSP",
		67108870: "TEXAS_SIT_DOWN_REQ",
		67108871: "TEXAS_SIT_DOWN_RSP",
		67108872: "TEXAS_STAND_UP_REQ",
		67108873: "TEXAS_STAND_UP_RSP",
		67108880: "TEXAS_BUY_IN_REQ",
		67108881: "TEXAS_BUY_IN_RSP",
		67108882: "TEXAS_DO_BET_REQ",
		67108883: "TEXAS_DO_BET_RSP",
		67108884: "RUMMY_JOIN_ROOM_REQ",
		67108885: "RUMMY_JOIN_ROOM_RSP",
		67108886: "RUMMY_EVENT_NOTIFY",
		67108888: "RUMMY_QUIT_ROOM_REQ",
		67108889: "RUMMY_QUIT_ROOM_RSP",
		67108890: "TEXAS_CHANGE_ROOM_REQ",
		67108891: "TEXAS_CHANGE_ROOM_RSP",
		67108896: "RUMMY_SAVE_CARD_GROUP_REQ",
		67108897: "RUMMY_SAVE_CARD_GROUP_RSP",
		67108898: "RUMMY_OPR_CARD_REQ",
		67108899: "RUMMY_OPR_CARD_RSP",
		67108900: "RUMMY_FIX_CARD_REQ",
		67108901: "RUMMY_FIX_CARD_RSP",
		67108902: "RUMMY_READY_ROOM_REQ",
		67108903: "RUMMY_READY_ROOM_RSP",
		67108904: "RUMMY_GET_OUT_CARDS_REQ",
		67108905: "RUMMY_GET_OUT_CARDS_RSP",
		67108906: "TEXAS_STATISTICS_REQ",
		67108907: "TEXAS_STATISTICS_RSP",
		67108908: "SNG_RANK_REQ",
		67108909: "SNG_RANK_RSP",
		67108910: "TEXAS_QUIT_ROOM_NOTIFY",
		67108912: "RUMMY_CHANGE_ROOM_REQ",
		67108913: "RUMMY_CHANGE_ROOM_RSP",
		67108914: "RUMMY_MATCH_REQ",
		67108915: "RUMMY_MATCH_RSP",
		67108916: "RUMMY_CANCEL_MATCH_REQ",
		67108917: "RUMMY_CANCEL_MATCH_RSP",
		67108918: "RUMMY_GIVE_UP_REQ",
		67108919: "RUMMY_GIVE_UP_RSP",
		83886080: "TEXAS_GAME_REPORT_REQ",
		83886081: "TEXAS_GAME_REPORT_RSP",
		83886082: "RUMMY_MATCH_SELECT_REQ",
		83886083: "RUMMY_MATCH_SELECT_RSP",
		83886084: "GET_USER_INFO_REQ",
		83886085: "GET_USER_INFO_RSP",
		83886086: "GET_TEXAS_GAME_REPORT_REQ",
		83886087: "GET_TEXAS_GAME_REPORT_RSP",
	}
	CMD_value = map[string]int32{
		"CMD_EMPTY":                 0,
		"GATE_LOGIN_REQUEST":        16777216,
		"GATE_LOGIN_RESPONSE":       16777217,
		"KICK_PLAYER_NOTIFY":        16777218,
		"GATE_HEART_REQUEST":        33554432,
		"GATE_HEART_RESPONSE":       33554433,
		"GET_BAG_REQ":               33554434,
		"GET_BAG_RSP":               33554435,
		"TEXAS_ROOM_LIST_REQ":       50331648,
		"TEXAS_ROOM_LIST_RSP":       50331649,
		"RUMMY_ROOM_LIST_REQ":       50331650,
		"RUMMY_ROOM_LIST_RSP":       50331651,
		"SNG_JOIN_ROOM_REQ":         50331652,
		"SNG_JOIN_ROOM_RSP":         50331653,
		"TEXAS_EVENT_NOTIFY":        67108864,
		"TEXAS_JOIN_ROOM_REQ":       67108866,
		"TEXAS_JOIN_ROOM_RSP":       67108867,
		"TEXAS_QUIT_ROOM_REQ":       67108868,
		"TEXAS_QUIT_ROOM_RSP":       67108869,
		"TEXAS_SIT_DOWN_REQ":        67108870,
		"TEXAS_SIT_DOWN_RSP":        67108871,
		"TEXAS_STAND_UP_REQ":        67108872,
		"TEXAS_STAND_UP_RSP":        67108873,
		"TEXAS_BUY_IN_REQ":          67108880,
		"TEXAS_BUY_IN_RSP":          67108881,
		"TEXAS_DO_BET_REQ":          67108882,
		"TEXAS_DO_BET_RSP":          67108883,
		"RUMMY_JOIN_ROOM_REQ":       67108884,
		"RUMMY_JOIN_ROOM_RSP":       67108885,
		"RUMMY_EVENT_NOTIFY":        67108886,
		"RUMMY_QUIT_ROOM_REQ":       67108888,
		"RUMMY_QUIT_ROOM_RSP":       67108889,
		"TEXAS_CHANGE_ROOM_REQ":     67108890,
		"TEXAS_CHANGE_ROOM_RSP":     67108891,
		"RUMMY_SAVE_CARD_GROUP_REQ": 67108896,
		"RUMMY_SAVE_CARD_GROUP_RSP": 67108897,
		"RUMMY_OPR_CARD_REQ":        67108898,
		"RUMMY_OPR_CARD_RSP":        67108899,
		"RUMMY_FIX_CARD_REQ":        67108900,
		"RUMMY_FIX_CARD_RSP":        67108901,
		"RUMMY_READY_ROOM_REQ":      67108902,
		"RUMMY_READY_ROOM_RSP":      67108903,
		"RUMMY_GET_OUT_CARDS_REQ":   67108904,
		"RUMMY_GET_OUT_CARDS_RSP":   67108905,
		"TEXAS_STATISTICS_REQ":      67108906,
		"TEXAS_STATISTICS_RSP":      67108907,
		"SNG_RANK_REQ":              67108908,
		"SNG_RANK_RSP":              67108909,
		"TEXAS_QUIT_ROOM_NOTIFY":    67108910,
		"RUMMY_CHANGE_ROOM_REQ":     67108912,
		"RUMMY_CHANGE_ROOM_RSP":     67108913,
		"RUMMY_MATCH_REQ":           67108914,
		"RUMMY_MATCH_RSP":           67108915,
		"RUMMY_CANCEL_MATCH_REQ":    67108916,
		"RUMMY_CANCEL_MATCH_RSP":    67108917,
		"RUMMY_GIVE_UP_REQ":         67108918,
		"RUMMY_GIVE_UP_RSP":         67108919,
		"TEXAS_GAME_REPORT_REQ":     83886080,
		"TEXAS_GAME_REPORT_RSP":     83886081,
		"RUMMY_MATCH_SELECT_REQ":    83886082,
		"RUMMY_MATCH_SELECT_RSP":    83886083,
		"GET_USER_INFO_REQ":         83886084,
		"GET_USER_INFO_RSP":         83886085,
		"GET_TEXAS_GAME_REPORT_REQ": 83886086,
		"GET_TEXAS_GAME_REPORT_RSP": 83886087,
	}
)

func (x CMD) Enum() *CMD {
	p := new(CMD)
	*p = x
	return p
}

func (x CMD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMD) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_proto_enumTypes[0].Descriptor()
}

func (CMD) Type() protoreflect.EnumType {
	return &file_cmd_proto_enumTypes[0]
}

func (x CMD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CMD.Descriptor instead.
func (CMD) EnumDescriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0}
}

var File_cmd_proto protoreflect.FileDescriptor

var file_cmd_proto_rawDesc = string([]byte{
	0x0a, 0x09, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x6f, 0x6b,
	0x65, 0x72, 0x2a, 0x88, 0x0e, 0x0a, 0x03, 0x43, 0x4d, 0x44, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4d,
	0x44, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x12, 0x47, 0x41, 0x54,
	0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x80, 0x80, 0x80, 0x08, 0x12, 0x1a, 0x0a, 0x13, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x47,
	0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x81, 0x80, 0x80, 0x08,
	0x12, 0x19, 0x0a, 0x12, 0x4b, 0x49, 0x43, 0x4b, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x82, 0x80, 0x80, 0x08, 0x12, 0x19, 0x0a, 0x12, 0x47,
	0x41, 0x54, 0x45, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x80, 0x80, 0x80, 0x10, 0x12, 0x1a, 0x0a, 0x13, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x48,
	0x45, 0x41, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x81, 0x80,
	0x80, 0x10, 0x12, 0x12, 0x0a, 0x0b, 0x47, 0x45, 0x54, 0x5f, 0x42, 0x41, 0x47, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0x82, 0x80, 0x80, 0x10, 0x12, 0x12, 0x0a, 0x0b, 0x47, 0x45, 0x54, 0x5f, 0x42, 0x41,
	0x47, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x83, 0x80, 0x80, 0x10, 0x12, 0x1a, 0x0a, 0x13, 0x54, 0x45,
	0x58, 0x41, 0x53, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0x80, 0x80, 0x80, 0x18, 0x12, 0x1a, 0x0a, 0x13, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f,
	0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x81, 0x80,
	0x80, 0x18, 0x12, 0x1a, 0x0a, 0x13, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x52, 0x4f, 0x4f, 0x4d,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x82, 0x80, 0x80, 0x18, 0x12, 0x1a,
	0x0a, 0x13, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x83, 0x80, 0x80, 0x18, 0x12, 0x18, 0x0a, 0x11, 0x53, 0x4e,
	0x47, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x10,
	0x84, 0x80, 0x80, 0x18, 0x12, 0x18, 0x0a, 0x11, 0x53, 0x4e, 0x47, 0x5f, 0x4a, 0x4f, 0x49, 0x4e,
	0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x85, 0x80, 0x80, 0x18, 0x12, 0x19,
	0x0a, 0x12, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x59, 0x10, 0x80, 0x80, 0x80, 0x20, 0x12, 0x1a, 0x0a, 0x13, 0x54, 0x45, 0x58,
	0x41, 0x53, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x51,
	0x10, 0x82, 0x80, 0x80, 0x20, 0x12, 0x1a, 0x0a, 0x13, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x4a,
	0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x83, 0x80, 0x80,
	0x20, 0x12, 0x1a, 0x0a, 0x13, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x51, 0x55, 0x49, 0x54, 0x5f,
	0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x84, 0x80, 0x80, 0x20, 0x12, 0x1a, 0x0a,
	0x13, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x51, 0x55, 0x49, 0x54, 0x5f, 0x52, 0x4f, 0x4f, 0x4d,
	0x5f, 0x52, 0x53, 0x50, 0x10, 0x85, 0x80, 0x80, 0x20, 0x12, 0x19, 0x0a, 0x12, 0x54, 0x45, 0x58,
	0x41, 0x53, 0x5f, 0x53, 0x49, 0x54, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x10,
	0x86, 0x80, 0x80, 0x20, 0x12, 0x19, 0x0a, 0x12, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x53, 0x49,
	0x54, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x87, 0x80, 0x80, 0x20, 0x12,
	0x19, 0x0a, 0x12, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x5f, 0x55,
	0x50, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x88, 0x80, 0x80, 0x20, 0x12, 0x19, 0x0a, 0x12, 0x54, 0x45,
	0x58, 0x41, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x5f, 0x55, 0x50, 0x5f, 0x52, 0x53, 0x50,
	0x10, 0x89, 0x80, 0x80, 0x20, 0x12, 0x17, 0x0a, 0x10, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x42,
	0x55, 0x59, 0x5f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x90, 0x80, 0x80, 0x20, 0x12, 0x17,
	0x0a, 0x10, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x42, 0x55, 0x59, 0x5f, 0x49, 0x4e, 0x5f, 0x52,
	0x53, 0x50, 0x10, 0x91, 0x80, 0x80, 0x20, 0x12, 0x17, 0x0a, 0x10, 0x54, 0x45, 0x58, 0x41, 0x53,
	0x5f, 0x44, 0x4f, 0x5f, 0x42, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x92, 0x80, 0x80, 0x20,
	0x12, 0x17, 0x0a, 0x10, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x44, 0x4f, 0x5f, 0x42, 0x45, 0x54,
	0x5f, 0x52, 0x53, 0x50, 0x10, 0x93, 0x80, 0x80, 0x20, 0x12, 0x1a, 0x0a, 0x13, 0x52, 0x55, 0x4d,
	0x4d, 0x59, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x51,
	0x10, 0x94, 0x80, 0x80, 0x20, 0x12, 0x1a, 0x0a, 0x13, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x4a,
	0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x95, 0x80, 0x80,
	0x20, 0x12, 0x19, 0x0a, 0x12, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x96, 0x80, 0x80, 0x20, 0x12, 0x1a, 0x0a, 0x13,
	0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x51, 0x55, 0x49, 0x54, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0x98, 0x80, 0x80, 0x20, 0x12, 0x1a, 0x0a, 0x13, 0x52, 0x55, 0x4d, 0x4d,
	0x59, 0x5f, 0x51, 0x55, 0x49, 0x54, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x53, 0x50, 0x10,
	0x99, 0x80, 0x80, 0x20, 0x12, 0x1c, 0x0a, 0x15, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x9a, 0x80,
	0x80, 0x20, 0x12, 0x1c, 0x0a, 0x15, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x9b, 0x80, 0x80, 0x20,
	0x12, 0x20, 0x0a, 0x19, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x43,
	0x41, 0x52, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xa0, 0x80,
	0x80, 0x20, 0x12, 0x20, 0x0a, 0x19, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x53, 0x41, 0x56, 0x45,
	0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x10,
	0xa1, 0x80, 0x80, 0x20, 0x12, 0x19, 0x0a, 0x12, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x4f, 0x50,
	0x52, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xa2, 0x80, 0x80, 0x20, 0x12,
	0x19, 0x0a, 0x12, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x4f, 0x50, 0x52, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x5f, 0x52, 0x53, 0x50, 0x10, 0xa3, 0x80, 0x80, 0x20, 0x12, 0x19, 0x0a, 0x12, 0x52, 0x55,
	0x4d, 0x4d, 0x59, 0x5f, 0x46, 0x49, 0x58, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x52, 0x45, 0x51,
	0x10, 0xa4, 0x80, 0x80, 0x20, 0x12, 0x19, 0x0a, 0x12, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x46,
	0x49, 0x58, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x52, 0x53, 0x50, 0x10, 0xa5, 0x80, 0x80, 0x20,
	0x12, 0x1b, 0x0a, 0x14, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f,
	0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xa6, 0x80, 0x80, 0x20, 0x12, 0x1b, 0x0a,
	0x14, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x52, 0x4f, 0x4f,
	0x4d, 0x5f, 0x52, 0x53, 0x50, 0x10, 0xa7, 0x80, 0x80, 0x20, 0x12, 0x1e, 0x0a, 0x17, 0x52, 0x55,
	0x4d, 0x4d, 0x59, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44,
	0x53, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xa8, 0x80, 0x80, 0x20, 0x12, 0x1e, 0x0a, 0x17, 0x52, 0x55,
	0x4d, 0x4d, 0x59, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44,
	0x53, 0x5f, 0x52, 0x53, 0x50, 0x10, 0xa9, 0x80, 0x80, 0x20, 0x12, 0x1b, 0x0a, 0x14, 0x54, 0x45,
	0x58, 0x41, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x53, 0x54, 0x49, 0x43, 0x53, 0x5f, 0x52,
	0x45, 0x51, 0x10, 0xaa, 0x80, 0x80, 0x20, 0x12, 0x1b, 0x0a, 0x14, 0x54, 0x45, 0x58, 0x41, 0x53,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x53, 0x54, 0x49, 0x43, 0x53, 0x5f, 0x52, 0x53, 0x50, 0x10,
	0xab, 0x80, 0x80, 0x20, 0x12, 0x13, 0x0a, 0x0c, 0x53, 0x4e, 0x47, 0x5f, 0x52, 0x41, 0x4e, 0x4b,
	0x5f, 0x52, 0x45, 0x51, 0x10, 0xac, 0x80, 0x80, 0x20, 0x12, 0x13, 0x0a, 0x0c, 0x53, 0x4e, 0x47,
	0x5f, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x52, 0x53, 0x50, 0x10, 0xad, 0x80, 0x80, 0x20, 0x12, 0x1d,
	0x0a, 0x16, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x51, 0x55, 0x49, 0x54, 0x5f, 0x52, 0x4f, 0x4f,
	0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xae, 0x80, 0x80, 0x20, 0x12, 0x1c, 0x0a,
	0x15, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x52, 0x4f,
	0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xb0, 0x80, 0x80, 0x20, 0x12, 0x1c, 0x0a, 0x15, 0x52,
	0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x4d,
	0x5f, 0x52, 0x53, 0x50, 0x10, 0xb1, 0x80, 0x80, 0x20, 0x12, 0x16, 0x0a, 0x0f, 0x52, 0x55, 0x4d,
	0x4d, 0x59, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xb2, 0x80, 0x80,
	0x20, 0x12, 0x16, 0x0a, 0x0f, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48,
	0x5f, 0x52, 0x53, 0x50, 0x10, 0xb3, 0x80, 0x80, 0x20, 0x12, 0x1d, 0x0a, 0x16, 0x52, 0x55, 0x4d,
	0x4d, 0x59, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0xb4, 0x80, 0x80, 0x20, 0x12, 0x1d, 0x0a, 0x16, 0x52, 0x55, 0x4d, 0x4d,
	0x59, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x52,
	0x53, 0x50, 0x10, 0xb5, 0x80, 0x80, 0x20, 0x12, 0x18, 0x0a, 0x11, 0x52, 0x55, 0x4d, 0x4d, 0x59,
	0x5f, 0x47, 0x49, 0x56, 0x45, 0x5f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xb6, 0x80, 0x80,
	0x20, 0x12, 0x18, 0x0a, 0x11, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f, 0x47, 0x49, 0x56, 0x45, 0x5f,
	0x55, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x10, 0xb7, 0x80, 0x80, 0x20, 0x12, 0x1c, 0x0a, 0x15, 0x54,
	0x45, 0x58, 0x41, 0x53, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x52, 0x45, 0x51, 0x10, 0x80, 0x80, 0x80, 0x28, 0x12, 0x1c, 0x0a, 0x15, 0x54, 0x45, 0x58,
	0x41, 0x53, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52,
	0x53, 0x50, 0x10, 0x81, 0x80, 0x80, 0x28, 0x12, 0x1d, 0x0a, 0x16, 0x52, 0x55, 0x4d, 0x4d, 0x59,
	0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0x82, 0x80, 0x80, 0x28, 0x12, 0x1d, 0x0a, 0x16, 0x52, 0x55, 0x4d, 0x4d, 0x59, 0x5f,
	0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x53, 0x50,
	0x10, 0x83, 0x80, 0x80, 0x28, 0x12, 0x18, 0x0a, 0x11, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x84, 0x80, 0x80, 0x28, 0x12,
	0x18, 0x0a, 0x11, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x5f, 0x52, 0x53, 0x50, 0x10, 0x85, 0x80, 0x80, 0x28, 0x12, 0x20, 0x0a, 0x19, 0x47, 0x45, 0x54,
	0x5f, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x86, 0x80, 0x80, 0x28, 0x12, 0x20, 0x0a, 0x19, 0x47,
	0x45, 0x54, 0x5f, 0x54, 0x45, 0x58, 0x41, 0x53, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x87, 0x80, 0x80, 0x28, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_cmd_proto_rawDescOnce sync.Once
	file_cmd_proto_rawDescData []byte
)

func file_cmd_proto_rawDescGZIP() []byte {
	file_cmd_proto_rawDescOnce.Do(func() {
		file_cmd_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cmd_proto_rawDesc), len(file_cmd_proto_rawDesc)))
	})
	return file_cmd_proto_rawDescData
}

var file_cmd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cmd_proto_goTypes = []any{
	(CMD)(0), // 0: poker.CMD
}
var file_cmd_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cmd_proto_init() }
func file_cmd_proto_init() {
	if File_cmd_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cmd_proto_rawDesc), len(file_cmd_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_proto_goTypes,
		DependencyIndexes: file_cmd_proto_depIdxs,
		EnumInfos:         file_cmd_proto_enumTypes,
	}.Build()
	File_cmd_proto = out.File
	file_cmd_proto_goTypes = nil
	file_cmd_proto_depIdxs = nil
}
