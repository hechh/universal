// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: client_game.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetBagReq struct {
	state         protoimpl.MessageState `xorm:"-"` 
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *GetBagReq) Reset() {
	*x = GetBagReq{}
	mi := &file_client_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBagReq) ProtoMessage() {}

func (x *GetBagReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBagReq.ProtoReflect.Descriptor instead.
func (*GetBagReq) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{0}
}

type GetBagRsp struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Head          *RspHead               `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"` //请求结果信息
	List          []*PbItem              `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *GetBagRsp) Reset() {
	*x = GetBagRsp{}
	mi := &file_client_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBagRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBagRsp) ProtoMessage() {}

func (x *GetBagRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBagRsp.ProtoReflect.Descriptor instead.
func (*GetBagRsp) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{1}
}

func (x *GetBagRsp) GetHead() *RspHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *GetBagRsp) GetList() []*PbItem {
	if x != nil {
		return x.List
	}
	return nil
}

type RewardReq struct {
	state         protoimpl.MessageState `xorm:"-"` 
	RewardList    []*Reward              `protobuf:"bytes,1,rep,name=reward_list,json=rewardList,proto3" json:"reward_list,omitempty"` // 奖励列表
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *RewardReq) Reset() {
	*x = RewardReq{}
	mi := &file_client_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardReq) ProtoMessage() {}

func (x *RewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardReq.ProtoReflect.Descriptor instead.
func (*RewardReq) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{2}
}

func (x *RewardReq) GetRewardList() []*Reward {
	if x != nil {
		return x.RewardList
	}
	return nil
}

type RewardRsp struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Head          *RspHead               `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`                               // 响应头
	RewardList    []*Reward              `protobuf:"bytes,2,rep,name=reward_list,json=rewardList,proto3" json:"reward_list,omitempty"` // 奖励列表
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *RewardRsp) Reset() {
	*x = RewardRsp{}
	mi := &file_client_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardRsp) ProtoMessage() {}

func (x *RewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardRsp.ProtoReflect.Descriptor instead.
func (*RewardRsp) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{3}
}

func (x *RewardRsp) GetHead() *RspHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *RewardRsp) GetRewardList() []*Reward {
	if x != nil {
		return x.RewardList
	}
	return nil
}

type ConsumeReq struct {
	state         protoimpl.MessageState `xorm:"-"` 
	RewardList    []*Reward              `protobuf:"bytes,1,rep,name=reward_list,json=rewardList,proto3" json:"reward_list,omitempty"` // 奖励列表
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *ConsumeReq) Reset() {
	*x = ConsumeReq{}
	mi := &file_client_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeReq) ProtoMessage() {}

func (x *ConsumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeReq.ProtoReflect.Descriptor instead.
func (*ConsumeReq) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{4}
}

func (x *ConsumeReq) GetRewardList() []*Reward {
	if x != nil {
		return x.RewardList
	}
	return nil
}

type ConsumeRsp struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Head          *RspHead               `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`                               // 响应头
	RewardList    []*Reward              `protobuf:"bytes,2,rep,name=reward_list,json=rewardList,proto3" json:"reward_list,omitempty"` // 奖励列表
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *ConsumeRsp) Reset() {
	*x = ConsumeRsp{}
	mi := &file_client_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeRsp) ProtoMessage() {}

func (x *ConsumeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeRsp.ProtoReflect.Descriptor instead.
func (*ConsumeRsp) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{5}
}

func (x *ConsumeRsp) GetHead() *RspHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *ConsumeRsp) GetRewardList() []*Reward {
	if x != nil {
		return x.RewardList
	}
	return nil
}

type HttpRspHead struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 响应码
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 响应消息
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *HttpRspHead) Reset() {
	*x = HttpRspHead{}
	mi := &file_client_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpRspHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRspHead) ProtoMessage() {}

func (x *HttpRspHead) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRspHead.ProtoReflect.Descriptor instead.
func (*HttpRspHead) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{6}
}

func (x *HttpRspHead) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HttpRspHead) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HttpPlayerInfoRsp struct {
	state         protoimpl.MessageState `xorm:"-"` 
	RespMsg       *HttpRspHead           `protobuf:"bytes,1,opt,name=resp_msg,json=respMsg,proto3" json:"resp_msg,omitempty"`    // 响应头
	RespData      *PlayerInfo            `protobuf:"bytes,2,opt,name=resp_data,json=respData,proto3" json:"resp_data,omitempty"` // 玩家信息
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *HttpPlayerInfoRsp) Reset() {
	*x = HttpPlayerInfoRsp{}
	mi := &file_client_game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpPlayerInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpPlayerInfoRsp) ProtoMessage() {}

func (x *HttpPlayerInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpPlayerInfoRsp.ProtoReflect.Descriptor instead.
func (*HttpPlayerInfoRsp) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{7}
}

func (x *HttpPlayerInfoRsp) GetRespMsg() *HttpRspHead {
	if x != nil {
		return x.RespMsg
	}
	return nil
}

func (x *HttpPlayerInfoRsp) GetRespData() *PlayerInfo {
	if x != nil {
		return x.RespData
	}
	return nil
}

type QueryPlayerDataReq struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Uid           uint64                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *QueryPlayerDataReq) Reset() {
	*x = QueryPlayerDataReq{}
	mi := &file_client_game_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPlayerDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlayerDataReq) ProtoMessage() {}

func (x *QueryPlayerDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlayerDataReq.ProtoReflect.Descriptor instead.
func (*QueryPlayerDataReq) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{8}
}

func (x *QueryPlayerDataReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type QueryPlayerDataRsp struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Head          *RspHead               `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"` //请求结果信息
	Data          *PlayerDataBase        `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	MatchType     MatchType              `protobuf:"varint,3,opt,name=match_type,json=matchType,proto3,enum=poker.MatchType" json:"match_type,omitempty"`
	GameType      GameType               `protobuf:"varint,4,opt,name=game_type,json=gameType,proto3,enum=poker.GameType" json:"game_type,omitempty"`
	RoomType      RoomType               `protobuf:"varint,5,opt,name=room_type,json=roomType,proto3,enum=poker.RoomType" json:"room_type,omitempty"`
	CoinType      CoinType               `protobuf:"varint,6,opt,name=coin_type,json=coinType,proto3,enum=poker.CoinType" json:"coin_type,omitempty"`
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *QueryPlayerDataRsp) Reset() {
	*x = QueryPlayerDataRsp{}
	mi := &file_client_game_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPlayerDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlayerDataRsp) ProtoMessage() {}

func (x *QueryPlayerDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlayerDataRsp.ProtoReflect.Descriptor instead.
func (*QueryPlayerDataRsp) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{9}
}

func (x *QueryPlayerDataRsp) GetHead() *RspHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *QueryPlayerDataRsp) GetData() *PlayerDataBase {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryPlayerDataRsp) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MatchTypeNone
}

func (x *QueryPlayerDataRsp) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_GameTypeNone
}

func (x *QueryPlayerDataRsp) GetRoomType() RoomType {
	if x != nil {
		return x.RoomType
	}
	return RoomType_RoomTypeNone
}

func (x *QueryPlayerDataRsp) GetCoinType() CoinType {
	if x != nil {
		return x.CoinType
	}
	return CoinType_CoinTypeNone
}

type RummyChangeRoomReq struct {
	state         protoimpl.MessageState `xorm:"-"` 
	RoomId        uint64                 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // 唯一id
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *RummyChangeRoomReq) Reset() {
	*x = RummyChangeRoomReq{}
	mi := &file_client_game_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RummyChangeRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RummyChangeRoomReq) ProtoMessage() {}

func (x *RummyChangeRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RummyChangeRoomReq.ProtoReflect.Descriptor instead.
func (*RummyChangeRoomReq) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{10}
}

func (x *RummyChangeRoomReq) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type RummyChangeRoomRsp struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Head          *RspHead               `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`                                   //请求结果信息
	RoomId        uint64                 `protobuf:"varint,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                // 进入的房间桌子ID
	RoomInfo      *RummyRoomPubData      `protobuf:"bytes,3,opt,name=room_info,json=roomInfo,proto3" json:"room_info,omitempty"`           // 返回桌子信息
	IsReconnect   bool                   `protobuf:"varint,4,opt,name=is_reconnect,json=isReconnect,proto3" json:"is_reconnect,omitempty"` // 是否是重连
	GaveScore     int64                  `protobuf:"varint,5,opt,name=gave_score,json=gaveScore,proto3" json:"gave_score,omitempty"`       // 投降分数
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *RummyChangeRoomRsp) Reset() {
	*x = RummyChangeRoomRsp{}
	mi := &file_client_game_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RummyChangeRoomRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RummyChangeRoomRsp) ProtoMessage() {}

func (x *RummyChangeRoomRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RummyChangeRoomRsp.ProtoReflect.Descriptor instead.
func (*RummyChangeRoomRsp) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{11}
}

func (x *RummyChangeRoomRsp) GetHead() *RspHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *RummyChangeRoomRsp) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RummyChangeRoomRsp) GetRoomInfo() *RummyRoomPubData {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

func (x *RummyChangeRoomRsp) GetIsReconnect() bool {
	if x != nil {
		return x.IsReconnect
	}
	return false
}

func (x *RummyChangeRoomRsp) GetGaveScore() int64 {
	if x != nil {
		return x.GaveScore
	}
	return 0
}

type SetPlayerStatus struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Uid           uint64                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Status        PlayerStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=poker.PlayerStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *SetPlayerStatus) Reset() {
	*x = SetPlayerStatus{}
	mi := &file_client_game_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPlayerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerStatus) ProtoMessage() {}

func (x *SetPlayerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerStatus.ProtoReflect.Descriptor instead.
func (*SetPlayerStatus) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{12}
}

func (x *SetPlayerStatus) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SetPlayerStatus) GetStatus() PlayerStatus {
	if x != nil {
		return x.Status
	}
	return PlayerStatus_PlayerStatusNone
}

// 转入转出消息体
type TransParam struct {
	state         protoimpl.MessageState `xorm:"-"` 
	GameSn        string                 `protobuf:"bytes,1,opt,name=game_sn,json=gameSn,proto3" json:"game_sn,omitempty"` //uuid
	GameType      GameType               `protobuf:"varint,2,opt,name=game_type,json=gameType,proto3,enum=poker.GameType" json:"game_type,omitempty"`
	CoinType      CoinType               `protobuf:"varint,3,opt,name=coin_type,json=coinType,proto3,enum=poker.CoinType" json:"coin_type,omitempty"`
	Incr          int64                  `protobuf:"varint,4,opt,name=incr,proto3" json:"incr,omitempty"` // 0 默认转入
	Uid           uint64                 `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *TransParam) Reset() {
	*x = TransParam{}
	mi := &file_client_game_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransParam) ProtoMessage() {}

func (x *TransParam) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransParam.ProtoReflect.Descriptor instead.
func (*TransParam) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{13}
}

func (x *TransParam) GetGameSn() string {
	if x != nil {
		return x.GameSn
	}
	return ""
}

func (x *TransParam) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_GameTypeNone
}

func (x *TransParam) GetCoinType() CoinType {
	if x != nil {
		return x.CoinType
	}
	return CoinType_CoinTypeNone
}

func (x *TransParam) GetIncr() int64 {
	if x != nil {
		return x.Incr
	}
	return 0
}

func (x *TransParam) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// TransInfo
type TransInfo struct {
	state         protoimpl.MessageState `xorm:"-"` 
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	GameSn        string                 `protobuf:"bytes,2,opt,name=game_sn,json=gameSn,proto3" json:"game_sn,omitempty"` //uuid
	Balance       int64                  `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
	Change        int64                  `protobuf:"varint,4,opt,name=change,proto3" json:"change,omitempty"`
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *TransInfo) Reset() {
	*x = TransInfo{}
	mi := &file_client_game_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransInfo) ProtoMessage() {}

func (x *TransInfo) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransInfo.ProtoReflect.Descriptor instead.
func (*TransInfo) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{14}
}

func (x *TransInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *TransInfo) GetGameSn() string {
	if x != nil {
		return x.GameSn
	}
	return ""
}

func (x *TransInfo) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *TransInfo) GetChange() int64 {
	if x != nil {
		return x.Change
	}
	return 0
}

// 游戏转入对应大厅转出
type HttpTransferInRsp struct {
	state         protoimpl.MessageState `xorm:"-"` 
	RespMsg       *HttpRspHead           `protobuf:"bytes,1,opt,name=resp_msg,json=respMsg,proto3" json:"resp_msg,omitempty"` // php转出响应头
	RespData      *TransInfo             `protobuf:"bytes,2,opt,name=resp_data,json=respData,proto3" json:"resp_data,omitempty"`
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *HttpTransferInRsp) Reset() {
	*x = HttpTransferInRsp{}
	mi := &file_client_game_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpTransferInRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpTransferInRsp) ProtoMessage() {}

func (x *HttpTransferInRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpTransferInRsp.ProtoReflect.Descriptor instead.
func (*HttpTransferInRsp) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{15}
}

func (x *HttpTransferInRsp) GetRespMsg() *HttpRspHead {
	if x != nil {
		return x.RespMsg
	}
	return nil
}

func (x *HttpTransferInRsp) GetRespData() *TransInfo {
	if x != nil {
		return x.RespData
	}
	return nil
}

// 游戏转出对应大厅转入
type HttpTransferOutRsp struct {
	state         protoimpl.MessageState `xorm:"-"` 
	RespMsg       *HttpRspHead           `protobuf:"bytes,1,opt,name=resp_msg,json=respMsg,proto3" json:"resp_msg,omitempty"` // php转出响应头
	RespData      *TransInfo             `protobuf:"bytes,2,opt,name=resp_data,json=respData,proto3" json:"resp_data,omitempty"`
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *HttpTransferOutRsp) Reset() {
	*x = HttpTransferOutRsp{}
	mi := &file_client_game_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpTransferOutRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpTransferOutRsp) ProtoMessage() {}

func (x *HttpTransferOutRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpTransferOutRsp.ProtoReflect.Descriptor instead.
func (*HttpTransferOutRsp) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{16}
}

func (x *HttpTransferOutRsp) GetRespMsg() *HttpRspHead {
	if x != nil {
		return x.RespMsg
	}
	return nil
}

func (x *HttpTransferOutRsp) GetRespData() *TransInfo {
	if x != nil {
		return x.RespData
	}
	return nil
}

type TexasFinishNotify struct {
	state         protoimpl.MessageState `xorm:"-"` 
	RoomId        uint64                 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	PropId        uint32                 `protobuf:"varint,2,opt,name=prop_id,json=propId,proto3" json:"prop_id,omitempty"`
	Incr          int64                  `protobuf:"varint,3,opt,name=incr,proto3" json:"incr,omitempty"`
	unknownFields protoimpl.UnknownFields `xorm:"-"`
	sizeCache     protoimpl.SizeCache `xorm:"-"`
}

func (x *TexasFinishNotify) Reset() {
	*x = TexasFinishNotify{}
	mi := &file_client_game_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TexasFinishNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TexasFinishNotify) ProtoMessage() {}

func (x *TexasFinishNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_game_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TexasFinishNotify.ProtoReflect.Descriptor instead.
func (*TexasFinishNotify) Descriptor() ([]byte, []int) {
	return file_client_game_proto_rawDescGZIP(), []int{17}
}

func (x *TexasFinishNotify) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *TexasFinishNotify) GetPropId() uint32 {
	if x != nil {
		return x.PropId
	}
	return 0
}

func (x *TexasFinishNotify) GetIncr() int64 {
	if x != nil {
		return x.Incr
	}
	return 0
}

var File_client_game_proto protoreflect.FileDescriptor

var file_client_game_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x1a, 0x0c, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x66, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x72, 0x75, 0x6d, 0x6d, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0b,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x61, 0x67, 0x52, 0x65, 0x71, 0x22, 0x52, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x67, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x52,
	0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x50, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x3b, 0x0a, 0x09, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x0b,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x09,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x68, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x2e, 0x0a,
	0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3c, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x0b, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x68, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x2e, 0x0a,
	0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3b, 0x0a,
	0x0b, 0x48, 0x74, 0x74, 0x70, 0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x72, 0x0a, 0x11, 0x48, 0x74,
	0x74, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12,
	0x2d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x73,
	0x70, 0x48, 0x65, 0x61, 0x64, 0x52, 0x07, 0x72, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x2e,
	0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0x26,
	0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x9e, 0x02, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a,
	0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61,
	0x64, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x0a,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a,
	0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x6f, 0x69,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70,
	0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2d, 0x0a, 0x12, 0x52, 0x75, 0x6d, 0x6d, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x12, 0x52, 0x75, 0x6d, 0x6d, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x22, 0x0a,
	0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x75, 0x6d, 0x6d, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x50,
	0x75, 0x62, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x61, 0x76, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x50, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x6e, 0x12, 0x2c, 0x0a, 0x09,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x6f,
	0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x63, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x6e, 0x63, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x68,
	0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x53, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x71, 0x0a, 0x11, 0x48, 0x74, 0x74, 0x70,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x2d, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x73, 0x70, 0x48,
	0x65, 0x61, 0x64, 0x52, 0x07, 0x72, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a, 0x12, 0x48,
	0x74, 0x74, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x52, 0x07, 0x72, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67,
	0x12, 0x2d, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x59, 0x0a, 0x11, 0x54, 0x65, 0x78, 0x61, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x70, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x63, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x6e, 0x63, 0x72, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_client_game_proto_rawDescOnce sync.Once
	file_client_game_proto_rawDescData []byte
)

func file_client_game_proto_rawDescGZIP() []byte {
	file_client_game_proto_rawDescOnce.Do(func() {
		file_client_game_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_client_game_proto_rawDesc), len(file_client_game_proto_rawDesc)))
	})
	return file_client_game_proto_rawDescData
}

var file_client_game_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_client_game_proto_goTypes = []any{
	(*GetBagReq)(nil),          // 0: poker.GetBagReq
	(*GetBagRsp)(nil),          // 1: poker.GetBagRsp
	(*RewardReq)(nil),          // 2: poker.RewardReq
	(*RewardRsp)(nil),          // 3: poker.RewardRsp
	(*ConsumeReq)(nil),         // 4: poker.ConsumeReq
	(*ConsumeRsp)(nil),         // 5: poker.ConsumeRsp
	(*HttpRspHead)(nil),        // 6: poker.HttpRspHead
	(*HttpPlayerInfoRsp)(nil),  // 7: poker.HttpPlayerInfoRsp
	(*QueryPlayerDataReq)(nil), // 8: poker.QueryPlayerDataReq
	(*QueryPlayerDataRsp)(nil), // 9: poker.QueryPlayerDataRsp
	(*RummyChangeRoomReq)(nil), // 10: poker.RummyChangeRoomReq
	(*RummyChangeRoomRsp)(nil), // 11: poker.RummyChangeRoomRsp
	(*SetPlayerStatus)(nil),    // 12: poker.SetPlayerStatus
	(*TransParam)(nil),         // 13: poker.TransParam
	(*TransInfo)(nil),          // 14: poker.TransInfo
	(*HttpTransferInRsp)(nil),  // 15: poker.HttpTransferInRsp
	(*HttpTransferOutRsp)(nil), // 16: poker.HttpTransferOutRsp
	(*TexasFinishNotify)(nil),  // 17: poker.TexasFinishNotify
	(*RspHead)(nil),            // 18: poker.RspHead
	(*PbItem)(nil),             // 19: poker.PbItem
	(*Reward)(nil),             // 20: poker.Reward
	(*PlayerInfo)(nil),         // 21: poker.PlayerInfo
	(*PlayerDataBase)(nil),     // 22: poker.PlayerDataBase
	(MatchType)(0),             // 23: poker.MatchType
	(GameType)(0),              // 24: poker.GameType
	(RoomType)(0),              // 25: poker.RoomType
	(CoinType)(0),              // 26: poker.CoinType
	(*RummyRoomPubData)(nil),   // 27: poker.RummyRoomPubData
	(PlayerStatus)(0),          // 28: poker.PlayerStatus
}
var file_client_game_proto_depIdxs = []int32{
	18, // 0: poker.GetBagRsp.head:type_name -> poker.RspHead
	19, // 1: poker.GetBagRsp.list:type_name -> poker.PbItem
	20, // 2: poker.RewardReq.reward_list:type_name -> poker.Reward
	18, // 3: poker.RewardRsp.head:type_name -> poker.RspHead
	20, // 4: poker.RewardRsp.reward_list:type_name -> poker.Reward
	20, // 5: poker.ConsumeReq.reward_list:type_name -> poker.Reward
	18, // 6: poker.ConsumeRsp.head:type_name -> poker.RspHead
	20, // 7: poker.ConsumeRsp.reward_list:type_name -> poker.Reward
	6,  // 8: poker.HttpPlayerInfoRsp.resp_msg:type_name -> poker.HttpRspHead
	21, // 9: poker.HttpPlayerInfoRsp.resp_data:type_name -> poker.PlayerInfo
	18, // 10: poker.QueryPlayerDataRsp.head:type_name -> poker.RspHead
	22, // 11: poker.QueryPlayerDataRsp.data:type_name -> poker.PlayerDataBase
	23, // 12: poker.QueryPlayerDataRsp.match_type:type_name -> poker.MatchType
	24, // 13: poker.QueryPlayerDataRsp.game_type:type_name -> poker.GameType
	25, // 14: poker.QueryPlayerDataRsp.room_type:type_name -> poker.RoomType
	26, // 15: poker.QueryPlayerDataRsp.coin_type:type_name -> poker.CoinType
	18, // 16: poker.RummyChangeRoomRsp.head:type_name -> poker.RspHead
	27, // 17: poker.RummyChangeRoomRsp.room_info:type_name -> poker.RummyRoomPubData
	28, // 18: poker.SetPlayerStatus.status:type_name -> poker.PlayerStatus
	24, // 19: poker.TransParam.game_type:type_name -> poker.GameType
	26, // 20: poker.TransParam.coin_type:type_name -> poker.CoinType
	6,  // 21: poker.HttpTransferInRsp.resp_msg:type_name -> poker.HttpRspHead
	14, // 22: poker.HttpTransferInRsp.resp_data:type_name -> poker.TransInfo
	6,  // 23: poker.HttpTransferOutRsp.resp_msg:type_name -> poker.HttpRspHead
	14, // 24: poker.HttpTransferOutRsp.resp_data:type_name -> poker.TransInfo
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_client_game_proto_init() }
func file_client_game_proto_init() {
	if File_client_game_proto != nil {
		return
	}
	file_packet_proto_init()
	file_player_data_proto_init()
	file_global_enum_cfg_proto_init()
	file_client_room_rummy_proto_init()
	file_global_enum_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_client_game_proto_rawDesc), len(file_client_game_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_game_proto_goTypes,
		DependencyIndexes: file_client_game_proto_depIdxs,
		MessageInfos:      file_client_game_proto_msgTypes,
	}.Build()
	File_client_game_proto = out.File
	file_client_game_proto_goTypes = nil
	file_client_game_proto_depIdxs = nil
}
