// Code generated by protoc-gen-go-xorm. DO NOT EDIT.
// Source: client_match.proto

package pb

import (
	"github.com/golang/protobuf/proto"
)

func (x *TexasQueryReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *TexasQueryReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *TexasQueryReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *TexasQueryRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *TexasQueryRsp) SetData(val *TexasRoomData) {
	x.Data = val
}

func (x *TexasQueryRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *TexasQueryRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *TexasMatchRoomReq) SetTableId(val uint32) {
	x.TableId = val
}

func (x *TexasMatchRoomReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *TexasMatchRoomReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *TexasMatchRoomReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *TexasMatchRoomRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *TexasMatchRoomRsp) SetTableId(val uint32) {
	x.TableId = val
}

func (x *TexasMatchRoomRsp) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *TexasMatchRoomRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *TexasMatchRoomRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *TexasRoomListReq) SetGameType(val int32) {
	x.GameType = val
}

func (x *TexasRoomListReq) SetCoinType(val int32) {
	x.CoinType = val
}

func (x *TexasRoomListReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *TexasRoomListReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *TexasRoomListRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *TexasRoomListRsp) SetRoomList(val []*TexasRoomInfo) {
	x.RoomList = val
}

func (x *TexasRoomListRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *TexasRoomListRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyRoomListReq) SetGameType(val int32) {
	x.GameType = val
}

func (x *RummyRoomListReq) SetCoinType(val int32) {
	x.CoinType = val
}

func (x *RummyRoomListReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyRoomListReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyRoomListRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummyRoomListRsp) SetRoomList(val []*RummyRoomPubData) {
	x.RoomList = val
}

func (x *RummyRoomListRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyRoomListRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *HasRoomReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *HasRoomReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *HasRoomReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *HasRoomRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *HasRoomRsp) SetIsExist(val bool) {
	x.IsExist = val
}

func (x *HasRoomRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *HasRoomRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *SngJoinRoomReq) SetMatchId(val int32) {
	x.MatchId = val
}

func (x *SngJoinRoomReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *SngJoinRoomReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *SngJoinRoomRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *SngJoinRoomRsp) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *SngJoinRoomRsp) SetChip(val int64) {
	x.Chip = val
}

func (x *SngJoinRoomRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *SngJoinRoomRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}
