// Code generated by protoc-gen-go-xorm. DO NOT EDIT.
// Source: client_db_rummy.proto

package pb

import (
	"github.com/golang/protobuf/proto"
)

func (x *RummySettleMatch) SetId(val uint64) {
	x.Id = val
}

func (x *RummySettleMatch) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummySettleMatch) SetPlayerId(val []uint64) {
	x.PlayerId = val
}

func (x *RummySettleMatch) SetMatch(val uint32) {
	x.Match = val
}

func (x *RummySettleMatch) SetGameType(val GameType) {
	x.GameType = val
}

func (x *RummySettleMatch) SetRoomType(val RoomType) {
	x.RoomType = val
}

func (x *RummySettleMatch) SetCoinType(val CoinType) {
	x.CoinType = val
}

func (x *RummySettleMatch) SetBaseScore(val int64) {
	x.BaseScore = val
}

func (x *RummySettleMatch) SetRakeRate(val int64) {
	x.RakeRate = val
}

func (x *RummySettleMatch) SetCreatedAt(val int64) {
	x.CreatedAt = val
}

func (x *RummySettleMatch) SetFinishAt(val int64) {
	x.FinishAt = val
}

func (x *RummySettleMatch) SetRakeCoin(val int64) {
	x.RakeCoin = val
}

func (x *RummySettleMatch) SetSettleCoin(val int64) {
	x.SettleCoin = val
}

func (x *RummySettleMatch) SetPlayers(val []*RummySettlePlayerInfo) {
	x.Players = val
}

func (x *RummySettleMatch) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySettleMatch) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyActionRecord) SetId(val uint64) {
	x.Id = val
}

func (x *RummyActionRecord) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyActionRecord) SetMatchId(val uint32) {
	x.MatchId = val
}

func (x *RummyActionRecord) SetType(val RummyEventType) {
	x.Type = val
}

func (x *RummyActionRecord) SetNtfData(val []byte) {
	x.NtfData = val
}

func (x *RummyActionRecord) SetCreatedAt(val int64) {
	x.CreatedAt = val
}

func (x *RummyActionRecord) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyActionRecord) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummySettleData) SetId(val uint64) {
	x.Id = val
}

func (x *RummySettleData) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummySettleData) SetPlayerId(val uint64) {
	x.PlayerId = val
}

func (x *RummySettleData) SetGroups(val []*RummyCardGroup) {
	x.Groups = val
}

func (x *RummySettleData) SetGhostCard(val uint32) {
	x.GhostCard = val
}

func (x *RummySettleData) SetHandScore(val int64) {
	x.HandScore = val
}

func (x *RummySettleData) SetCoin(val int64) {
	x.Coin = val
}

func (x *RummySettleData) SetState(val RummyPlayState) {
	x.State = val
}

func (x *RummySettleData) SetCreatedAt(val int64) {
	x.CreatedAt = val
}

func (x *RummySettleData) SetPlayerCount(val uint32) {
	x.PlayerCount = val
}

func (x *RummySettleData) SetMatchId(val uint32) {
	x.MatchId = val
}

func (x *RummySettleData) SetGameType(val GameType) {
	x.GameType = val
}

func (x *RummySettleData) SetRoomType(val RoomType) {
	x.RoomType = val
}

func (x *RummySettleData) SetCoinType(val CoinType) {
	x.CoinType = val
}

func (x *RummySettleData) SetBaseScore(val int64) {
	x.BaseScore = val
}

func (x *RummySettleData) SetRakeCoin(val int64) {
	x.RakeCoin = val
}

func (x *RummySettleData) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySettleData) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummySettleInsertReq) SetData(val []*RummySettleData) {
	x.Data = val
}

func (x *RummySettleInsertReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySettleInsertReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummySettleInsertRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummySettleInsertRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySettleInsertRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummySettleSelectReq) SetPage(val uint32) {
	x.Page = val
}

func (x *RummySettleSelectReq) SetPageSize(val uint32) {
	x.PageSize = val
}

func (x *RummySettleSelectReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySettleSelectReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummySettleSelectRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummySettleSelectRsp) SetData(val []*RummySettleData) {
	x.Data = val
}

func (x *RummySettleSelectRsp) SetCount(val int64) {
	x.Count = val
}

func (x *RummySettleSelectRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySettleSelectRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummySettleMatchInsertReq) SetData(val []*RummySettleMatch) {
	x.Data = val
}

func (x *RummySettleMatchInsertReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySettleMatchInsertReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummySettleMatchInsertRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummySettleMatchInsertRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummySettleMatchInsertRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyMatchSelectReq) SetPage(val uint32) {
	x.Page = val
}

func (x *RummyMatchSelectReq) SetPageSize(val uint32) {
	x.PageSize = val
}

func (x *RummyMatchSelectReq) SetRoomId(val uint64) {
	x.RoomId = val
}

func (x *RummyMatchSelectReq) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyMatchSelectReq) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}

func (x *RummyMatchSelectRsp) SetHead(val *RspHead) {
	x.Head = val
}

func (x *RummyMatchSelectRsp) SetData(val []*RummySettleMatch) {
	x.Data = val
}

func (x *RummyMatchSelectRsp) SetCount(val int64) {
	x.Count = val
}

func (x *RummyMatchSelectRsp) FromDB(data []byte) error {
	if len(data) == 0 {
		return nil
	}
	return proto.Unmarshal(data, x)
}

func (x *RummyMatchSelectRsp) ToDB() ([]byte, error) {
	if x == nil {
		return nil, nil
	}
	return proto.Marshal(x)
}
