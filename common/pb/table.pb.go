// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.2
// source: table.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LimitUpStockConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                  uint32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                                     // 序号
	Code                uint32  `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`                                 // 股票代码
	Name                string  `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`                                  // 股票简称
	Price               float32 `protobuf:"fixed32,4,opt,name=Price,proto3" json:"Price,omitempty"`                              // 股票现价
	TTM                 float32 `protobuf:"fixed32,5,opt,name=TTM,proto3" json:"TTM,omitempty"`                                  // 涨跌幅
	Concept             string  `protobuf:"bytes,6,opt,name=Concept,proto3" json:"Concept,omitempty"`                            // 概念
	LimitUpBegin        string  `protobuf:"bytes,7,opt,name=LimitUpBegin,proto3" json:"LimitUpBegin,omitempty"`                  // 首次涨停时间
	LimitUpEnd          string  `protobuf:"bytes,8,opt,name=LimitUpEnd,proto3" json:"LimitUpEnd,omitempty"`                      // 最终涨停时间
	ContinueLimitUpDay  uint32  `protobuf:"varint,9,opt,name=ContinueLimitUpDay,proto3" json:"ContinueLimitUpDay,omitempty"`     // 连续涨停天数
	LimitUpReason       string  `protobuf:"bytes,10,opt,name=LimitUpReason,proto3" json:"LimitUpReason,omitempty"`               // 涨停原因
	LimitUpBuyingVolume float32 `protobuf:"fixed32,11,opt,name=LimitUpBuyingVolume,proto3" json:"LimitUpBuyingVolume,omitempty"` // 涨停封单量
	LimitUpBuyingValue  float32 `protobuf:"fixed32,12,opt,name=LimitUpBuyingValue,proto3" json:"LimitUpBuyingValue,omitempty"`   // 涨停封单额
	Address             string  `protobuf:"bytes,13,opt,name=Address,proto3" json:"Address,omitempty"`                           // 注册地址
	Business            string  `protobuf:"bytes,14,opt,name=Business,proto3" json:"Business,omitempty"`                         // 经营范围
	Industry            string  `protobuf:"bytes,15,opt,name=Industry,proto3" json:"Industry,omitempty"`                         // 行业
}

func (x *LimitUpStockConfig) Reset() {
	*x = LimitUpStockConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitUpStockConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitUpStockConfig) ProtoMessage() {}

func (x *LimitUpStockConfig) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitUpStockConfig.ProtoReflect.Descriptor instead.
func (*LimitUpStockConfig) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{0}
}

func (x *LimitUpStockConfig) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *LimitUpStockConfig) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LimitUpStockConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LimitUpStockConfig) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *LimitUpStockConfig) GetTTM() float32 {
	if x != nil {
		return x.TTM
	}
	return 0
}

func (x *LimitUpStockConfig) GetConcept() string {
	if x != nil {
		return x.Concept
	}
	return ""
}

func (x *LimitUpStockConfig) GetLimitUpBegin() string {
	if x != nil {
		return x.LimitUpBegin
	}
	return ""
}

func (x *LimitUpStockConfig) GetLimitUpEnd() string {
	if x != nil {
		return x.LimitUpEnd
	}
	return ""
}

func (x *LimitUpStockConfig) GetContinueLimitUpDay() uint32 {
	if x != nil {
		return x.ContinueLimitUpDay
	}
	return 0
}

func (x *LimitUpStockConfig) GetLimitUpReason() string {
	if x != nil {
		return x.LimitUpReason
	}
	return ""
}

func (x *LimitUpStockConfig) GetLimitUpBuyingVolume() float32 {
	if x != nil {
		return x.LimitUpBuyingVolume
	}
	return 0
}

func (x *LimitUpStockConfig) GetLimitUpBuyingValue() float32 {
	if x != nil {
		return x.LimitUpBuyingValue
	}
	return 0
}

func (x *LimitUpStockConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *LimitUpStockConfig) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

func (x *LimitUpStockConfig) GetIndustry() string {
	if x != nil {
		return x.Industry
	}
	return ""
}

type LimitUpStockConfigAry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ary []*LimitUpStockConfig `protobuf:"bytes,1,rep,name=Ary,proto3" json:"Ary,omitempty"`
}

func (x *LimitUpStockConfigAry) Reset() {
	*x = LimitUpStockConfigAry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitUpStockConfigAry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitUpStockConfigAry) ProtoMessage() {}

func (x *LimitUpStockConfigAry) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitUpStockConfigAry.ProtoReflect.Descriptor instead.
func (*LimitUpStockConfigAry) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{1}
}

func (x *LimitUpStockConfigAry) GetAry() []*LimitUpStockConfig {
	if x != nil {
		return x.Ary
	}
	return nil
}

var File_table_proto protoreflect.FileDescriptor

var file_table_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0xdc, 0x03, 0x0a, 0x12, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x54, 0x4d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x54, 0x54, 0x4d, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x63, 0x65,
	0x70, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x55,
	0x70, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x55,
	0x70, 0x45, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x55, 0x70, 0x45, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x44, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x55, 0x70, 0x44, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x55,
	0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x42, 0x75, 0x79, 0x69, 0x6e, 0x67, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x55, 0x70, 0x42, 0x75, 0x79, 0x69, 0x6e, 0x67, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x42, 0x75, 0x79, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x55, 0x70, 0x42, 0x75, 0x79, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79,
	0x22, 0x41, 0x0a, 0x15, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x03, 0x41, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x55, 0x70, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x03,
	0x41, 0x72, 0x79, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_table_proto_rawDescOnce sync.Once
	file_table_proto_rawDescData = file_table_proto_rawDesc
)

func file_table_proto_rawDescGZIP() []byte {
	file_table_proto_rawDescOnce.Do(func() {
		file_table_proto_rawDescData = protoimpl.X.CompressGZIP(file_table_proto_rawDescData)
	})
	return file_table_proto_rawDescData
}

var file_table_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_table_proto_goTypes = []interface{}{
	(*LimitUpStockConfig)(nil),    // 0: pb.LimitUpStockConfig
	(*LimitUpStockConfigAry)(nil), // 1: pb.LimitUpStockConfigAry
}
var file_table_proto_depIdxs = []int32{
	0, // 0: pb.LimitUpStockConfigAry.Ary:type_name -> pb.LimitUpStockConfig
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_table_proto_init() }
func file_table_proto_init() {
	if File_table_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_table_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitUpStockConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitUpStockConfigAry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_table_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_table_proto_goTypes,
		DependencyIndexes: file_table_proto_depIdxs,
		MessageInfos:      file_table_proto_msgTypes,
	}.Build()
	File_table_proto = out.File
	file_table_proto_rawDesc = nil
	file_table_proto_goTypes = nil
	file_table_proto_depIdxs = nil
}
