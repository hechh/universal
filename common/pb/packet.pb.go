// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.14.0
// source: packet.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 服务器类型
type ServerType int32

const (
	ServerType_NONE ServerType = 0
	ServerType_GATE ServerType = 1 // 网关,转发服务
	ServerType_GAME ServerType = 2 // game
	ServerType_MAX  ServerType = 3 // 最大值
)

// Enum value maps for ServerType.
var (
	ServerType_name = map[int32]string{
		0: "NONE",
		1: "GATE",
		2: "GAME",
		3: "MAX",
	}
	ServerType_value = map[string]int32{
		"NONE": 0,
		"GATE": 1,
		"GAME": 2,
		"MAX":  3,
	}
)

func (x ServerType) Enum() *ServerType {
	p := new(ServerType)
	*p = x
	return p
}

func (x ServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_proto_enumTypes[0].Descriptor()
}

func (ServerType) Type() protoreflect.EnumType {
	return &file_packet_proto_enumTypes[0]
}

func (x ServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerType.Descriptor instead.
func (ServerType) EnumDescriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{0}
}

// 发送标志
type SendType int32

const (
	SendType_PLAYER  SendType = 0 // 指定玩家
	SendType_NODE    SendType = 1 // 指定节点
	SendType_CLUSTER SendType = 2 // 集群所有节点
)

// Enum value maps for SendType.
var (
	SendType_name = map[int32]string{
		0: "PLAYER",
		1: "NODE",
		2: "CLUSTER",
	}
	SendType_value = map[string]int32{
		"PLAYER":  0,
		"NODE":    1,
		"CLUSTER": 2,
	}
)

func (x SendType) Enum() *SendType {
	p := new(SendType)
	*p = x
	return p
}

func (x SendType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendType) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_proto_enumTypes[1].Descriptor()
}

func (SendType) Type() protoreflect.EnumType {
	return &file_packet_proto_enumTypes[1]
}

func (x SendType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendType.Descriptor instead.
func (SendType) EnumDescriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{1}
}

// 集群信息
type ServerNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerType ServerType `protobuf:"varint,1,opt,name=ServerType,proto3,enum=pb.ServerType" json:"ServerType,omitempty"`
	ServerID   uint32     `protobuf:"varint,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	Ip         string     `protobuf:"bytes,3,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port       int32      `protobuf:"varint,4,opt,name=Port,proto3" json:"Port,omitempty"`
}

func (x *ServerNode) Reset() {
	*x = ServerNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNode) ProtoMessage() {}

func (x *ServerNode) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNode.ProtoReflect.Descriptor instead.
func (*ServerNode) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{0}
}

func (x *ServerNode) GetServerType() ServerType {
	if x != nil {
		return x.ServerType
	}
	return ServerType_NONE
}

func (x *ServerNode) GetServerID() uint32 {
	if x != nil {
		return x.ServerID
	}
	return 0
}

func (x *ServerNode) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ServerNode) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// 原始包
type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head *PacketHead `protobuf:"bytes,1,opt,name=Head,proto3" json:"Head,omitempty"` // 包头
	Buff []byte      `protobuf:"bytes,2,opt,name=Buff,proto3" json:"Buff,omitempty"` // proto压缩数据
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{1}
}

func (x *Packet) GetHead() *PacketHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Packet) GetBuff() []byte {
	if x != nil {
		return x.Buff
	}
	return nil
}

// 包头
type PacketHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcServerType ServerType `protobuf:"varint,1,opt,name=SrcServerType,proto3,enum=pb.ServerType" json:"SrcServerType,omitempty"` // 源服务类型
	SrcServerID   uint32     `protobuf:"varint,2,opt,name=SrcServerID,proto3" json:"SrcServerID,omitempty"`                        // 源集群id
	DstServerType ServerType `protobuf:"varint,3,opt,name=DstServerType,proto3,enum=pb.ServerType" json:"DstServerType,omitempty"` // 目标集群类型
	DstServerID   uint32     `protobuf:"varint,4,opt,name=DstServerID,proto3" json:"DstServerID,omitempty"`                        // 目标集群id 大于0优先
	SendType      SendType   `protobuf:"varint,5,opt,name=SendType,proto3,enum=pb.SendType" json:"SendType,omitempty"`             // 发送类型
	ApiCode       int32      `protobuf:"varint,6,opt,name=ApiCode,proto3" json:"ApiCode,omitempty"`                                // Api代码
	SeqID         uint32     `protobuf:"varint,7,opt,name=SeqID,proto3" json:"SeqID,omitempty"`                                    // 序列号
	Time          int64      `protobuf:"varint,8,opt,name=Time,proto3" json:"Time,omitempty"`                                      // 请求时间戳
	UID           uint64     `protobuf:"varint,9,opt,name=UID,proto3" json:"UID,omitempty"`                                        // 目标玩家uid
}

func (x *PacketHead) Reset() {
	*x = PacketHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketHead) ProtoMessage() {}

func (x *PacketHead) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketHead.ProtoReflect.Descriptor instead.
func (*PacketHead) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{2}
}

func (x *PacketHead) GetSrcServerType() ServerType {
	if x != nil {
		return x.SrcServerType
	}
	return ServerType_NONE
}

func (x *PacketHead) GetSrcServerID() uint32 {
	if x != nil {
		return x.SrcServerID
	}
	return 0
}

func (x *PacketHead) GetDstServerType() ServerType {
	if x != nil {
		return x.DstServerType
	}
	return ServerType_NONE
}

func (x *PacketHead) GetDstServerID() uint32 {
	if x != nil {
		return x.DstServerID
	}
	return 0
}

func (x *PacketHead) GetSendType() SendType {
	if x != nil {
		return x.SendType
	}
	return SendType_PLAYER
}

func (x *PacketHead) GetApiCode() int32 {
	if x != nil {
		return x.ApiCode
	}
	return 0
}

func (x *PacketHead) GetSeqID() uint32 {
	if x != nil {
		return x.SeqID
	}
	return 0
}

func (x *PacketHead) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *PacketHead) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

// 客户端包头
type RpcHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`    // 错误码 ErrorCode
	ErrMsg string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"` // 错误信息
}

func (x *RpcHead) Reset() {
	*x = RpcHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHead) ProtoMessage() {}

func (x *RpcHead) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHead.ProtoReflect.Descriptor instead.
func (*RpcHead) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{3}
}

func (x *RpcHead) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RpcHead) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

// 服务之前调用包头（任意参数接口调用）
type ActorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorName string `protobuf:"bytes,1,opt,name=ActorName,proto3" json:"ActorName,omitempty"`
	FuncName  string `protobuf:"bytes,2,opt,name=FuncName,proto3" json:"FuncName,omitempty"`
	Buff      []byte `protobuf:"bytes,3,opt,name=Buff,proto3" json:"Buff,omitempty"`
}

func (x *ActorRequest) Reset() {
	*x = ActorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorRequest) ProtoMessage() {}

func (x *ActorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorRequest.ProtoReflect.Descriptor instead.
func (*ActorRequest) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{4}
}

func (x *ActorRequest) GetActorName() string {
	if x != nil {
		return x.ActorName
	}
	return ""
}

func (x *ActorRequest) GetFuncName() string {
	if x != nil {
		return x.FuncName
	}
	return ""
}

func (x *ActorRequest) GetBuff() []byte {
	if x != nil {
		return x.Buff
	}
	return nil
}

type ActorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head *RpcHead `protobuf:"bytes,1,opt,name=Head,proto3" json:"Head,omitempty"`
	Buff []byte   `protobuf:"bytes,2,opt,name=Buff,proto3" json:"Buff,omitempty"`
}

func (x *ActorResponse) Reset() {
	*x = ActorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorResponse) ProtoMessage() {}

func (x *ActorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorResponse.ProtoReflect.Descriptor instead.
func (*ActorResponse) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{5}
}

func (x *ActorResponse) GetHead() *RpcHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *ActorResponse) GetBuff() []byte {
	if x != nil {
		return x.Buff
	}
	return nil
}

var File_packet_proto protoreflect.FileDescriptor

var file_packet_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0x7c, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x2e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74,
	0x22, 0x40, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x42, 0x75, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x42, 0x75,
	0x66, 0x66, 0x22, 0xbc, 0x02, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x34, 0x0a, 0x0d, 0x53, 0x72, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x53, 0x72, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x72, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x53, 0x72,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x0d, 0x44, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0d, 0x44, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x44, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x28, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x70, 0x69, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x41, 0x70,
	0x69, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x65, 0x71, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x65, 0x71, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x49,
	0x44, 0x22, 0x35, 0x0a, 0x07, 0x52, 0x70, 0x63, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x5c, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x75, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x42, 0x75, 0x66, 0x66, 0x22, 0x44, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x70, 0x63, 0x48, 0x65,
	0x61, 0x64, 0x52, 0x04, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x75, 0x66, 0x66,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x42, 0x75, 0x66, 0x66, 0x2a, 0x33, 0x0a, 0x0a,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x58, 0x10,
	0x03, 0x2a, 0x2d, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x44,
	0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x10, 0x02,
	0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_packet_proto_rawDescOnce sync.Once
	file_packet_proto_rawDescData = file_packet_proto_rawDesc
)

func file_packet_proto_rawDescGZIP() []byte {
	file_packet_proto_rawDescOnce.Do(func() {
		file_packet_proto_rawDescData = protoimpl.X.CompressGZIP(file_packet_proto_rawDescData)
	})
	return file_packet_proto_rawDescData
}

var file_packet_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_packet_proto_goTypes = []interface{}{
	(ServerType)(0),       // 0: pb.ServerType
	(SendType)(0),         // 1: pb.SendType
	(*ServerNode)(nil),    // 2: pb.ServerNode
	(*Packet)(nil),        // 3: pb.Packet
	(*PacketHead)(nil),    // 4: pb.PacketHead
	(*RpcHead)(nil),       // 5: pb.RpcHead
	(*ActorRequest)(nil),  // 6: pb.ActorRequest
	(*ActorResponse)(nil), // 7: pb.ActorResponse
}
var file_packet_proto_depIdxs = []int32{
	0, // 0: pb.ServerNode.ServerType:type_name -> pb.ServerType
	4, // 1: pb.Packet.Head:type_name -> pb.PacketHead
	0, // 2: pb.PacketHead.SrcServerType:type_name -> pb.ServerType
	0, // 3: pb.PacketHead.DstServerType:type_name -> pb.ServerType
	1, // 4: pb.PacketHead.SendType:type_name -> pb.SendType
	5, // 5: pb.ActorResponse.Head:type_name -> pb.RpcHead
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_packet_proto_init() }
func file_packet_proto_init() {
	if File_packet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_packet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packet_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packet_proto_goTypes,
		DependencyIndexes: file_packet_proto_depIdxs,
		EnumInfos:         file_packet_proto_enumTypes,
		MessageInfos:      file_packet_proto_msgTypes,
	}.Build()
	File_packet_proto = out.File
	file_packet_proto_rawDesc = nil
	file_packet_proto_goTypes = nil
	file_packet_proto_depIdxs = nil
}
