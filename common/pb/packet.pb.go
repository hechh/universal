// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: packet.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                          // 节点名称
	Addr          string                 `protobuf:"bytes,2,opt,name=Addr,proto3" json:"Addr,omitempty"`                          // 节点地址
	Type          NodeType               `protobuf:"varint,3,opt,name=Type,proto3,enum=universal.NodeType" json:"Type,omitempty"` // 节点类型
	Id            int32                  `protobuf:"varint,4,opt,name=Id,proto3" json:"Id,omitempty"`                             // 节点ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_packet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Node) GetType() NodeType {
	if x != nil {
		return x.Type
	}
	return NodeType_NodeTypeBegin
}

func (x *Node) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Router struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gate          int32                  `protobuf:"varint,1,opt,name=gate,proto3" json:"gate,omitempty"`       // 网关服务
	Room          int32                  `protobuf:"varint,2,opt,name=room,proto3" json:"room,omitempty"`       // 房间服务
	Match         int32                  `protobuf:"varint,3,opt,name=match,proto3" json:"match,omitempty"`     // 匹配服务
	Db            int32                  `protobuf:"varint,4,opt,name=db,proto3" json:"db,omitempty"`           // 数据服务
	Builder       int32                  `protobuf:"varint,5,opt,name=builder,proto3" json:"builder,omitempty"` // 构建服务
	Gm            int32                  `protobuf:"varint,6,opt,name=gm,proto3" json:"gm,omitempty"`           // GM服务
	Game          int32                  `protobuf:"varint,7,opt,name=game,proto3" json:"game,omitempty"`       // 游戏服务
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Router) Reset() {
	*x = Router{}
	mi := &file_packet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Router) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Router) ProtoMessage() {}

func (x *Router) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Router.ProtoReflect.Descriptor instead.
func (*Router) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{1}
}

func (x *Router) GetGate() int32 {
	if x != nil {
		return x.Gate
	}
	return 0
}

func (x *Router) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *Router) GetMatch() int32 {
	if x != nil {
		return x.Match
	}
	return 0
}

func (x *Router) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Router) GetBuilder() int32 {
	if x != nil {
		return x.Builder
	}
	return 0
}

func (x *Router) GetGm() int32 {
	if x != nil {
		return x.Gm
	}
	return 0
}

func (x *Router) GetGame() int32 {
	if x != nil {
		return x.Game
	}
	return 0
}

type NodeRouter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeType      NodeType               `protobuf:"varint,1,opt,name=NodeType,proto3,enum=universal.NodeType" json:"NodeType,omitempty"`
	NodeId        int32                  `protobuf:"varint,2,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	ActorFunc     string                 `protobuf:"bytes,3,opt,name=ActorFunc,proto3" json:"ActorFunc,omitempty"`
	ActorId       uint64                 `protobuf:"varint,5,opt,name=ActorId,proto3" json:"ActorId,omitempty"`
	Router        uint64                 `protobuf:"varint,6,opt,name=Router,proto3" json:"Router,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeRouter) Reset() {
	*x = NodeRouter{}
	mi := &file_packet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeRouter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRouter) ProtoMessage() {}

func (x *NodeRouter) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRouter.ProtoReflect.Descriptor instead.
func (*NodeRouter) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{2}
}

func (x *NodeRouter) GetNodeType() NodeType {
	if x != nil {
		return x.NodeType
	}
	return NodeType_NodeTypeBegin
}

func (x *NodeRouter) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeRouter) GetActorFunc() string {
	if x != nil {
		return x.ActorFunc
	}
	return ""
}

func (x *NodeRouter) GetActorId() uint64 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *NodeRouter) GetRouter() uint64 {
	if x != nil {
		return x.Router
	}
	return 0
}

type Head struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Src           *NodeRouter            `protobuf:"bytes,1,opt,name=Src,proto3" json:"Src,omitempty"`
	Dst           *NodeRouter            `protobuf:"bytes,2,opt,name=Dst,proto3" json:"Dst,omitempty"`
	Reply         string                 `protobuf:"bytes,3,opt,name=Reply,proto3" json:"Reply,omitempty"`
	ActorName     string                 `protobuf:"bytes,4,opt,name=ActorName,proto3" json:"ActorName,omitempty"`
	FuncName      string                 `protobuf:"bytes,5,opt,name=FuncName,proto3" json:"FuncName,omitempty"`
	ActorId       uint64                 `protobuf:"varint,6,opt,name=ActorId,proto3" json:"ActorId,omitempty"`
	Uid           uint64                 `protobuf:"varint,7,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Seq           uint32                 `protobuf:"varint,8,opt,name=Seq,proto3" json:"Seq,omitempty"`
	Cmd           uint32                 `protobuf:"varint,9,opt,name=Cmd,proto3" json:"Cmd,omitempty"`
	Reference     uint32                 `protobuf:"varint,10,opt,name=Reference,proto3" json:"Reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Head) Reset() {
	*x = Head{}
	mi := &file_packet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Head) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Head) ProtoMessage() {}

func (x *Head) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Head.ProtoReflect.Descriptor instead.
func (*Head) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{3}
}

func (x *Head) GetSrc() *NodeRouter {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *Head) GetDst() *NodeRouter {
	if x != nil {
		return x.Dst
	}
	return nil
}

func (x *Head) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *Head) GetActorName() string {
	if x != nil {
		return x.ActorName
	}
	return ""
}

func (x *Head) GetFuncName() string {
	if x != nil {
		return x.FuncName
	}
	return ""
}

func (x *Head) GetActorId() uint64 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *Head) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Head) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Head) GetCmd() uint32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *Head) GetReference() uint32 {
	if x != nil {
		return x.Reference
	}
	return 0
}

type Packet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Head          *Head                  `protobuf:"bytes,1,opt,name=Head,proto3" json:"Head,omitempty"`
	Body          []byte                 `protobuf:"bytes,2,opt,name=Body,proto3" json:"Body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Packet) Reset() {
	*x = Packet{}
	mi := &file_packet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{4}
}

func (x *Packet) GetHead() *Head {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Packet) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type RspHead struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	ErrMsg        string                 `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RspHead) Reset() {
	*x = RspHead{}
	mi := &file_packet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RspHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspHead) ProtoMessage() {}

func (x *RspHead) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspHead.ProtoReflect.Descriptor instead.
func (*RspHead) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{5}
}

func (x *RspHead) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RspHead) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

var File_packet_proto protoreflect.FileDescriptor

var file_packet_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x1a, 0x15, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x66, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x67, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x06, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x67, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x64, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x67, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x67, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65,
	0x22, 0xa5, 0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12,
	0x2f, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x22, 0x96, 0x02, 0x0a, 0x04, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x27, 0x0a, 0x03, 0x53, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x03, 0x53, 0x72, 0x63, 0x12, 0x27, 0x0a, 0x03, 0x44, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x03,
	0x44, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x53, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x6d, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x43, 0x6d, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x22, 0x41, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x42, 0x6f, 0x64, 0x79, 0x22, 0x35, 0x0a, 0x07, 0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x42, 0x15, 0x5a, 0x13, 0x75,
	0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_packet_proto_rawDescOnce sync.Once
	file_packet_proto_rawDescData []byte
)

func file_packet_proto_rawDescGZIP() []byte {
	file_packet_proto_rawDescOnce.Do(func() {
		file_packet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_packet_proto_rawDesc), len(file_packet_proto_rawDesc)))
	})
	return file_packet_proto_rawDescData
}

var file_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_packet_proto_goTypes = []any{
	(*Node)(nil),       // 0: universal.Node
	(*Router)(nil),     // 1: universal.Router
	(*NodeRouter)(nil), // 2: universal.NodeRouter
	(*Head)(nil),       // 3: universal.Head
	(*Packet)(nil),     // 4: universal.Packet
	(*RspHead)(nil),    // 5: universal.RspHead
	(NodeType)(0),      // 6: universal.NodeType
}
var file_packet_proto_depIdxs = []int32{
	6, // 0: universal.Node.Type:type_name -> universal.NodeType
	6, // 1: universal.NodeRouter.NodeType:type_name -> universal.NodeType
	2, // 2: universal.Head.Src:type_name -> universal.NodeRouter
	2, // 3: universal.Head.Dst:type_name -> universal.NodeRouter
	3, // 4: universal.Packet.Head:type_name -> universal.Head
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_packet_proto_init() }
func file_packet_proto_init() {
	if File_packet_proto != nil {
		return
	}
	file_global_enum_cfg_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_packet_proto_rawDesc), len(file_packet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packet_proto_goTypes,
		DependencyIndexes: file_packet_proto_depIdxs,
		MessageInfos:      file_packet_proto_msgTypes,
	}.Build()
	File_packet_proto = out.File
	file_packet_proto_goTypes = nil
	file_packet_proto_depIdxs = nil
}
