// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.14.0
// source: packet.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 服务器类型
type SERVER int32

const (
	SERVER_Gate SERVER = 0 // gate
	SERVER_Game SERVER = 1 // game
	SERVER_Db   SERVER = 2 // db
	SERVER_Gm   SERVER = 3 // gm
)

// Enum value maps for SERVER.
var (
	SERVER_name = map[int32]string{
		0: "Gate",
		1: "Game",
		2: "Db",
		3: "Gm",
	}
	SERVER_value = map[string]int32{
		"Gate": 0,
		"Game": 1,
		"Db":   2,
		"Gm":   3,
	}
)

func (x SERVER) Enum() *SERVER {
	p := new(SERVER)
	*p = x
	return p
}

func (x SERVER) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SERVER) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_proto_enumTypes[0].Descriptor()
}

func (SERVER) Type() protoreflect.EnumType {
	return &file_packet_proto_enumTypes[0]
}

func (x SERVER) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SERVER.Descriptor instead.
func (SERVER) EnumDescriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{0}
}

// 路由类型
type ROUTE int32

const (
	ROUTE_UID      ROUTE = 0
	ROUTE_RegionID ROUTE = 1
)

// Enum value maps for ROUTE.
var (
	ROUTE_name = map[int32]string{
		0: "UID",
		1: "RegionID",
	}
	ROUTE_value = map[string]int32{
		"UID":      0,
		"RegionID": 1,
	}
)

func (x ROUTE) Enum() *ROUTE {
	p := new(ROUTE)
	*p = x
	return p
}

func (x ROUTE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ROUTE) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_proto_enumTypes[1].Descriptor()
}

func (ROUTE) Type() protoreflect.EnumType {
	return &file_packet_proto_enumTypes[1]
}

func (x ROUTE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ROUTE.Descriptor instead.
func (ROUTE) EnumDescriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{1}
}

// 发送类型
type SEND int32

const (
	SEND_Point     SEND = 0
	SEND_Broadcast SEND = 1
)

// Enum value maps for SEND.
var (
	SEND_name = map[int32]string{
		0: "Point",
		1: "Broadcast",
	}
	SEND_value = map[string]int32{
		"Point":     0,
		"Broadcast": 1,
	}
)

func (x SEND) Enum() *SEND {
	p := new(SEND)
	*p = x
	return p
}

func (x SEND) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SEND) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_proto_enumTypes[2].Descriptor()
}

func (SEND) Type() protoreflect.EnumType {
	return &file_packet_proto_enumTypes[2]
}

func (x SEND) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SEND.Descriptor instead.
func (SEND) EnumDescriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{2}
}

// 集群信息
type ServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       SERVER `protobuf:"varint,1,opt,name=Type,proto3,enum=pb.SERVER" json:"Type,omitempty"`
	Ip         string `protobuf:"bytes,2,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port       int32  `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	Version    uint32 `protobuf:"varint,4,opt,name=Version,proto3" json:"Version,omitempty"` // 版本号
	ServerID   uint32 `protobuf:"varint,5,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	CreateTime uint64 `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"` // 加入时间
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{0}
}

func (x *ServerInfo) GetType() SERVER {
	if x != nil {
		return x.Type
	}
	return SERVER_Gate
}

func (x *ServerInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ServerInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ServerInfo) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ServerInfo) GetServerID() uint32 {
	if x != nil {
		return x.ServerID
	}
	return 0
}

func (x *ServerInfo) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type RouteTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gate uint32 `protobuf:"varint,1,opt,name=Gate,proto3" json:"Gate,omitempty"`
	Game uint32 `protobuf:"varint,2,opt,name=Game,proto3" json:"Game,omitempty"`
	Gm   uint32 `protobuf:"varint,3,opt,name=Gm,proto3" json:"Gm,omitempty"`
	Db   uint32 `protobuf:"varint,4,opt,name=Db,proto3" json:"Db,omitempty"`
}

func (x *RouteTable) Reset() {
	*x = RouteTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteTable) ProtoMessage() {}

func (x *RouteTable) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteTable.ProtoReflect.Descriptor instead.
func (*RouteTable) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{1}
}

func (x *RouteTable) GetGate() uint32 {
	if x != nil {
		return x.Gate
	}
	return 0
}

func (x *RouteTable) GetGame() uint32 {
	if x != nil {
		return x.Game
	}
	return 0
}

func (x *RouteTable) GetGm() uint32 {
	if x != nil {
		return x.Gm
	}
	return 0
}

func (x *RouteTable) GetDb() uint32 {
	if x != nil {
		return x.Db
	}
	return 0
}

type Head struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendType      SEND        `protobuf:"varint,1,opt,name=SendType,proto3,enum=pb.SEND" json:"SendType,omitempty"`             // 发送类型
	SrcServerID   uint32      `protobuf:"varint,2,opt,name=SrcServerID,proto3" json:"SrcServerID,omitempty"`                    // 源集群id
	SrcServerType SERVER      `protobuf:"varint,3,opt,name=SrcServerType,proto3,enum=pb.SERVER" json:"SrcServerType,omitempty"` // 目标集群类型
	DstServerID   uint32      `protobuf:"varint,4,opt,name=DstServerID,proto3" json:"DstServerID,omitempty"`                    // 目标集群id 大于0优先
	DstServerType SERVER      `protobuf:"varint,5,opt,name=DstServerType,proto3,enum=pb.SERVER" json:"DstServerType,omitempty"` // 目标集群类型
	RouteType     ROUTE       `protobuf:"varint,6,opt,name=RouteType,proto3,enum=pb.ROUTE" json:"RouteType,omitempty"`          // 路由类型
	RegionID      uint64      `protobuf:"varint,7,opt,name=RegionID,proto3" json:"RegionID,omitempty"`                          // 区服ID
	UID           uint64      `protobuf:"varint,8,opt,name=UID,proto3" json:"UID,omitempty"`                                    // 玩家UID
	SocketID      uint32      `protobuf:"varint,9,opt,name=SocketID,proto3" json:"SocketID,omitempty"`                          // 客户端连接id
	SeqID         uint32      `protobuf:"varint,10,opt,name=SeqID,proto3" json:"SeqID,omitempty"`                               // 序列号
	ApiID         uint64      `protobuf:"varint,11,opt,name=ApiID,proto3" json:"ApiID,omitempty"`                               // 请求函数名称
	Table         *RouteTable `protobuf:"bytes,12,opt,name=Table,proto3" json:"Table,omitempty"`                                // 路由表
}

func (x *Head) Reset() {
	*x = Head{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Head) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Head) ProtoMessage() {}

func (x *Head) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Head.ProtoReflect.Descriptor instead.
func (*Head) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{2}
}

func (x *Head) GetSendType() SEND {
	if x != nil {
		return x.SendType
	}
	return SEND_Point
}

func (x *Head) GetSrcServerID() uint32 {
	if x != nil {
		return x.SrcServerID
	}
	return 0
}

func (x *Head) GetSrcServerType() SERVER {
	if x != nil {
		return x.SrcServerType
	}
	return SERVER_Gate
}

func (x *Head) GetDstServerID() uint32 {
	if x != nil {
		return x.DstServerID
	}
	return 0
}

func (x *Head) GetDstServerType() SERVER {
	if x != nil {
		return x.DstServerType
	}
	return SERVER_Gate
}

func (x *Head) GetRouteType() ROUTE {
	if x != nil {
		return x.RouteType
	}
	return ROUTE_UID
}

func (x *Head) GetRegionID() uint64 {
	if x != nil {
		return x.RegionID
	}
	return 0
}

func (x *Head) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *Head) GetSocketID() uint32 {
	if x != nil {
		return x.SocketID
	}
	return 0
}

func (x *Head) GetSeqID() uint32 {
	if x != nil {
		return x.SeqID
	}
	return 0
}

func (x *Head) GetApiID() uint64 {
	if x != nil {
		return x.ApiID
	}
	return 0
}

func (x *Head) GetTable() *RouteTable {
	if x != nil {
		return x.Table
	}
	return nil
}

type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head *Head  `protobuf:"bytes,1,opt,name=Head,proto3" json:"Head,omitempty"`
	Body []byte `protobuf:"bytes,2,opt,name=Body,proto3" json:"Body,omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{3}
}

func (x *Packet) GetHead() *Head {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Packet) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type RspHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stx           uint32 `protobuf:"varint,1,opt,name=Stx,proto3" json:"Stx,omitempty"`
	Ckx           uint32 `protobuf:"varint,2,opt,name=Ckx,proto3" json:"Ckx,omitempty"`
	DstServerType SERVER `protobuf:"varint,3,opt,name=DstServerType,proto3,enum=pb.SERVER" json:"DstServerType,omitempty"` // 发送者服务器类型
	UID           uint64 `protobuf:"varint,4,opt,name=UID,proto3" json:"UID,omitempty"`                                    // 目标ID
	SeqID         uint32 `protobuf:"varint,5,opt,name=SeqID,proto3" json:"SeqID,omitempty"`                                // 序列号
	Code          uint32 `protobuf:"varint,6,opt,name=Code,proto3" json:"Code,omitempty"`                                  // 错误码 ErrorCode
}

func (x *RspHead) Reset() {
	*x = RspHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspHead) ProtoMessage() {}

func (x *RspHead) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspHead.ProtoReflect.Descriptor instead.
func (*RspHead) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{4}
}

func (x *RspHead) GetStx() uint32 {
	if x != nil {
		return x.Stx
	}
	return 0
}

func (x *RspHead) GetCkx() uint32 {
	if x != nil {
		return x.Ckx
	}
	return 0
}

func (x *RspHead) GetDstServerType() SERVER {
	if x != nil {
		return x.DstServerType
	}
	return SERVER_Gate
}

func (x *RspHead) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *RspHead) GetSeqID() uint32 {
	if x != nil {
		return x.SeqID
	}
	return 0
}

func (x *RspHead) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

var File_packet_proto protoreflect.FileDescriptor

var file_packet_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0xa6, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x0a, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x47, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x47, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x47,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x44, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x44,
	0x62, 0x22, 0x99, 0x03, 0x0a, 0x04, 0x48, 0x65, 0x61, 0x64, 0x12, 0x24, 0x0a, 0x08, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x45, 0x4e, 0x44, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x53, 0x72, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x53, 0x72, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x30, 0x0a, 0x0d, 0x53, 0x72, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x45, 0x52, 0x56, 0x45, 0x52, 0x52, 0x0d, 0x53, 0x72, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x44, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x0d, 0x44, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x52, 0x0d, 0x44, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x65, 0x71, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x65, 0x71, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x69, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x41, 0x70, 0x69, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x3a, 0x0a,
	0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x52,
	0x04, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x9b, 0x01, 0x0a, 0x07, 0x52, 0x73,
	0x70, 0x48, 0x65, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x53, 0x74, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x6b, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x43, 0x6b, 0x78, 0x12, 0x30, 0x0a, 0x0d, 0x44, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x52, 0x0d, 0x44, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x65, 0x71, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x65,
	0x71, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x2a, 0x2c, 0x0a, 0x06, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x52, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x47,
	0x61, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x62, 0x10, 0x02, 0x12, 0x06, 0x0a,
	0x02, 0x47, 0x6d, 0x10, 0x03, 0x2a, 0x1e, 0x0a, 0x05, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x12, 0x07,
	0x0a, 0x03, 0x55, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x10, 0x01, 0x2a, 0x20, 0x0a, 0x04, 0x53, 0x45, 0x4e, 0x44, 0x12, 0x09, 0x0a,
	0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x10, 0x01, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_packet_proto_rawDescOnce sync.Once
	file_packet_proto_rawDescData = file_packet_proto_rawDesc
)

func file_packet_proto_rawDescGZIP() []byte {
	file_packet_proto_rawDescOnce.Do(func() {
		file_packet_proto_rawDescData = protoimpl.X.CompressGZIP(file_packet_proto_rawDescData)
	})
	return file_packet_proto_rawDescData
}

var file_packet_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_packet_proto_goTypes = []interface{}{
	(SERVER)(0),        // 0: pb.SERVER
	(ROUTE)(0),         // 1: pb.ROUTE
	(SEND)(0),          // 2: pb.SEND
	(*ServerInfo)(nil), // 3: pb.ServerInfo
	(*RouteTable)(nil), // 4: pb.RouteTable
	(*Head)(nil),       // 5: pb.Head
	(*Packet)(nil),     // 6: pb.Packet
	(*RspHead)(nil),    // 7: pb.RspHead
}
var file_packet_proto_depIdxs = []int32{
	0, // 0: pb.ServerInfo.Type:type_name -> pb.SERVER
	2, // 1: pb.Head.SendType:type_name -> pb.SEND
	0, // 2: pb.Head.SrcServerType:type_name -> pb.SERVER
	0, // 3: pb.Head.DstServerType:type_name -> pb.SERVER
	1, // 4: pb.Head.RouteType:type_name -> pb.ROUTE
	4, // 5: pb.Head.Table:type_name -> pb.RouteTable
	5, // 6: pb.Packet.Head:type_name -> pb.Head
	0, // 7: pb.RspHead.DstServerType:type_name -> pb.SERVER
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_packet_proto_init() }
func file_packet_proto_init() {
	if File_packet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_packet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Head); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packet_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packet_proto_goTypes,
		DependencyIndexes: file_packet_proto_depIdxs,
		EnumInfos:         file_packet_proto_enumTypes,
		MessageInfos:      file_packet_proto_msgTypes,
	}.Build()
	File_packet_proto = out.File
	file_packet_proto_rawDesc = nil
	file_packet_proto_goTypes = nil
	file_packet_proto_depIdxs = nil
}
