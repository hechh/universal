// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: packet.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeType int32

const (
	NodeType_Begin  NodeType = 0 // 节点类型-begin
	NodeType_Gate   NodeType = 1 // 节点类型-Gate
	NodeType_Match  NodeType = 2 // 节点类型-Match
	NodeType_Room   NodeType = 3 // 节点类型-Room
	NodeType_Db     NodeType = 4 // 节点类型-Db
	NodeType_Build  NodeType = 5 // 节点类型-Build
	NodeType_Gm     NodeType = 6 // 节点类型-Gm
	NodeType_Game   NodeType = 7 // 节点类型-Game
	NodeType_End    NodeType = 8 // 节点类型-End
	NodeType_Client NodeType = 9 // 节点类型-Client
)

// Enum value maps for NodeType.
var (
	NodeType_name = map[int32]string{
		0: "Begin",
		1: "Gate",
		2: "Match",
		3: "Room",
		4: "Db",
		5: "Build",
		6: "Gm",
		7: "Game",
		8: "End",
		9: "Client",
	}
	NodeType_value = map[string]int32{
		"Begin":  0,
		"Gate":   1,
		"Match":  2,
		"Room":   3,
		"Db":     4,
		"Build":  5,
		"Gm":     6,
		"Game":   7,
		"End":    8,
		"Client": 9,
	}
)

func (x NodeType) Enum() *NodeType {
	p := new(NodeType)
	*p = x
	return p
}

func (x NodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_proto_enumTypes[0].Descriptor()
}

func (NodeType) Type() protoreflect.EnumType {
	return &file_packet_proto_enumTypes[0]
}

func (x NodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeType.Descriptor instead.
func (NodeType) EnumDescriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{0}
}

// 发送类型
type SendType int32

const (
	SendType_POINT     SendType = 0 // 发送类型-点对点
	SendType_BROADCAST SendType = 1 // 发送类型-广播
)

// Enum value maps for SendType.
var (
	SendType_name = map[int32]string{
		0: "POINT",
		1: "BROADCAST",
	}
	SendType_value = map[string]int32{
		"POINT":     0,
		"BROADCAST": 1,
	}
)

func (x SendType) Enum() *SendType {
	p := new(SendType)
	*p = x
	return p
}

func (x SendType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendType) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_proto_enumTypes[1].Descriptor()
}

func (SendType) Type() protoreflect.EnumType {
	return &file_packet_proto_enumTypes[1]
}

func (x SendType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendType.Descriptor instead.
func (SendType) EnumDescriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{1}
}

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                          // 节点名称
	Type          NodeType               `protobuf:"varint,4,opt,name=Type,proto3,enum=universal.NodeType" json:"Type,omitempty"` // 节点类型
	Id            int32                  `protobuf:"varint,5,opt,name=Id,proto3" json:"Id,omitempty"`                             // 节点ID
	Ip            string                 `protobuf:"bytes,2,opt,name=Ip,proto3" json:"Ip,omitempty"`                              // ip地址
	Port          int32                  `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`                         // 端口
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_packet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetType() NodeType {
	if x != nil {
		return x.Type
	}
	return NodeType_Begin
}

func (x *Node) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Node) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Node) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Router struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gate          int32                  `protobuf:"varint,1,opt,name=Gate,proto3" json:"Gate,omitempty"`
	Game          int32                  `protobuf:"varint,2,opt,name=Game,proto3" json:"Game,omitempty"`
	Db            int32                  `protobuf:"varint,3,opt,name=Db,proto3" json:"Db,omitempty"`
	Build         int32                  `protobuf:"varint,4,opt,name=Build,proto3" json:"Build,omitempty"`
	Room          int32                  `protobuf:"varint,5,opt,name=Room,proto3" json:"Room,omitempty"`
	Match         int32                  `protobuf:"varint,6,opt,name=Match,proto3" json:"Match,omitempty"`
	Gm            int32                  `protobuf:"varint,7,opt,name=Gm,proto3" json:"Gm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Router) Reset() {
	*x = Router{}
	mi := &file_packet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Router) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Router) ProtoMessage() {}

func (x *Router) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Router.ProtoReflect.Descriptor instead.
func (*Router) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{1}
}

func (x *Router) GetGate() int32 {
	if x != nil {
		return x.Gate
	}
	return 0
}

func (x *Router) GetGame() int32 {
	if x != nil {
		return x.Game
	}
	return 0
}

func (x *Router) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Router) GetBuild() int32 {
	if x != nil {
		return x.Build
	}
	return 0
}

func (x *Router) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *Router) GetMatch() int32 {
	if x != nil {
		return x.Match
	}
	return 0
}

func (x *Router) GetGm() int32 {
	if x != nil {
		return x.Gm
	}
	return 0
}

type NodeRouter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeType      NodeType               `protobuf:"varint,1,opt,name=NodeType,proto3,enum=universal.NodeType" json:"NodeType,omitempty"`
	NodeId        int32                  `protobuf:"varint,2,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	ActorFunc     string                 `protobuf:"bytes,3,opt,name=ActorFunc,proto3" json:"ActorFunc,omitempty"`
	ActorId       uint64                 `protobuf:"varint,5,opt,name=ActorId,proto3" json:"ActorId,omitempty"`
	Router        *Router                `protobuf:"bytes,7,opt,name=Router,proto3" json:"Router,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeRouter) Reset() {
	*x = NodeRouter{}
	mi := &file_packet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeRouter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRouter) ProtoMessage() {}

func (x *NodeRouter) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRouter.ProtoReflect.Descriptor instead.
func (*NodeRouter) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{2}
}

func (x *NodeRouter) GetNodeType() NodeType {
	if x != nil {
		return x.NodeType
	}
	return NodeType_Begin
}

func (x *NodeRouter) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeRouter) GetActorFunc() string {
	if x != nil {
		return x.ActorFunc
	}
	return ""
}

func (x *NodeRouter) GetActorId() uint64 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *NodeRouter) GetRouter() *Router {
	if x != nil {
		return x.Router
	}
	return nil
}

type Head struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SendType      SendType               `protobuf:"varint,1,opt,name=SendType,proto3,enum=universal.SendType" json:"SendType,omitempty"`
	Src           *NodeRouter            `protobuf:"bytes,2,opt,name=Src,proto3" json:"Src,omitempty"`
	Dst           *NodeRouter            `protobuf:"bytes,3,opt,name=Dst,proto3" json:"Dst,omitempty"`
	Uid           uint64                 `protobuf:"varint,4,opt,name=Uid,proto3" json:"Uid,omitempty"`
	ActorName     string                 `protobuf:"bytes,5,opt,name=ActorName,proto3" json:"ActorName,omitempty"`
	FuncName      string                 `protobuf:"bytes,6,opt,name=FuncName,proto3" json:"FuncName,omitempty"`
	ActorId       uint64                 `protobuf:"varint,7,opt,name=ActorId,proto3" json:"ActorId,omitempty"`
	Seq           uint32                 `protobuf:"varint,8,opt,name=Seq,proto3" json:"Seq,omitempty"`
	Cmd           uint32                 `protobuf:"varint,9,opt,name=Cmd,proto3" json:"Cmd,omitempty"`
	Reference     uint32                 `protobuf:"varint,10,opt,name=Reference,proto3" json:"Reference,omitempty"`
	Reply         string                 `protobuf:"bytes,11,opt,name=Reply,proto3" json:"Reply,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Head) Reset() {
	*x = Head{}
	mi := &file_packet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Head) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Head) ProtoMessage() {}

func (x *Head) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Head.ProtoReflect.Descriptor instead.
func (*Head) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{3}
}

func (x *Head) GetSendType() SendType {
	if x != nil {
		return x.SendType
	}
	return SendType_POINT
}

func (x *Head) GetSrc() *NodeRouter {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *Head) GetDst() *NodeRouter {
	if x != nil {
		return x.Dst
	}
	return nil
}

func (x *Head) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Head) GetActorName() string {
	if x != nil {
		return x.ActorName
	}
	return ""
}

func (x *Head) GetFuncName() string {
	if x != nil {
		return x.FuncName
	}
	return ""
}

func (x *Head) GetActorId() uint64 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *Head) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Head) GetCmd() uint32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *Head) GetReference() uint32 {
	if x != nil {
		return x.Reference
	}
	return 0
}

func (x *Head) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

type Packet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Head          *Head                  `protobuf:"bytes,1,opt,name=Head,proto3" json:"Head,omitempty"`
	Body          []byte                 `protobuf:"bytes,2,opt,name=Body,proto3" json:"Body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Packet) Reset() {
	*x = Packet{}
	mi := &file_packet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{4}
}

func (x *Packet) GetHead() *Head {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Packet) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type RspHead struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	ErrMsg        string                 `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RspHead) Reset() {
	*x = RspHead{}
	mi := &file_packet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RspHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspHead) ProtoMessage() {}

func (x *RspHead) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspHead.ProtoReflect.Descriptor instead.
func (*RspHead) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{5}
}

func (x *RspHead) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RspHead) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

var File_packet_proto protoreflect.FileDescriptor

var file_packet_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x22, 0x77, 0x0a, 0x04, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x6f,
	0x72, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x47, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x47, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x44, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x44, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52,
	0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x47, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x47, 0x6d, 0x22, 0xb8, 0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x6c, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x22, 0xc7, 0x02, 0x0a, 0x04, 0x48, 0x65, 0x61, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x75, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x53, 0x72,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x03,
	0x53, 0x72, 0x63, 0x12, 0x27, 0x0a, 0x03, 0x44, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x03, 0x44, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x53, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x6d, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x43, 0x6d, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x41, 0x0a, 0x06, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x52, 0x04, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x35, 0x0a,
	0x07, 0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x2a, 0x6e, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x09, 0x0a, 0x05, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x47,
	0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x62,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x10, 0x05, 0x12, 0x06, 0x0a,
	0x02, 0x47, 0x6d, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x07, 0x12,
	0x07, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x10, 0x09, 0x2a, 0x24, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x09, 0x0a, 0x05, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x01, 0x42, 0x15, 0x5a, 0x13, 0x75, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_packet_proto_rawDescOnce sync.Once
	file_packet_proto_rawDescData []byte
)

func file_packet_proto_rawDescGZIP() []byte {
	file_packet_proto_rawDescOnce.Do(func() {
		file_packet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_packet_proto_rawDesc), len(file_packet_proto_rawDesc)))
	})
	return file_packet_proto_rawDescData
}

var file_packet_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_packet_proto_goTypes = []any{
	(NodeType)(0),      // 0: universal.NodeType
	(SendType)(0),      // 1: universal.SendType
	(*Node)(nil),       // 2: universal.Node
	(*Router)(nil),     // 3: universal.Router
	(*NodeRouter)(nil), // 4: universal.NodeRouter
	(*Head)(nil),       // 5: universal.Head
	(*Packet)(nil),     // 6: universal.Packet
	(*RspHead)(nil),    // 7: universal.RspHead
}
var file_packet_proto_depIdxs = []int32{
	0, // 0: universal.Node.Type:type_name -> universal.NodeType
	0, // 1: universal.NodeRouter.NodeType:type_name -> universal.NodeType
	3, // 2: universal.NodeRouter.Router:type_name -> universal.Router
	1, // 3: universal.Head.SendType:type_name -> universal.SendType
	4, // 4: universal.Head.Src:type_name -> universal.NodeRouter
	4, // 5: universal.Head.Dst:type_name -> universal.NodeRouter
	5, // 6: universal.Packet.Head:type_name -> universal.Head
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_packet_proto_init() }
func file_packet_proto_init() {
	if File_packet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_packet_proto_rawDesc), len(file_packet_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packet_proto_goTypes,
		DependencyIndexes: file_packet_proto_depIdxs,
		EnumInfos:         file_packet_proto_enumTypes,
		MessageInfos:      file_packet_proto_msgTypes,
	}.Build()
	File_packet_proto = out.File
	file_packet_proto_goTypes = nil
	file_packet_proto_depIdxs = nil
}
