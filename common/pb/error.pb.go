// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.2
// source: error.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 错误码
type ErrorCode int32

const (
	ErrorCode_Success                     ErrorCode = 0  // 成功
	ErrorCode_ProtoMarshal                ErrorCode = 1  // proto序列化失败
	ErrorCode_ProtoUnmarshal              ErrorCode = 2  // proto反序列化
	ErrorCode_JsonMarshal                 ErrorCode = 3  // Json序列化失败
	ErrorCode_JsonUnmarshal               ErrorCode = 4  // Json反序列化
	ErrorCode_Parameter                   ErrorCode = 5  // 参数错误
	ErrorCode_SocketClientSend            ErrorCode = 6  // websocket发送失败
	ErrorCode_SocketClientRead            ErrorCode = 7  // websocket接受失败
	ErrorCode_SocketFrameCheck            ErrorCode = 8  // websocket包体校验失败
	ErrorCode_SocketFrameHeaderSize       ErrorCode = 9  // websocket包头大小错误
	ErrorCode_SocketFrameBodySizeMaxLimit ErrorCode = 10 // body长度限制
	ErrorCode_SocketFrameSizeMaxLimit     ErrorCode = 11 // websocket包体超多最大值
	ErrorCode_Unknown                     ErrorCode = 12 // 未知错误
	ErrorCode_ActorNotSupported           ErrorCode = 13 // actor不支持
	ErrorCode_ActorHasRegistered          ErrorCode = 14 // actor已经注册
	ErrorCode_EtcdBuildClient             ErrorCode = 15 // etcd创建客户端失败
	ErrorCode_EtcdClientGet               ErrorCode = 16 // 查询etcd失败
	ErrorCode_EtcdClientPut               ErrorCode = 17 // 查询etcd失败
	ErrorCode_EtcdClientDelete            ErrorCode = 18 // 查询etcd失败
	ErrorCode_EtcdLeaseCreate             ErrorCode = 19 // 租赁
	ErrorCode_EtcdLeaseKeepAliveOnce      ErrorCode = 20 // 租赁
	ErrorCode_NatsBuildClient             ErrorCode = 21 // nats创建客户端失败
	ErrorCode_NatsPublish                 ErrorCode = 22 // 订阅失败
	ErrorCode_NatsSubscribe               ErrorCode = 23 // 订阅失败
	ErrorCode_ApiCodeNotFound             ErrorCode = 24 // apicode不支持
	ErrorCode_TypeNotSupported            ErrorCode = 25 // 类型不支持
	ErrorCode_SendTypeNotSupported        ErrorCode = 26 // sendtype发送类型不支持
	ErrorCode_ClusterNodeNotFound         ErrorCode = 27 // 服务节点没发现
	ErrorCode_ArrayOutOfBounds            ErrorCode = 28 // 数组越界
	ErrorCode_ReadYaml                    ErrorCode = 29 // yaml配置文件读取失败
	ErrorCode_YamlUnmarshal               ErrorCode = 30 // yaml文件反序列化
	ErrorCode_NotSupported                ErrorCode = 31 // 不支持
	ErrorCode_NotFound                    ErrorCode = 32 // 未找到
	ErrorCode_SocketAddr                  ErrorCode = 33 // 网络地址错误
	ErrorCode_GateLoginRequestExpected    ErrorCode = 34 // 登陆认证请求
	ErrorCode_HasConnected                ErrorCode = 35 // 已经连接
	ErrorCode_RedisPing                   ErrorCode = 36 // redis连接测试
	ErrorCode_HasRegistered               ErrorCode = 37 // 已经注册
	ErrorCode_OpenFile                    ErrorCode = 38 // 文件打开失败
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:  "Success",
		1:  "ProtoMarshal",
		2:  "ProtoUnmarshal",
		3:  "JsonMarshal",
		4:  "JsonUnmarshal",
		5:  "Parameter",
		6:  "SocketClientSend",
		7:  "SocketClientRead",
		8:  "SocketFrameCheck",
		9:  "SocketFrameHeaderSize",
		10: "SocketFrameBodySizeMaxLimit",
		11: "SocketFrameSizeMaxLimit",
		12: "Unknown",
		13: "ActorNotSupported",
		14: "ActorHasRegistered",
		15: "EtcdBuildClient",
		16: "EtcdClientGet",
		17: "EtcdClientPut",
		18: "EtcdClientDelete",
		19: "EtcdLeaseCreate",
		20: "EtcdLeaseKeepAliveOnce",
		21: "NatsBuildClient",
		22: "NatsPublish",
		23: "NatsSubscribe",
		24: "ApiCodeNotFound",
		25: "TypeNotSupported",
		26: "SendTypeNotSupported",
		27: "ClusterNodeNotFound",
		28: "ArrayOutOfBounds",
		29: "ReadYaml",
		30: "YamlUnmarshal",
		31: "NotSupported",
		32: "NotFound",
		33: "SocketAddr",
		34: "GateLoginRequestExpected",
		35: "HasConnected",
		36: "RedisPing",
		37: "HasRegistered",
		38: "OpenFile",
	}
	ErrorCode_value = map[string]int32{
		"Success":                     0,
		"ProtoMarshal":                1,
		"ProtoUnmarshal":              2,
		"JsonMarshal":                 3,
		"JsonUnmarshal":               4,
		"Parameter":                   5,
		"SocketClientSend":            6,
		"SocketClientRead":            7,
		"SocketFrameCheck":            8,
		"SocketFrameHeaderSize":       9,
		"SocketFrameBodySizeMaxLimit": 10,
		"SocketFrameSizeMaxLimit":     11,
		"Unknown":                     12,
		"ActorNotSupported":           13,
		"ActorHasRegistered":          14,
		"EtcdBuildClient":             15,
		"EtcdClientGet":               16,
		"EtcdClientPut":               17,
		"EtcdClientDelete":            18,
		"EtcdLeaseCreate":             19,
		"EtcdLeaseKeepAliveOnce":      20,
		"NatsBuildClient":             21,
		"NatsPublish":                 22,
		"NatsSubscribe":               23,
		"ApiCodeNotFound":             24,
		"TypeNotSupported":            25,
		"SendTypeNotSupported":        26,
		"ClusterNodeNotFound":         27,
		"ArrayOutOfBounds":            28,
		"ReadYaml":                    29,
		"YamlUnmarshal":               30,
		"NotSupported":                31,
		"NotFound":                    32,
		"SocketAddr":                  33,
		"GateLoginRequestExpected":    34,
		"HasConnected":                35,
		"RedisPing":                   36,
		"HasRegistered":               37,
		"OpenFile":                    38,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_error_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_error_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_error_proto_rawDescGZIP(), []int{0}
}

var File_error_proto protoreflect.FileDescriptor

var file_error_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x2a, 0xa8, 0x06, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x12,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x55, 0x6e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4a, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x61,
	0x6c, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4a, 0x73, 0x6f, 0x6e, 0x55, 0x6e, 0x6d, 0x61, 0x72,
	0x73, 0x68, 0x61, 0x6c, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x10,
	0x07, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65,
	0x10, 0x09, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x10, 0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x10, 0x0b,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x0c, 0x12, 0x15, 0x0a,
	0x11, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x10, 0x0d, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x61, 0x73,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x0e, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x74, 0x63, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x10,
	0x0f, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x74, 0x63, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47,
	0x65, 0x74, 0x10, 0x10, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x74, 0x63, 0x64, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x50, 0x75, 0x74, 0x10, 0x11, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x74, 0x63, 0x64, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x12, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x74, 0x63, 0x64, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x10, 0x13, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x74, 0x63, 0x64, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x4b,
	0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x4f, 0x6e, 0x63, 0x65, 0x10, 0x14, 0x12, 0x13,
	0x0a, 0x0f, 0x4e, 0x61, 0x74, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x10, 0x15, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x61, 0x74, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x10, 0x16, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x61, 0x74, 0x73, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x10, 0x17, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x70, 0x69, 0x43, 0x6f,
	0x64, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x18, 0x12, 0x14, 0x0a, 0x10,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x10, 0x19, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x10, 0x1a, 0x12, 0x17, 0x0a, 0x13,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x10, 0x1b, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4f, 0x75,
	0x74, 0x4f, 0x66, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x10, 0x1c, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x65, 0x61, 0x64, 0x59, 0x61, 0x6d, 0x6c, 0x10, 0x1d, 0x12, 0x11, 0x0a, 0x0d, 0x59, 0x61, 0x6d,
	0x6c, 0x55, 0x6e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x10, 0x1e, 0x12, 0x10, 0x0a, 0x0c,
	0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x10, 0x1f, 0x12, 0x0c,
	0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x20, 0x12, 0x0e, 0x0a, 0x0a,
	0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x10, 0x21, 0x12, 0x1c, 0x0a, 0x18,
	0x47, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x22, 0x12, 0x10, 0x0a, 0x0c, 0x48, 0x61,
	0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x23, 0x12, 0x0d, 0x0a, 0x09,
	0x52, 0x65, 0x64, 0x69, 0x73, 0x50, 0x69, 0x6e, 0x67, 0x10, 0x24, 0x12, 0x11, 0x0a, 0x0d, 0x48,
	0x61, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x25, 0x12, 0x0c,
	0x0a, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x26, 0x42, 0x07, 0x5a, 0x05,
	0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_error_proto_rawDescOnce sync.Once
	file_error_proto_rawDescData = file_error_proto_rawDesc
)

func file_error_proto_rawDescGZIP() []byte {
	file_error_proto_rawDescOnce.Do(func() {
		file_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_error_proto_rawDescData)
	})
	return file_error_proto_rawDescData
}

var file_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_error_proto_goTypes = []interface{}{
	(ErrorCode)(0), // 0: pb.ErrorCode
}
var file_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_error_proto_init() }
func file_error_proto_init() {
	if File_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_error_proto_goTypes,
		DependencyIndexes: file_error_proto_depIdxs,
		EnumInfos:         file_error_proto_enumTypes,
	}.Build()
	File_error_proto = out.File
	file_error_proto_rawDesc = nil
	file_error_proto_goTypes = nil
	file_error_proto_depIdxs = nil
}
