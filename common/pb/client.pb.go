// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.14.0
// source: client.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 登陆请求
type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead  *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`   // 包头
	AccountName string   `protobuf:"bytes,2,opt,name=AccountName,proto3" json:"AccountName,omitempty"` // 账号名
	TokenKey    string   `protobuf:"bytes,3,opt,name=TokenKey,proto3" json:"TokenKey,omitempty"`       // 秘钥 账号名称+accountid的+token md5
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *LoginRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *LoginRequest) GetTokenKey() string {
	if x != nil {
		return x.TokenKey
	}
	return ""
}

// 登陆返回
type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"` // 包头
	Time       uint64   `protobuf:"varint,2,opt,name=Time,proto3" json:"Time,omitempty"`            // 当前时间戳
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *LoginResponse) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// 心跳包
type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"` // 包头
	Time       uint64   `protobuf:"varint,2,opt,name=Time,proto3" json:"Time,omitempty"`            // 当前时间戳
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{2}
}

func (x *HeartbeatRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeartbeatRequest) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// 心跳包返回
type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"` // 包头
	SendTime   uint64   `protobuf:"varint,2,opt,name=SendTime,proto3" json:"SendTime,omitempty"`    // 发送时间戳
	RecvTime   uint64   `protobuf:"varint,3,opt,name=RecvTime,proto3" json:"RecvTime,omitempty"`    // 收到时间戳
	CurTime    uint64   `protobuf:"varint,4,opt,name=CurTime,proto3" json:"CurTime,omitempty"`      // 当前时间戳
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{3}
}

func (x *HeartbeatResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeartbeatResponse) GetSendTime() uint64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *HeartbeatResponse) GetRecvTime() uint64 {
	if x != nil {
		return x.RecvTime
	}
	return 0
}

func (x *HeartbeatResponse) GetCurTime() uint64 {
	if x != nil {
		return x.CurTime
	}
	return 0
}

// 玩家所有数据返回
type AllPlayerInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket      `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"` // 包头
	Mark       uint32        `protobuf:"varint,2,opt,name=Mark,proto3" json:"Mark,omitempty"`            // 位标记 PlayerDataType 0表示发送完成
	PlayerData *PBPlayerData `protobuf:"bytes,3,opt,name=PlayerData,proto3" json:"PlayerData,omitempty"` // 所有玩家数据
}

func (x *AllPlayerInfoNotify) Reset() {
	*x = AllPlayerInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllPlayerInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllPlayerInfoNotify) ProtoMessage() {}

func (x *AllPlayerInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllPlayerInfoNotify.ProtoReflect.Descriptor instead.
func (*AllPlayerInfoNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{4}
}

func (x *AllPlayerInfoNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *AllPlayerInfoNotify) GetMark() uint32 {
	if x != nil {
		return x.Mark
	}
	return 0
}

func (x *AllPlayerInfoNotify) GetPlayerData() *PBPlayerData {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

// 通用返回
type CommonNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"` // 包头
}

func (x *CommonNotify) Reset() {
	*x = CommonNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonNotify) ProtoMessage() {}

func (x *CommonNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonNotify.ProtoReflect.Descriptor instead.
func (*CommonNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{5}
}

func (x *CommonNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 协议名返回
type ProtocolNameNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`  // 包头
	Name       string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`              // 名称
	ProtocolId uint32   `protobuf:"varint,3,opt,name=ProtocolId,proto3" json:"ProtocolId,omitempty"` // 协议ID
}

func (x *ProtocolNameNotify) Reset() {
	*x = ProtocolNameNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtocolNameNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolNameNotify) ProtoMessage() {}

func (x *ProtocolNameNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolNameNotify.ProtoReflect.Descriptor instead.
func (*ProtocolNameNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{6}
}

func (x *ProtocolNameNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProtocolNameNotify) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProtocolNameNotify) GetProtocolId() uint32 {
	if x != nil {
		return x.ProtocolId
	}
	return 0
}

// 广告请求
type AdvertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`  // 包头
	AdvestType uint32   `protobuf:"varint,2,opt,name=AdvestType,proto3" json:"AdvestType,omitempty"` // 广告类型
}

func (x *AdvertRequest) Reset() {
	*x = AdvertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvertRequest) ProtoMessage() {}

func (x *AdvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvertRequest.ProtoReflect.Descriptor instead.
func (*AdvertRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{7}
}

func (x *AdvertRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *AdvertRequest) GetAdvestType() uint32 {
	if x != nil {
		return x.AdvestType
	}
	return 0
}

// 广告返回
type AdvertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket      `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"` // 包头
	AdvestInfo *PBAdvertInfo `protobuf:"bytes,2,opt,name=AdvestInfo,proto3" json:"AdvestInfo,omitempty"` // 广告数据
}

func (x *AdvertResponse) Reset() {
	*x = AdvertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvertResponse) ProtoMessage() {}

func (x *AdvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvertResponse.ProtoReflect.Descriptor instead.
func (*AdvertResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{8}
}

func (x *AdvertResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *AdvertResponse) GetAdvestInfo() *PBAdvertInfo {
	if x != nil {
		return x.AdvestInfo
	}
	return nil
}

// 广告通知
type AdvertNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket        `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"` // 包头
	AdvertList []*PBAdvertInfo `protobuf:"bytes,2,rep,name=AdvertList,proto3" json:"AdvertList,omitempty"` // 广告信息
}

func (x *AdvertNotify) Reset() {
	*x = AdvertNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvertNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvertNotify) ProtoMessage() {}

func (x *AdvertNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvertNotify.ProtoReflect.Descriptor instead.
func (*AdvertNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{9}
}

func (x *AdvertNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *AdvertNotify) GetAdvertList() []*PBAdvertInfo {
	if x != nil {
		return x.AdvertList
	}
	return nil
}

// 客户端json返回
type ClientJsonNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket      `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"` // 包头
	JsonList   []*PBJsonInfo `protobuf:"bytes,2,rep,name=JsonList,proto3" json:"JsonList,omitempty"`     // json内容
}

func (x *ClientJsonNotify) Reset() {
	*x = ClientJsonNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientJsonNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientJsonNotify) ProtoMessage() {}

func (x *ClientJsonNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientJsonNotify.ProtoReflect.Descriptor instead.
func (*ClientJsonNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{10}
}

func (x *ClientJsonNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ClientJsonNotify) GetJsonList() []*PBJsonInfo {
	if x != nil {
		return x.JsonList
	}
	return nil
}

// 玩家基本信息通用返回
type PlayerUpdateKvNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"` // 包头
	ListInfo   []*PBStringInt64 `protobuf:"bytes,2,rep,name=ListInfo,proto3" json:"ListInfo,omitempty"`     // 多个数据返回
}

func (x *PlayerUpdateKvNotify) Reset() {
	*x = PlayerUpdateKvNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerUpdateKvNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerUpdateKvNotify) ProtoMessage() {}

func (x *PlayerUpdateKvNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerUpdateKvNotify.ProtoReflect.Descriptor instead.
func (*PlayerUpdateKvNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{11}
}

func (x *PlayerUpdateKvNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *PlayerUpdateKvNotify) GetListInfo() []*PBStringInt64 {
	if x != nil {
		return x.ListInfo
	}
	return nil
}

// 系统开启ID通知
type SystemOpenNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead    *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`               // 包头
	SystemOpenIds []uint32 `protobuf:"varint,2,rep,packed,name=SystemOpenIds,proto3" json:"SystemOpenIds,omitempty"` // 系统开启ID
}

func (x *SystemOpenNotify) Reset() {
	*x = SystemOpenNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOpenNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOpenNotify) ProtoMessage() {}

func (x *SystemOpenNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOpenNotify.ProtoReflect.Descriptor instead.
func (*SystemOpenNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{12}
}

func (x *SystemOpenNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SystemOpenNotify) GetSystemOpenIds() []uint32 {
	if x != nil {
		return x.SystemOpenIds
	}
	return nil
}

// 系统开启奖励领取请求
type SystemOpenPrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"` // 开关ID
}

func (x *SystemOpenPrizeRequest) Reset() {
	*x = SystemOpenPrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOpenPrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOpenPrizeRequest) ProtoMessage() {}

func (x *SystemOpenPrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOpenPrizeRequest.ProtoReflect.Descriptor instead.
func (*SystemOpenPrizeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{13}
}

func (x *SystemOpenPrizeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SystemOpenPrizeRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 系统开启奖励领取返回
type SystemOpenPrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"` // 开关ID
}

func (x *SystemOpenPrizeResponse) Reset() {
	*x = SystemOpenPrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemOpenPrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemOpenPrizeResponse) ProtoMessage() {}

func (x *SystemOpenPrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemOpenPrizeResponse.ProtoReflect.Descriptor instead.
func (*SystemOpenPrizeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{14}
}

func (x *SystemOpenPrizeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SystemOpenPrizeResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// gm命令请求
type GmFuncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	GmType     uint32   `protobuf:"varint,2,opt,name=GmType,proto3" json:"GmType,omitempty"` // gm类型
	Param      []string `protobuf:"bytes,3,rep,name=Param,proto3" json:"Param,omitempty"`    // 参数数据
}

func (x *GmFuncRequest) Reset() {
	*x = GmFuncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GmFuncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GmFuncRequest) ProtoMessage() {}

func (x *GmFuncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GmFuncRequest.ProtoReflect.Descriptor instead.
func (*GmFuncRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{15}
}

func (x *GmFuncRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GmFuncRequest) GetGmType() uint32 {
	if x != nil {
		return x.GmType
	}
	return 0
}

func (x *GmFuncRequest) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

// gm命令返回
type GmFuncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *GmFuncResponse) Reset() {
	*x = GmFuncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GmFuncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GmFuncResponse) ProtoMessage() {}

func (x *GmFuncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GmFuncResponse.ProtoReflect.Descriptor instead.
func (*GmFuncResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{16}
}

func (x *GmFuncResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 恭喜获得通用界面
type CommonPrizeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`                        // 包头
	DoingType  EmDoingType      `protobuf:"varint,2,opt,name=DoingType,proto3,enum=common.EmDoingType" json:"DoingType,omitempty"` // 原因
	ItemInfo   []*PBAddItemData `protobuf:"bytes,3,rep,name=ItemInfo,proto3" json:"ItemInfo,omitempty"`                            // 道具信息
}

func (x *CommonPrizeNotify) Reset() {
	*x = CommonPrizeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonPrizeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonPrizeNotify) ProtoMessage() {}

func (x *CommonPrizeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonPrizeNotify.ProtoReflect.Descriptor instead.
func (*CommonPrizeNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{17}
}

func (x *CommonPrizeNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *CommonPrizeNotify) GetDoingType() EmDoingType {
	if x != nil {
		return x.DoingType
	}
	return EmDoingType_EDT_Gm
}

func (x *CommonPrizeNotify) GetItemInfo() []*PBAddItemData {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

// 跨时间通知
type PassTimeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"` // 包头
	IsDay      bool     `protobuf:"varint,2,opt,name=IsDay,proto3" json:"IsDay,omitempty"`          // 是否跨天
	IsWeek     bool     `protobuf:"varint,3,opt,name=IsWeek,proto3" json:"IsWeek,omitempty"`        // 是否跨周
	IsMonth    bool     `protobuf:"varint,4,opt,name=IsMonth,proto3" json:"IsMonth,omitempty"`      // 是否跨月
	CurTime    uint64   `protobuf:"varint,5,opt,name=CurTime,proto3" json:"CurTime,omitempty"`      // 当前时间戳
}

func (x *PassTimeNotify) Reset() {
	*x = PassTimeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassTimeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassTimeNotify) ProtoMessage() {}

func (x *PassTimeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassTimeNotify.ProtoReflect.Descriptor instead.
func (*PassTimeNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{18}
}

func (x *PassTimeNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *PassTimeNotify) GetIsDay() bool {
	if x != nil {
		return x.IsDay
	}
	return false
}

func (x *PassTimeNotify) GetIsWeek() bool {
	if x != nil {
		return x.IsWeek
	}
	return false
}

func (x *PassTimeNotify) GetIsMonth() bool {
	if x != nil {
		return x.IsMonth
	}
	return false
}

func (x *PassTimeNotify) GetCurTime() uint64 {
	if x != nil {
		return x.CurTime
	}
	return 0
}

// 公告请求
type NoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *NoticeRequest) Reset() {
	*x = NoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeRequest) ProtoMessage() {}

func (x *NoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeRequest.ProtoReflect.Descriptor instead.
func (*NoticeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{19}
}

func (x *NoticeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 公告返回
type NoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	NoticeList []*PBNotice `protobuf:"bytes,2,rep,name=NoticeList,proto3" json:"NoticeList,omitempty"` // 公告列表
}

func (x *NoticeResponse) Reset() {
	*x = NoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeResponse) ProtoMessage() {}

func (x *NoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeResponse.ProtoReflect.Descriptor instead.
func (*NoticeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{20}
}

func (x *NoticeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *NoticeResponse) GetNoticeList() []*PBNotice {
	if x != nil {
		return x.NoticeList
	}
	return nil
}

// 公告弹窗
type NoticeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	IsNew      bool      `protobuf:"varint,2,opt,name=IsNew,proto3" json:"IsNew,omitempty"`  // 是否新的
	Notice     *PBNotice `protobuf:"bytes,3,opt,name=Notice,proto3" json:"Notice,omitempty"` // 公告内容
}

func (x *NoticeNotify) Reset() {
	*x = NoticeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeNotify) ProtoMessage() {}

func (x *NoticeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeNotify.ProtoReflect.Descriptor instead.
func (*NoticeNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{21}
}

func (x *NoticeNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *NoticeNotify) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *NoticeNotify) GetNotice() *PBNotice {
	if x != nil {
		return x.Notice
	}
	return nil
}

// 查看页面请求
type PageOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	PageType   uint32   `protobuf:"varint,2,opt,name=PageType,proto3" json:"PageType,omitempty"` // 页面类型
}

func (x *PageOpenRequest) Reset() {
	*x = PageOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageOpenRequest) ProtoMessage() {}

func (x *PageOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageOpenRequest.ProtoReflect.Descriptor instead.
func (*PageOpenRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{22}
}

func (x *PageOpenRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *PageOpenRequest) GetPageType() uint32 {
	if x != nil {
		return x.PageType
	}
	return 0
}

// 查看页面返回
type PageOpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *PageOpenResponse) Reset() {
	*x = PageOpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageOpenResponse) ProtoMessage() {}

func (x *PageOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageOpenResponse.ProtoReflect.Descriptor instead.
func (*PageOpenResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{23}
}

func (x *PageOpenResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 新增邮件通知
type NewMailNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Mail       *PBMail  `protobuf:"bytes,2,opt,name=Mail,proto3" json:"Mail,omitempty"` // 邮件数据
}

func (x *NewMailNotify) Reset() {
	*x = NewMailNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMailNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMailNotify) ProtoMessage() {}

func (x *NewMailNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMailNotify.ProtoReflect.Descriptor instead.
func (*NewMailNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{24}
}

func (x *NewMailNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *NewMailNotify) GetMail() *PBMail {
	if x != nil {
		return x.Mail
	}
	return nil
}

// 一键领取邮件请求
type OnekeyAwardMailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *OnekeyAwardMailRequest) Reset() {
	*x = OnekeyAwardMailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnekeyAwardMailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnekeyAwardMailRequest) ProtoMessage() {}

func (x *OnekeyAwardMailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnekeyAwardMailRequest.ProtoReflect.Descriptor instead.
func (*OnekeyAwardMailRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{25}
}

func (x *OnekeyAwardMailRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 一键领取邮件返回
type OnekeyAwardMailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Mails      []*PBMail `protobuf:"bytes,2,rep,name=Mails,proto3" json:"Mails,omitempty"` // 邮件数据
}

func (x *OnekeyAwardMailResponse) Reset() {
	*x = OnekeyAwardMailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnekeyAwardMailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnekeyAwardMailResponse) ProtoMessage() {}

func (x *OnekeyAwardMailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnekeyAwardMailResponse.ProtoReflect.Descriptor instead.
func (*OnekeyAwardMailResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{26}
}

func (x *OnekeyAwardMailResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *OnekeyAwardMailResponse) GetMails() []*PBMail {
	if x != nil {
		return x.Mails
	}
	return nil
}

// 领取邮件请求
type AwardMailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	MailId     uint32   `protobuf:"varint,2,opt,name=MailId,proto3" json:"MailId,omitempty"` // 邮件ID
}

func (x *AwardMailRequest) Reset() {
	*x = AwardMailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardMailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardMailRequest) ProtoMessage() {}

func (x *AwardMailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardMailRequest.ProtoReflect.Descriptor instead.
func (*AwardMailRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{27}
}

func (x *AwardMailRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *AwardMailRequest) GetMailId() uint32 {
	if x != nil {
		return x.MailId
	}
	return 0
}

// 领取邮件返回
type AwardMailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Mail       *PBMail  `protobuf:"bytes,2,opt,name=Mail,proto3" json:"Mail,omitempty"` // 邮件数据
}

func (x *AwardMailResponse) Reset() {
	*x = AwardMailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardMailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardMailResponse) ProtoMessage() {}

func (x *AwardMailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardMailResponse.ProtoReflect.Descriptor instead.
func (*AwardMailResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{28}
}

func (x *AwardMailResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *AwardMailResponse) GetMail() *PBMail {
	if x != nil {
		return x.Mail
	}
	return nil
}

// 一键删除邮件请求
type OnekeyDeleteMailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *OnekeyDeleteMailRequest) Reset() {
	*x = OnekeyDeleteMailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnekeyDeleteMailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnekeyDeleteMailRequest) ProtoMessage() {}

func (x *OnekeyDeleteMailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnekeyDeleteMailRequest.ProtoReflect.Descriptor instead.
func (*OnekeyDeleteMailRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{29}
}

func (x *OnekeyDeleteMailRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 一键删除邮件返回
type OnekeyDeleteMailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	MailIds    []uint32 `protobuf:"varint,2,rep,packed,name=MailIds,proto3" json:"MailIds,omitempty"` // 邮件ID组
}

func (x *OnekeyDeleteMailResponse) Reset() {
	*x = OnekeyDeleteMailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnekeyDeleteMailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnekeyDeleteMailResponse) ProtoMessage() {}

func (x *OnekeyDeleteMailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnekeyDeleteMailResponse.ProtoReflect.Descriptor instead.
func (*OnekeyDeleteMailResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{30}
}

func (x *OnekeyDeleteMailResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *OnekeyDeleteMailResponse) GetMailIds() []uint32 {
	if x != nil {
		return x.MailIds
	}
	return nil
}

// 删除邮件请求
type DeleteMailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	MailId     uint32   `protobuf:"varint,2,opt,name=MailId,proto3" json:"MailId,omitempty"` // 邮件ID
}

func (x *DeleteMailRequest) Reset() {
	*x = DeleteMailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMailRequest) ProtoMessage() {}

func (x *DeleteMailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMailRequest.ProtoReflect.Descriptor instead.
func (*DeleteMailRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteMailRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DeleteMailRequest) GetMailId() uint32 {
	if x != nil {
		return x.MailId
	}
	return 0
}

// 删除邮件返回
type DeleteMailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	MailId     uint32   `protobuf:"varint,2,opt,name=MailId,proto3" json:"MailId,omitempty"` // 邮件ID
}

func (x *DeleteMailResponse) Reset() {
	*x = DeleteMailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMailResponse) ProtoMessage() {}

func (x *DeleteMailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMailResponse.ProtoReflect.Descriptor instead.
func (*DeleteMailResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteMailResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DeleteMailResponse) GetMailId() uint32 {
	if x != nil {
		return x.MailId
	}
	return 0
}

// 更新道具通知
type ItemUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ItemList   []*PBItem `protobuf:"bytes,2,rep,name=ItemList,proto3" json:"ItemList,omitempty"` // 更新的道具
}

func (x *ItemUpdateNotify) Reset() {
	*x = ItemUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUpdateNotify) ProtoMessage() {}

func (x *ItemUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUpdateNotify.ProtoReflect.Descriptor instead.
func (*ItemUpdateNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{33}
}

func (x *ItemUpdateNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ItemUpdateNotify) GetItemList() []*PBItem {
	if x != nil {
		return x.ItemList
	}
	return nil
}

// 道具购买请求
type ItemBuyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`       // 道具Id
	Count      uint32   `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"` // 个数
}

func (x *ItemBuyRequest) Reset() {
	*x = ItemBuyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemBuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemBuyRequest) ProtoMessage() {}

func (x *ItemBuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemBuyRequest.ProtoReflect.Descriptor instead.
func (*ItemBuyRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{34}
}

func (x *ItemBuyRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ItemBuyRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemBuyRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 道具购买返回
type ItemBuyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`       // 道具Id
	Count      uint32   `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"` // 使用个数
}

func (x *ItemBuyResponse) Reset() {
	*x = ItemBuyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemBuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemBuyResponse) ProtoMessage() {}

func (x *ItemBuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemBuyResponse.ProtoReflect.Descriptor instead.
func (*ItemBuyResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{35}
}

func (x *ItemBuyResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ItemBuyResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemBuyResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 道具使用请求
type ItemUseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`       // 道具Id
	Count      uint32   `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"` // 使用个数
}

func (x *ItemUseRequest) Reset() {
	*x = ItemUseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUseRequest) ProtoMessage() {}

func (x *ItemUseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUseRequest.ProtoReflect.Descriptor instead.
func (*ItemUseRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{36}
}

func (x *ItemUseRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ItemUseRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemUseRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 道具使用返回
type ItemUseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`       // 道具Id
	Count      uint32   `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"` // 使用个数
}

func (x *ItemUseResponse) Reset() {
	*x = ItemUseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUseResponse) ProtoMessage() {}

func (x *ItemUseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUseResponse.ProtoReflect.Descriptor instead.
func (*ItemUseResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{37}
}

func (x *ItemUseResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ItemUseResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemUseResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 道具使用预览请求
type ItemUseShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"` // 道具Id
}

func (x *ItemUseShowRequest) Reset() {
	*x = ItemUseShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUseShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUseShowRequest) ProtoMessage() {}

func (x *ItemUseShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUseShowRequest.ProtoReflect.Descriptor instead.
func (*ItemUseShowRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{38}
}

func (x *ItemUseShowRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ItemUseShowRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 道具展示数据
type ItemUseShowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32     `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`    // selectId
	Item *PBAddItem `protobuf:"bytes,2,opt,name=Item,proto3" json:"Item,omitempty"` //
}

func (x *ItemUseShowInfo) Reset() {
	*x = ItemUseShowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUseShowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUseShowInfo) ProtoMessage() {}

func (x *ItemUseShowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUseShowInfo.ProtoReflect.Descriptor instead.
func (*ItemUseShowInfo) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{39}
}

func (x *ItemUseShowInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemUseShowInfo) GetItem() *PBAddItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// 道具使用预览返回
type ItemUseShowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket           `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32             `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`            // 道具ID
	ItemList   []*ItemUseShowInfo `protobuf:"bytes,3,rep,name=ItemList,proto3" json:"ItemList,omitempty"` // 道具展示数据
}

func (x *ItemUseShowResponse) Reset() {
	*x = ItemUseShowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUseShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUseShowResponse) ProtoMessage() {}

func (x *ItemUseShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUseShowResponse.ProtoReflect.Descriptor instead.
func (*ItemUseShowResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{40}
}

func (x *ItemUseShowResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ItemUseShowResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemUseShowResponse) GetItemList() []*ItemUseShowInfo {
	if x != nil {
		return x.ItemList
	}
	return nil
}

// 道具选择请求
type ItemSelectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32      `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`                // 道具Id
	SelectList []*PBU32U32 `protobuf:"bytes,3,rep,name=SelectList,proto3" json:"SelectList,omitempty"` // key：ItemUseShowResponse的id  value:数量
}

func (x *ItemSelectRequest) Reset() {
	*x = ItemSelectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemSelectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemSelectRequest) ProtoMessage() {}

func (x *ItemSelectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemSelectRequest.ProtoReflect.Descriptor instead.
func (*ItemSelectRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{41}
}

func (x *ItemSelectRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ItemSelectRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemSelectRequest) GetSelectList() []*PBU32U32 {
	if x != nil {
		return x.SelectList
	}
	return nil
}

// 道具选择返回
type ItemSelectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32      `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`                // 道具Id
	SelectList []*PBU32U32 `protobuf:"bytes,3,rep,name=SelectList,proto3" json:"SelectList,omitempty"` // key：ItemUseShowResponse的id  value:数量
}

func (x *ItemSelectResponse) Reset() {
	*x = ItemSelectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemSelectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemSelectResponse) ProtoMessage() {}

func (x *ItemSelectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemSelectResponse.ProtoReflect.Descriptor instead.
func (*ItemSelectResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{42}
}

func (x *ItemSelectResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ItemSelectResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemSelectResponse) GetSelectList() []*PBU32U32 {
	if x != nil {
		return x.SelectList
	}
	return nil
}

// 兑换码请求
type GiftCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Acode      string   `protobuf:"bytes,2,opt,name=Acode,proto3" json:"Acode,omitempty"` // 兑换码
}

func (x *GiftCodeRequest) Reset() {
	*x = GiftCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiftCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiftCodeRequest) ProtoMessage() {}

func (x *GiftCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiftCodeRequest.ProtoReflect.Descriptor instead.
func (*GiftCodeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{43}
}

func (x *GiftCodeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GiftCodeRequest) GetAcode() string {
	if x != nil {
		return x.Acode
	}
	return ""
}

// 兑换码返回
type GiftCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Acode      string   `protobuf:"bytes,2,opt,name=Acode,proto3" json:"Acode,omitempty"` // 兑换码
}

func (x *GiftCodeResponse) Reset() {
	*x = GiftCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiftCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiftCodeResponse) ProtoMessage() {}

func (x *GiftCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiftCodeResponse.ProtoReflect.Descriptor instead.
func (*GiftCodeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{44}
}

func (x *GiftCodeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GiftCodeResponse) GetAcode() string {
	if x != nil {
		return x.Acode
	}
	return ""
}

// 排行榜请求
type RankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	RankType   uint32   `protobuf:"varint,2,opt,name=RankType,proto3" json:"RankType,omitempty"`     // 排行类型
	Begin      uint32   `protobuf:"varint,3,opt,name=Begin,proto3" json:"Begin,omitempty"`           // 开始名次
	End        uint32   `protobuf:"varint,4,opt,name=End,proto3" json:"End,omitempty"`               // 结束名次
	CreateTime uint64   `protobuf:"varint,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"` // game发送gm服务携带的字段信息
}

func (x *RankRequest) Reset() {
	*x = RankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankRequest) ProtoMessage() {}

func (x *RankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankRequest.ProtoReflect.Descriptor instead.
func (*RankRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{45}
}

func (x *RankRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *RankRequest) GetRankType() uint32 {
	if x != nil {
		return x.RankType
	}
	return 0
}

func (x *RankRequest) GetBegin() uint32 {
	if x != nil {
		return x.Begin
	}
	return 0
}

func (x *RankRequest) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *RankRequest) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type RankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	RankType   uint32      `protobuf:"varint,2,opt,name=RankType,proto3" json:"RankType,omitempty"`   // 排行类型
	Begin      uint32      `protobuf:"varint,3,opt,name=Begin,proto3" json:"Begin,omitempty"`         // 开始名次 1开始
	End        uint32      `protobuf:"varint,4,opt,name=End,proto3" json:"End,omitempty"`             // 结束名次
	RankList   []*RankInfo `protobuf:"bytes,5,rep,name=RankList,proto3" json:"RankList,omitempty"`    // 玩家数据
	SelfInfo   *RankInfo   `protobuf:"bytes,6,opt,name=SelfInfo,proto3" json:"SelfInfo,omitempty"`    // 自己的数据
	TotalRank  int64       `protobuf:"varint,7,opt,name=TotalRank,proto3" json:"TotalRank,omitempty"` // 总数据
}

func (x *RankResponse) Reset() {
	*x = RankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankResponse) ProtoMessage() {}

func (x *RankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankResponse.ProtoReflect.Descriptor instead.
func (*RankResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{46}
}

func (x *RankResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *RankResponse) GetRankType() uint32 {
	if x != nil {
		return x.RankType
	}
	return 0
}

func (x *RankResponse) GetBegin() uint32 {
	if x != nil {
		return x.Begin
	}
	return 0
}

func (x *RankResponse) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *RankResponse) GetRankList() []*RankInfo {
	if x != nil {
		return x.RankList
	}
	return nil
}

func (x *RankResponse) GetSelfInfo() *RankInfo {
	if x != nil {
		return x.SelfInfo
	}
	return nil
}

func (x *RankResponse) GetTotalRank() int64 {
	if x != nil {
		return x.TotalRank
	}
	return 0
}

// 领取排名奖励(+ 通用排行榜接口)
type RankRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket     `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	RankType   uint32       `protobuf:"varint,2,opt,name=RankType,proto3" json:"RankType,omitempty"`                   // 排行类型
	Notify     bool         `protobuf:"varint,3,opt,name=Notify,proto3" json:"Notify,omitempty"`                       // 是否需要发送恭喜获得(内部服务节点转发使用)
	Doing      EmDoingType  `protobuf:"varint,4,opt,name=Doing,proto3,enum=common.EmDoingType" json:"Doing,omitempty"` // 发放奖励原因(内部服务节点转发使用)
	Rewards    []*PBAddItem `protobuf:"bytes,5,rep,name=Rewards,proto3" json:"Rewards,omitempty"`                      // 发放的奖励(内部服务节点转发使用)
	CreateTime uint64       `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`               // 时间点(内部服务节点转发使用)
}

func (x *RankRewardRequest) Reset() {
	*x = RankRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankRewardRequest) ProtoMessage() {}

func (x *RankRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankRewardRequest.ProtoReflect.Descriptor instead.
func (*RankRewardRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{47}
}

func (x *RankRewardRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *RankRewardRequest) GetRankType() uint32 {
	if x != nil {
		return x.RankType
	}
	return 0
}

func (x *RankRewardRequest) GetNotify() bool {
	if x != nil {
		return x.Notify
	}
	return false
}

func (x *RankRewardRequest) GetDoing() EmDoingType {
	if x != nil {
		return x.Doing
	}
	return EmDoingType_EDT_Gm
}

func (x *RankRewardRequest) GetRewards() []*PBAddItem {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *RankRewardRequest) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 返回恭喜获得奖励弹框
type RankRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *RankRewardResponse) Reset() {
	*x = RankRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankRewardResponse) ProtoMessage() {}

func (x *RankRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankRewardResponse.ProtoReflect.Descriptor instead.
func (*RankRewardResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{48}
}

func (x *RankRewardResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 更新排行榜名单
type RankUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	RankType   uint32   `protobuf:"varint,2,opt,name=RankType,proto3" json:"RankType,omitempty"`     // 排行类型
	CreateTime uint64   `protobuf:"varint,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"` // 开启时间点
	Member     string   `protobuf:"bytes,7,opt,name=Member,proto3" json:"Member,omitempty"`          // 待更新成员
	Score      float64  `protobuf:"fixed64,8,opt,name=Score,proto3" json:"Score,omitempty"`          // 积分
}

func (x *RankUpdateNotify) Reset() {
	*x = RankUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankUpdateNotify) ProtoMessage() {}

func (x *RankUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankUpdateNotify.ProtoReflect.Descriptor instead.
func (*RankUpdateNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{49}
}

func (x *RankUpdateNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *RankUpdateNotify) GetRankType() uint32 {
	if x != nil {
		return x.RankType
	}
	return 0
}

func (x *RankUpdateNotify) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *RankUpdateNotify) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *RankUpdateNotify) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

// 开宝箱请求
type BoxOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ItemID     uint32   `protobuf:"varint,2,opt,name=ItemID,proto3" json:"ItemID,omitempty"`
	ItemNum    uint32   `protobuf:"varint,3,opt,name=ItemNum,proto3" json:"ItemNum,omitempty"`
}

func (x *BoxOpenRequest) Reset() {
	*x = BoxOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxOpenRequest) ProtoMessage() {}

func (x *BoxOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxOpenRequest.ProtoReflect.Descriptor instead.
func (*BoxOpenRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{50}
}

func (x *BoxOpenRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BoxOpenRequest) GetItemID() uint32 {
	if x != nil {
		return x.ItemID
	}
	return 0
}

func (x *BoxOpenRequest) GetItemNum() uint32 {
	if x != nil {
		return x.ItemNum
	}
	return 0
}

type BoxOpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Score      uint32           `protobuf:"varint,2,opt,name=Score,proto3" json:"Score,omitempty"`      // 返回积分
	ItemInfo   []*PBAddItemData `protobuf:"bytes,3,rep,name=ItemInfo,proto3" json:"ItemInfo,omitempty"` // 道具信息
}

func (x *BoxOpenResponse) Reset() {
	*x = BoxOpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxOpenResponse) ProtoMessage() {}

func (x *BoxOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxOpenResponse.ProtoReflect.Descriptor instead.
func (*BoxOpenResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{51}
}

func (x *BoxOpenResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BoxOpenResponse) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *BoxOpenResponse) GetItemInfo() []*PBAddItemData {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

// 进度条领取宝箱请求
type BoxProgressRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *BoxProgressRewardRequest) Reset() {
	*x = BoxProgressRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxProgressRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxProgressRewardRequest) ProtoMessage() {}

func (x *BoxProgressRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxProgressRewardRequest.ProtoReflect.Descriptor instead.
func (*BoxProgressRewardRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{52}
}

func (x *BoxProgressRewardRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

type BoxProgressRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	NeedScore  uint32   `protobuf:"varint,2,opt,name=NeedScore,proto3" json:"NeedScore,omitempty"` // 所需积分
	Level      uint32   `protobuf:"varint,3,opt,name=Level,proto3" json:"Level,omitempty"`         // 当前挡位
	Score      uint32   `protobuf:"varint,4,opt,name=Score,proto3" json:"Score,omitempty"`         // 当前拥有积分
	Recycle    uint32   `protobuf:"varint,5,opt,name=Recycle,proto3" json:"Recycle,omitempty"`     // 轮数
}

func (x *BoxProgressRewardResponse) Reset() {
	*x = BoxProgressRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxProgressRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxProgressRewardResponse) ProtoMessage() {}

func (x *BoxProgressRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxProgressRewardResponse.ProtoReflect.Descriptor instead.
func (*BoxProgressRewardResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{53}
}

func (x *BoxProgressRewardResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BoxProgressRewardResponse) GetNeedScore() uint32 {
	if x != nil {
		return x.NeedScore
	}
	return 0
}

func (x *BoxProgressRewardResponse) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *BoxProgressRewardResponse) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *BoxProgressRewardResponse) GetRecycle() uint32 {
	if x != nil {
		return x.Recycle
	}
	return 0
}

// 任务完成请求
type MainTaskFinishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *MainTaskFinishRequest) Reset() {
	*x = MainTaskFinishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainTaskFinishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainTaskFinishRequest) ProtoMessage() {}

func (x *MainTaskFinishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainTaskFinishRequest.ProtoReflect.Descriptor instead.
func (*MainTaskFinishRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{54}
}

func (x *MainTaskFinishRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 任务完成返回
type MainTaskFinishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	MainTask   *PBTaskStageInfo `protobuf:"bytes,2,opt,name=MainTask,proto3" json:"MainTask,omitempty"` // 主线任务
}

func (x *MainTaskFinishResponse) Reset() {
	*x = MainTaskFinishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainTaskFinishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainTaskFinishResponse) ProtoMessage() {}

func (x *MainTaskFinishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainTaskFinishResponse.ProtoReflect.Descriptor instead.
func (*MainTaskFinishResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{55}
}

func (x *MainTaskFinishResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *MainTaskFinishResponse) GetMainTask() *PBTaskStageInfo {
	if x != nil {
		return x.MainTask
	}
	return nil
}

// 每日任务刷新通知
type DailyTaskNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket     `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DailyTask  *PBDailyTask `protobuf:"bytes,2,opt,name=DailyTask,proto3" json:"DailyTask,omitempty"` // 每日任务
}

func (x *DailyTaskNotify) Reset() {
	*x = DailyTaskNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTaskNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTaskNotify) ProtoMessage() {}

func (x *DailyTaskNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTaskNotify.ProtoReflect.Descriptor instead.
func (*DailyTaskNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{56}
}

func (x *DailyTaskNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DailyTaskNotify) GetDailyTask() *PBDailyTask {
	if x != nil {
		return x.DailyTask
	}
	return nil
}

// 每日任务完成请求
type DailyTaskFinishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	TaskId     uint32   `protobuf:"varint,2,opt,name=TaskId,proto3" json:"TaskId,omitempty"` // 任务ID
}

func (x *DailyTaskFinishRequest) Reset() {
	*x = DailyTaskFinishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTaskFinishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTaskFinishRequest) ProtoMessage() {}

func (x *DailyTaskFinishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTaskFinishRequest.ProtoReflect.Descriptor instead.
func (*DailyTaskFinishRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{57}
}

func (x *DailyTaskFinishRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DailyTaskFinishRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// 每日任务完成返回
type DailyTasFinishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Task       *PBTaskStageInfo `protobuf:"bytes,2,opt,name=Task,proto3" json:"Task,omitempty"`    // 主线任务
	Score      uint32           `protobuf:"varint,3,opt,name=Score,proto3" json:"Score,omitempty"` // 活跃值
}

func (x *DailyTasFinishResponse) Reset() {
	*x = DailyTasFinishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTasFinishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTasFinishResponse) ProtoMessage() {}

func (x *DailyTasFinishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTasFinishResponse.ProtoReflect.Descriptor instead.
func (*DailyTasFinishResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{58}
}

func (x *DailyTasFinishResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DailyTasFinishResponse) GetTask() *PBTaskStageInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *DailyTasFinishResponse) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

// 每日任务积分奖励请求
type DailyTaskScorePrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *DailyTaskScorePrizeRequest) Reset() {
	*x = DailyTaskScorePrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTaskScorePrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTaskScorePrizeRequest) ProtoMessage() {}

func (x *DailyTaskScorePrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTaskScorePrizeRequest.ProtoReflect.Descriptor instead.
func (*DailyTaskScorePrizeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{59}
}

func (x *DailyTaskScorePrizeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 每日任务积分奖励返回
type DailyTaskScorePrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	PrizeScore uint32   `protobuf:"varint,2,opt,name=PrizeScore,proto3" json:"PrizeScore,omitempty"` // 领取的活跃值
}

func (x *DailyTaskScorePrizeResponse) Reset() {
	*x = DailyTaskScorePrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTaskScorePrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTaskScorePrizeResponse) ProtoMessage() {}

func (x *DailyTaskScorePrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTaskScorePrizeResponse.ProtoReflect.Descriptor instead.
func (*DailyTaskScorePrizeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{60}
}

func (x *DailyTaskScorePrizeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DailyTaskScorePrizeResponse) GetPrizeScore() uint32 {
	if x != nil {
		return x.PrizeScore
	}
	return 0
}

// 设置客户端数据请求
type SetClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket      `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ClientData *PBClientData `protobuf:"bytes,2,opt,name=ClientData,proto3" json:"ClientData,omitempty"`
}

func (x *SetClientRequest) Reset() {
	*x = SetClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetClientRequest) ProtoMessage() {}

func (x *SetClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetClientRequest.ProtoReflect.Descriptor instead.
func (*SetClientRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{61}
}

func (x *SetClientRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SetClientRequest) GetClientData() *PBClientData {
	if x != nil {
		return x.ClientData
	}
	return nil
}

// 设置客户端数据返回
type SetClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *SetClientResponse) Reset() {
	*x = SetClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetClientResponse) ProtoMessage() {}

func (x *SetClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetClientResponse.ProtoReflect.Descriptor instead.
func (*SetClientResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{62}
}

func (x *SetClientResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 修改头像逻请求
type ChangeAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	AvatarID   uint32   `protobuf:"varint,2,opt,name=AvatarID,proto3" json:"AvatarID,omitempty"` // 切换到的头像ID
}

func (x *ChangeAvatarRequest) Reset() {
	*x = ChangeAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAvatarRequest) ProtoMessage() {}

func (x *ChangeAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAvatarRequest.ProtoReflect.Descriptor instead.
func (*ChangeAvatarRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{63}
}

func (x *ChangeAvatarRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChangeAvatarRequest) GetAvatarID() uint32 {
	if x != nil {
		return x.AvatarID
	}
	return 0
}

type ChangeAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	AvatarID   uint32   `protobuf:"varint,2,opt,name=AvatarID,proto3" json:"AvatarID,omitempty"` // 切换到的头像ID
}

func (x *ChangeAvatarResponse) Reset() {
	*x = ChangeAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAvatarResponse) ProtoMessage() {}

func (x *ChangeAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAvatarResponse.ProtoReflect.Descriptor instead.
func (*ChangeAvatarResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{64}
}

func (x *ChangeAvatarResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChangeAvatarResponse) GetAvatarID() uint32 {
	if x != nil {
		return x.AvatarID
	}
	return 0
}

type AvatarNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Avatars    []*PBAvatar `protobuf:"bytes,2,rep,name=Avatars,proto3" json:"Avatars,omitempty"`
}

func (x *AvatarNotify) Reset() {
	*x = AvatarNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarNotify) ProtoMessage() {}

func (x *AvatarNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarNotify.ProtoReflect.Descriptor instead.
func (*AvatarNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{65}
}

func (x *AvatarNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *AvatarNotify) GetAvatars() []*PBAvatar {
	if x != nil {
		return x.Avatars
	}
	return nil
}

type AvatarFrameNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Frames     []*PBAvatarFrame `protobuf:"bytes,2,rep,name=Frames,proto3" json:"Frames,omitempty"`
}

func (x *AvatarFrameNotify) Reset() {
	*x = AvatarFrameNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarFrameNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarFrameNotify) ProtoMessage() {}

func (x *AvatarFrameNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarFrameNotify.ProtoReflect.Descriptor instead.
func (*AvatarFrameNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{66}
}

func (x *AvatarFrameNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *AvatarFrameNotify) GetFrames() []*PBAvatarFrame {
	if x != nil {
		return x.Frames
	}
	return nil
}

// 修改头像框逻请求
type ChangeAvatarFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	FrameID    uint32   `protobuf:"varint,2,opt,name=FrameID,proto3" json:"FrameID,omitempty"` // 切换到的头像框ID
}

func (x *ChangeAvatarFrameRequest) Reset() {
	*x = ChangeAvatarFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAvatarFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAvatarFrameRequest) ProtoMessage() {}

func (x *ChangeAvatarFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAvatarFrameRequest.ProtoReflect.Descriptor instead.
func (*ChangeAvatarFrameRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{67}
}

func (x *ChangeAvatarFrameRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChangeAvatarFrameRequest) GetFrameID() uint32 {
	if x != nil {
		return x.FrameID
	}
	return 0
}

type ChangeAvatarFrameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	FrameID    uint32   `protobuf:"varint,2,opt,name=FrameID,proto3" json:"FrameID,omitempty"` // 切换到的头像框ID
}

func (x *ChangeAvatarFrameResponse) Reset() {
	*x = ChangeAvatarFrameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAvatarFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAvatarFrameResponse) ProtoMessage() {}

func (x *ChangeAvatarFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAvatarFrameResponse.ProtoReflect.Descriptor instead.
func (*ChangeAvatarFrameResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{68}
}

func (x *ChangeAvatarFrameResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChangeAvatarFrameResponse) GetFrameID() uint32 {
	if x != nil {
		return x.FrameID
	}
	return 0
}

// 修改名称设置
type ChangePlayerNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	PlayerName string   `protobuf:"bytes,2,opt,name=PlayerName,proto3" json:"PlayerName,omitempty"` // 玩家名称
}

func (x *ChangePlayerNameRequest) Reset() {
	*x = ChangePlayerNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePlayerNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePlayerNameRequest) ProtoMessage() {}

func (x *ChangePlayerNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePlayerNameRequest.ProtoReflect.Descriptor instead.
func (*ChangePlayerNameRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{69}
}

func (x *ChangePlayerNameRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChangePlayerNameRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

// 修改名称返回
type ChangePlayerNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	PlayerName string   `protobuf:"bytes,2,opt,name=PlayerName,proto3" json:"PlayerName,omitempty"` // 玩家名称
}

func (x *ChangePlayerNameResponse) Reset() {
	*x = ChangePlayerNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePlayerNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePlayerNameResponse) ProtoMessage() {}

func (x *ChangePlayerNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePlayerNameResponse.ProtoReflect.Descriptor instead.
func (*ChangePlayerNameResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{70}
}

func (x *ChangePlayerNameResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChangePlayerNameResponse) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

// 商店列表通知
type ShopListNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopList   []*PBU32U64 `protobuf:"bytes,2,rep,name=ShopList,proto3" json:"ShopList,omitempty"` // 商店列表 key:商店类型 value:下次刷新时间
}

func (x *ShopListNotify) Reset() {
	*x = ShopListNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopListNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopListNotify) ProtoMessage() {}

func (x *ShopListNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopListNotify.ProtoReflect.Descriptor instead.
func (*ShopListNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{71}
}

func (x *ShopListNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopListNotify) GetShopList() []*PBU32U64 {
	if x != nil {
		return x.ShopList
	}
	return nil
}

// 打开商店请求
type ShopOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopType   uint32   `protobuf:"varint,2,opt,name=ShopType,proto3" json:"ShopType,omitempty"` // 商店类型
}

func (x *ShopOpenRequest) Reset() {
	*x = ShopOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopOpenRequest) ProtoMessage() {}

func (x *ShopOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopOpenRequest.ProtoReflect.Descriptor instead.
func (*ShopOpenRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{72}
}

func (x *ShopOpenRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopOpenRequest) GetShopType() uint32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

// 打开商店返回
type ShopOpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopType   uint32           `protobuf:"varint,2,opt,name=ShopType,proto3" json:"ShopType,omitempty"` // 商店类型
	GoodList   []*PBShopGoodCfg `protobuf:"bytes,3,rep,name=GoodList,proto3" json:"GoodList,omitempty"`  // 商品信息
}

func (x *ShopOpenResponse) Reset() {
	*x = ShopOpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopOpenResponse) ProtoMessage() {}

func (x *ShopOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopOpenResponse.ProtoReflect.Descriptor instead.
func (*ShopOpenResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{73}
}

func (x *ShopOpenResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopOpenResponse) GetShopType() uint32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

func (x *ShopOpenResponse) GetGoodList() []*PBShopGoodCfg {
	if x != nil {
		return x.GoodList
	}
	return nil
}

// 兑换商店商品数据更新
type ShopExchangeGoodNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopType   uint32    `protobuf:"varint,2,opt,name=ShopType,proto3" json:"ShopType,omitempty"` // 商店类型
	GoodInfo   *PBU32U32 `protobuf:"bytes,3,opt,name=GoodInfo,proto3" json:"GoodInfo,omitempty"`  // 商品数据 key：商品ID  Value:购买次数
}

func (x *ShopExchangeGoodNotify) Reset() {
	*x = ShopExchangeGoodNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopExchangeGoodNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopExchangeGoodNotify) ProtoMessage() {}

func (x *ShopExchangeGoodNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopExchangeGoodNotify.ProtoReflect.Descriptor instead.
func (*ShopExchangeGoodNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{74}
}

func (x *ShopExchangeGoodNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopExchangeGoodNotify) GetShopType() uint32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

func (x *ShopExchangeGoodNotify) GetGoodInfo() *PBU32U32 {
	if x != nil {
		return x.GoodInfo
	}
	return nil
}

// 兑换商店请求
type ShopExchangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopType   uint32   `protobuf:"varint,2,opt,name=ShopType,proto3" json:"ShopType,omitempty"` // 商店类型
	GoodsID    uint32   `protobuf:"varint,3,opt,name=GoodsID,proto3" json:"GoodsID,omitempty"`   // 商品ID
}

func (x *ShopExchangeRequest) Reset() {
	*x = ShopExchangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopExchangeRequest) ProtoMessage() {}

func (x *ShopExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopExchangeRequest.ProtoReflect.Descriptor instead.
func (*ShopExchangeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{75}
}

func (x *ShopExchangeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopExchangeRequest) GetShopType() uint32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

func (x *ShopExchangeRequest) GetGoodsID() uint32 {
	if x != nil {
		return x.GoodsID
	}
	return 0
}

// 兑换商店返回
type ShopExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopType   uint32   `protobuf:"varint,2,opt,name=ShopType,proto3" json:"ShopType,omitempty"` // 商店类型
	GoodsID    uint32   `protobuf:"varint,3,opt,name=GoodsID,proto3" json:"GoodsID,omitempty"`   // 商品ID
	BuyTimes   uint32   `protobuf:"varint,4,opt,name=BuyTimes,proto3" json:"BuyTimes,omitempty"` // 购买次数
}

func (x *ShopExchangeResponse) Reset() {
	*x = ShopExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopExchangeResponse) ProtoMessage() {}

func (x *ShopExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopExchangeResponse.ProtoReflect.Descriptor instead.
func (*ShopExchangeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{76}
}

func (x *ShopExchangeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopExchangeResponse) GetShopType() uint32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

func (x *ShopExchangeResponse) GetGoodsID() uint32 {
	if x != nil {
		return x.GoodsID
	}
	return 0
}

func (x *ShopExchangeResponse) GetBuyTimes() uint32 {
	if x != nil {
		return x.BuyTimes
	}
	return 0
}

// 商店购买请求
type ShopBuyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopType   uint32   `protobuf:"varint,2,opt,name=ShopType,proto3" json:"ShopType,omitempty"`     // 商店类型
	GoodsID    uint32   `protobuf:"varint,3,opt,name=GoodsID,proto3" json:"GoodsID,omitempty"`       // 商品ID
	AdvertType uint32   `protobuf:"varint,4,opt,name=AdvertType,proto3" json:"AdvertType,omitempty"` // 广告类型 0无广告
}

func (x *ShopBuyRequest) Reset() {
	*x = ShopBuyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopBuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopBuyRequest) ProtoMessage() {}

func (x *ShopBuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopBuyRequest.ProtoReflect.Descriptor instead.
func (*ShopBuyRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{77}
}

func (x *ShopBuyRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopBuyRequest) GetShopType() uint32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

func (x *ShopBuyRequest) GetGoodsID() uint32 {
	if x != nil {
		return x.GoodsID
	}
	return 0
}

func (x *ShopBuyRequest) GetAdvertType() uint32 {
	if x != nil {
		return x.AdvertType
	}
	return 0
}

// 商店购买返回
type ShopBuyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopType   uint32   `protobuf:"varint,2,opt,name=ShopType,proto3" json:"ShopType,omitempty"` // 商店类型
}

func (x *ShopBuyResponse) Reset() {
	*x = ShopBuyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopBuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopBuyResponse) ProtoMessage() {}

func (x *ShopBuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopBuyResponse.ProtoReflect.Descriptor instead.
func (*ShopBuyResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{78}
}

func (x *ShopBuyResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopBuyResponse) GetShopType() uint32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

// 商店通知某个物品
type ShopUpdateOneGoodsNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket        `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopType   uint32          `protobuf:"varint,2,opt,name=ShopType,proto3" json:"ShopType,omitempty"` // 商店类型
	ShopGood   *PBShopGoodInfo `protobuf:"bytes,3,opt,name=ShopGood,proto3" json:"ShopGood,omitempty"`  // 商品数据
}

func (x *ShopUpdateOneGoodsNotify) Reset() {
	*x = ShopUpdateOneGoodsNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopUpdateOneGoodsNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopUpdateOneGoodsNotify) ProtoMessage() {}

func (x *ShopUpdateOneGoodsNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopUpdateOneGoodsNotify.ProtoReflect.Descriptor instead.
func (*ShopUpdateOneGoodsNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{79}
}

func (x *ShopUpdateOneGoodsNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopUpdateOneGoodsNotify) GetShopType() uint32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

func (x *ShopUpdateOneGoodsNotify) GetShopGood() *PBShopGoodInfo {
	if x != nil {
		return x.ShopGood
	}
	return nil
}

// 商店刷新通知
type ShopUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket            `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopType   uint32              `protobuf:"varint,2,opt,name=ShopType,proto3" json:"ShopType,omitempty"` // 商店类型
	Shop       *PBPlayerSystemShop `protobuf:"bytes,3,opt,name=Shop,proto3" json:"Shop,omitempty"`          // 商店类型
}

func (x *ShopUpdateNotify) Reset() {
	*x = ShopUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopUpdateNotify) ProtoMessage() {}

func (x *ShopUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopUpdateNotify.ProtoReflect.Descriptor instead.
func (*ShopUpdateNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{80}
}

func (x *ShopUpdateNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopUpdateNotify) GetShopType() uint32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

func (x *ShopUpdateNotify) GetShop() *PBPlayerSystemShop {
	if x != nil {
		return x.Shop
	}
	return nil
}

// 商店刷新请求
type ShopRefreshRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopType   uint32   `protobuf:"varint,2,opt,name=ShopType,proto3" json:"ShopType,omitempty"` // 商店类型
	IsFree     bool     `protobuf:"varint,3,opt,name=IsFree,proto3" json:"IsFree,omitempty"`     // 是否免费
}

func (x *ShopRefreshRequest) Reset() {
	*x = ShopRefreshRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopRefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopRefreshRequest) ProtoMessage() {}

func (x *ShopRefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopRefreshRequest.ProtoReflect.Descriptor instead.
func (*ShopRefreshRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{81}
}

func (x *ShopRefreshRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopRefreshRequest) GetShopType() uint32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

func (x *ShopRefreshRequest) GetIsFree() bool {
	if x != nil {
		return x.IsFree
	}
	return false
}

// 商店刷新返回
type ShopRefreshResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead  *IPacket           `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopType    uint32             `protobuf:"varint,2,opt,name=ShopType,proto3" json:"ShopType,omitempty"`      // 商店类型
	RefreshInfo *PBShopRefreshInfo `protobuf:"bytes,3,opt,name=RefreshInfo,proto3" json:"RefreshInfo,omitempty"` // 刷新数据
}

func (x *ShopRefreshResponse) Reset() {
	*x = ShopRefreshResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopRefreshResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopRefreshResponse) ProtoMessage() {}

func (x *ShopRefreshResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopRefreshResponse.ProtoReflect.Descriptor instead.
func (*ShopRefreshResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{82}
}

func (x *ShopRefreshResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopRefreshResponse) GetShopType() uint32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

func (x *ShopRefreshResponse) GetRefreshInfo() *PBShopRefreshInfo {
	if x != nil {
		return x.RefreshInfo
	}
	return nil
}

// 商店刷新时间通知返回
type ShopRefreshTimeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead  *IPacket           `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ShopType    uint32             `protobuf:"varint,2,opt,name=ShopType,proto3" json:"ShopType,omitempty"`      // 商店类型
	RefreshInfo *PBShopRefreshInfo `protobuf:"bytes,3,opt,name=RefreshInfo,proto3" json:"RefreshInfo,omitempty"` // 刷新数据
}

func (x *ShopRefreshTimeNotify) Reset() {
	*x = ShopRefreshTimeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopRefreshTimeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopRefreshTimeNotify) ProtoMessage() {}

func (x *ShopRefreshTimeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopRefreshTimeNotify.ProtoReflect.Descriptor instead.
func (*ShopRefreshTimeNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{83}
}

func (x *ShopRefreshTimeNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ShopRefreshTimeNotify) GetShopType() uint32 {
	if x != nil {
		return x.ShopType
	}
	return 0
}

func (x *ShopRefreshTimeNotify) GetRefreshInfo() *PBShopRefreshInfo {
	if x != nil {
		return x.RefreshInfo
	}
	return nil
}

// 抽奖返回
type DrawNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead  *IPacket      `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DrawList    []*PBDrawInfo `protobuf:"bytes,2,rep,name=DrawList,proto3" json:"DrawList,omitempty"`               // 新增的抽奖
	DelDrawList []uint32      `protobuf:"varint,3,rep,packed,name=DelDrawList,proto3" json:"DelDrawList,omitempty"` // 删除的抽奖
}

func (x *DrawNotify) Reset() {
	*x = DrawNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawNotify) ProtoMessage() {}

func (x *DrawNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawNotify.ProtoReflect.Descriptor instead.
func (*DrawNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{84}
}

func (x *DrawNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DrawNotify) GetDrawList() []*PBDrawInfo {
	if x != nil {
		return x.DrawList
	}
	return nil
}

func (x *DrawNotify) GetDelDrawList() []uint32 {
	if x != nil {
		return x.DelDrawList
	}
	return nil
}

// 抽奖请求
type DrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead   *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DrawId       uint32   `protobuf:"varint,2,opt,name=DrawId,proto3" json:"DrawId,omitempty"`             // 抽奖id
	DrawCount    uint32   `protobuf:"varint,3,opt,name=DrawCount,proto3" json:"DrawCount,omitempty"`       // 抽奖次数
	IsUseReplace bool     `protobuf:"varint,4,opt,name=IsUseReplace,proto3" json:"IsUseReplace,omitempty"` // 是否用替换道具
	AdvertType   uint32   `protobuf:"varint,5,opt,name=AdvertType,proto3" json:"AdvertType,omitempty"`     // 广告类型
}

func (x *DrawRequest) Reset() {
	*x = DrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawRequest) ProtoMessage() {}

func (x *DrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawRequest.ProtoReflect.Descriptor instead.
func (*DrawRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{85}
}

func (x *DrawRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DrawRequest) GetDrawId() uint32 {
	if x != nil {
		return x.DrawId
	}
	return 0
}

func (x *DrawRequest) GetDrawCount() uint32 {
	if x != nil {
		return x.DrawCount
	}
	return 0
}

func (x *DrawRequest) GetIsUseReplace() bool {
	if x != nil {
		return x.IsUseReplace
	}
	return false
}

func (x *DrawRequest) GetAdvertType() uint32 {
	if x != nil {
		return x.AdvertType
	}
	return 0
}

// 抽奖返回
type DrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DrawInfo   *PBDrawInfo `protobuf:"bytes,2,opt,name=DrawInfo,proto3" json:"DrawInfo,omitempty"` // 抽奖信息
}

func (x *DrawResponse) Reset() {
	*x = DrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawResponse) ProtoMessage() {}

func (x *DrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawResponse.ProtoReflect.Descriptor instead.
func (*DrawResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{86}
}

func (x *DrawResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DrawResponse) GetDrawInfo() *PBDrawInfo {
	if x != nil {
		return x.DrawInfo
	}
	return nil
}

// 抽奖奖励详情请求
type DrawPrizeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DrawId     uint32   `protobuf:"varint,2,opt,name=DrawId,proto3" json:"DrawId,omitempty"` // 抽奖id
}

func (x *DrawPrizeInfoRequest) Reset() {
	*x = DrawPrizeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawPrizeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawPrizeInfoRequest) ProtoMessage() {}

func (x *DrawPrizeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawPrizeInfoRequest.ProtoReflect.Descriptor instead.
func (*DrawPrizeInfoRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{87}
}

func (x *DrawPrizeInfoRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DrawPrizeInfoRequest) GetDrawId() uint32 {
	if x != nil {
		return x.DrawId
	}
	return 0
}

// 抽奖奖励详情返回
type DrawPrizeInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket           `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DrawId     uint32             `protobuf:"varint,2,opt,name=DrawId,proto3" json:"DrawId,omitempty"`      // 抽奖id
	PrizeList  []*PBDrawPrizeInfo `protobuf:"bytes,3,rep,name=PrizeList,proto3" json:"PrizeList,omitempty"` // 奖励信息
}

func (x *DrawPrizeInfoResponse) Reset() {
	*x = DrawPrizeInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawPrizeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawPrizeInfoResponse) ProtoMessage() {}

func (x *DrawPrizeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawPrizeInfoResponse.ProtoReflect.Descriptor instead.
func (*DrawPrizeInfoResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{88}
}

func (x *DrawPrizeInfoResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DrawPrizeInfoResponse) GetDrawId() uint32 {
	if x != nil {
		return x.DrawId
	}
	return 0
}

func (x *DrawPrizeInfoResponse) GetPrizeList() []*PBDrawPrizeInfo {
	if x != nil {
		return x.PrizeList
	}
	return nil
}

// 抽奖积分奖励请求
type DrawScorePrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DrawId     uint32   `protobuf:"varint,2,opt,name=DrawId,proto3" json:"DrawId,omitempty"` // 抽奖id
	Id         uint32   `protobuf:"varint,3,opt,name=Id,proto3" json:"Id,omitempty"`         // 抽奖积分配置配置的ID
}

func (x *DrawScorePrizeRequest) Reset() {
	*x = DrawScorePrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawScorePrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawScorePrizeRequest) ProtoMessage() {}

func (x *DrawScorePrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawScorePrizeRequest.ProtoReflect.Descriptor instead.
func (*DrawScorePrizeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{89}
}

func (x *DrawScorePrizeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DrawScorePrizeRequest) GetDrawId() uint32 {
	if x != nil {
		return x.DrawId
	}
	return 0
}

func (x *DrawScorePrizeRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 抽奖积分奖励返回
type DrawScorePrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DrawId     uint32   `protobuf:"varint,2,opt,name=DrawId,proto3" json:"DrawId,omitempty"` // 抽奖id
	Id         uint32   `protobuf:"varint,3,opt,name=Id,proto3" json:"Id,omitempty"`         // 抽奖积分配置配置的ID
}

func (x *DrawScorePrizeResponse) Reset() {
	*x = DrawScorePrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawScorePrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawScorePrizeResponse) ProtoMessage() {}

func (x *DrawScorePrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawScorePrizeResponse.ProtoReflect.Descriptor instead.
func (*DrawScorePrizeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{90}
}

func (x *DrawScorePrizeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *DrawScorePrizeResponse) GetDrawId() uint32 {
	if x != nil {
		return x.DrawId
	}
	return 0
}

func (x *DrawScorePrizeResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 充值订单请求
type ChargeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Charge     *PBCharge `protobuf:"bytes,2,opt,name=Charge,proto3" json:"Charge,omitempty"` // 充值数据
}

func (x *ChargeNotify) Reset() {
	*x = ChargeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeNotify) ProtoMessage() {}

func (x *ChargeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeNotify.ProtoReflect.Descriptor instead.
func (*ChargeNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{91}
}

func (x *ChargeNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChargeNotify) GetCharge() *PBCharge {
	if x != nil {
		return x.Charge
	}
	return nil
}

// 充值订单请求
type ChargeOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProductId  uint32   `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"` // 商品ID
	IsNeigou   bool     `protobuf:"varint,3,opt,name=IsNeigou,proto3" json:"IsNeigou,omitempty"`   // 是否是内购
}

func (x *ChargeOrderRequest) Reset() {
	*x = ChargeOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeOrderRequest) ProtoMessage() {}

func (x *ChargeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeOrderRequest.ProtoReflect.Descriptor instead.
func (*ChargeOrderRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{92}
}

func (x *ChargeOrderRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChargeOrderRequest) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ChargeOrderRequest) GetIsNeigou() bool {
	if x != nil {
		return x.IsNeigou
	}
	return false
}

// 充值订单返回
type ChargeOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead     *IPacket                `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BingchuanOrder *PBChargeBingchuanOrder `protobuf:"bytes,2,opt,name=BingchuanOrder,proto3" json:"BingchuanOrder,omitempty"` // 冰川订单
}

func (x *ChargeOrderResponse) Reset() {
	*x = ChargeOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeOrderResponse) ProtoMessage() {}

func (x *ChargeOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeOrderResponse.ProtoReflect.Descriptor instead.
func (*ChargeOrderResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{93}
}

func (x *ChargeOrderResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChargeOrderResponse) GetBingchuanOrder() *PBChargeBingchuanOrder {
	if x != nil {
		return x.BingchuanOrder
	}
	return nil
}

// 通知有新订单
type ChargeQueryNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProductId  uint32   `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"` // 充值数据
}

func (x *ChargeQueryNotify) Reset() {
	*x = ChargeQueryNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeQueryNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeQueryNotify) ProtoMessage() {}

func (x *ChargeQueryNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeQueryNotify.ProtoReflect.Descriptor instead.
func (*ChargeQueryNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{94}
}

func (x *ChargeQueryNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChargeQueryNotify) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

// 充值查询
type ChargeQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *ChargeQueryRequest) Reset() {
	*x = ChargeQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeQueryRequest) ProtoMessage() {}

func (x *ChargeQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeQueryRequest.ProtoReflect.Descriptor instead.
func (*ChargeQueryRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{95}
}

func (x *ChargeQueryRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 充值查询返回
type ChargeQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProductIds []uint32 `protobuf:"varint,2,rep,packed,name=ProductIds,proto3" json:"ProductIds,omitempty"` // 商品ID
}

func (x *ChargeQueryResponse) Reset() {
	*x = ChargeQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeQueryResponse) ProtoMessage() {}

func (x *ChargeQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeQueryResponse.ProtoReflect.Descriptor instead.
func (*ChargeQueryResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{96}
}

func (x *ChargeQueryResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChargeQueryResponse) GetProductIds() []uint32 {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

// 新首冲列表通知
type FirstChargeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead      *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	FirstChargeList []*PBFirstCharge `protobuf:"bytes,2,rep,name=FirstChargeList,proto3" json:"FirstChargeList,omitempty"` // 新增的首冲数据
}

func (x *FirstChargeNotify) Reset() {
	*x = FirstChargeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstChargeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstChargeNotify) ProtoMessage() {}

func (x *FirstChargeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstChargeNotify.ProtoReflect.Descriptor instead.
func (*FirstChargeNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{97}
}

func (x *FirstChargeNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *FirstChargeNotify) GetFirstChargeList() []*PBFirstCharge {
	if x != nil {
		return x.FirstChargeList
	}
	return nil
}

// 首冲领奖请求
type FirstChargePrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead    *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	FirstChargeId uint32   `protobuf:"varint,2,opt,name=FirstChargeId,proto3" json:"FirstChargeId,omitempty"` // 首冲类型
}

func (x *FirstChargePrizeRequest) Reset() {
	*x = FirstChargePrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstChargePrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstChargePrizeRequest) ProtoMessage() {}

func (x *FirstChargePrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstChargePrizeRequest.ProtoReflect.Descriptor instead.
func (*FirstChargePrizeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{98}
}

func (x *FirstChargePrizeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *FirstChargePrizeRequest) GetFirstChargeId() uint32 {
	if x != nil {
		return x.FirstChargeId
	}
	return 0
}

// 首冲领奖返回
type FirstChargePrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead    *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	FirstChargeId uint32   `protobuf:"varint,2,opt,name=FirstChargeId,proto3" json:"FirstChargeId,omitempty"` // 首冲类型
	PrizeDay      uint32   `protobuf:"varint,3,opt,name=PrizeDay,proto3" json:"PrizeDay,omitempty"`           // 领取的最新奖励天数
}

func (x *FirstChargePrizeResponse) Reset() {
	*x = FirstChargePrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstChargePrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstChargePrizeResponse) ProtoMessage() {}

func (x *FirstChargePrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstChargePrizeResponse.ProtoReflect.Descriptor instead.
func (*FirstChargePrizeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{99}
}

func (x *FirstChargePrizeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *FirstChargePrizeResponse) GetFirstChargeId() uint32 {
	if x != nil {
		return x.FirstChargeId
	}
	return 0
}

func (x *FirstChargePrizeResponse) GetPrizeDay() uint32 {
	if x != nil {
		return x.PrizeDay
	}
	return 0
}

// 新BP通知
type BPNewNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BPInfo     *PBBPInfo `protobuf:"bytes,2,opt,name=BPInfo,proto3" json:"BPInfo,omitempty"` // 新BP
}

func (x *BPNewNotify) Reset() {
	*x = BPNewNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BPNewNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BPNewNotify) ProtoMessage() {}

func (x *BPNewNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BPNewNotify.ProtoReflect.Descriptor instead.
func (*BPNewNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{100}
}

func (x *BPNewNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BPNewNotify) GetBPInfo() *PBBPInfo {
	if x != nil {
		return x.BPInfo
	}
	return nil
}

// 新BP期数通知
type BPNewStageNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BPType     uint32           `protobuf:"varint,2,opt,name=BPType,proto3" json:"BPType,omitempty"`          // BP类型
	StageList  []*PBBPStageInfo `protobuf:"bytes,3,rep,name=StageList,proto3" json:"StageList,omitempty"`     // 新BP期数
	DelList    []uint32         `protobuf:"varint,4,rep,packed,name=DelList,proto3" json:"DelList,omitempty"` // 删除的期数
}

func (x *BPNewStageNotify) Reset() {
	*x = BPNewStageNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BPNewStageNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BPNewStageNotify) ProtoMessage() {}

func (x *BPNewStageNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BPNewStageNotify.ProtoReflect.Descriptor instead.
func (*BPNewStageNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{101}
}

func (x *BPNewStageNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BPNewStageNotify) GetBPType() uint32 {
	if x != nil {
		return x.BPType
	}
	return 0
}

func (x *BPNewStageNotify) GetStageList() []*PBBPStageInfo {
	if x != nil {
		return x.StageList
	}
	return nil
}

func (x *BPNewStageNotify) GetDelList() []uint32 {
	if x != nil {
		return x.DelList
	}
	return nil
}

// BP数值同步
type BPValueNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BPType     uint32   `protobuf:"varint,2,opt,name=BPType,proto3" json:"BPType,omitempty"` // BP类型
	Value      uint32   `protobuf:"varint,3,opt,name=Value,proto3" json:"Value,omitempty"`   // BP类型
}

func (x *BPValueNotify) Reset() {
	*x = BPValueNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BPValueNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BPValueNotify) ProtoMessage() {}

func (x *BPValueNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BPValueNotify.ProtoReflect.Descriptor instead.
func (*BPValueNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{102}
}

func (x *BPValueNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BPValueNotify) GetBPType() uint32 {
	if x != nil {
		return x.BPType
	}
	return 0
}

func (x *BPValueNotify) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// BP充值激活通知
type BPAcitiveNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BPType     uint32   `protobuf:"varint,2,opt,name=BPType,proto3" json:"BPType,omitempty"`         // BP类型
	StageId    uint32   `protobuf:"varint,3,opt,name=StageId,proto3" json:"StageId,omitempty"`       // BP类型
	ChargeTime uint64   `protobuf:"varint,4,opt,name=ChargeTime,proto3" json:"ChargeTime,omitempty"` // 充值时间
}

func (x *BPAcitiveNotify) Reset() {
	*x = BPAcitiveNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BPAcitiveNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BPAcitiveNotify) ProtoMessage() {}

func (x *BPAcitiveNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BPAcitiveNotify.ProtoReflect.Descriptor instead.
func (*BPAcitiveNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{103}
}

func (x *BPAcitiveNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BPAcitiveNotify) GetBPType() uint32 {
	if x != nil {
		return x.BPType
	}
	return 0
}

func (x *BPAcitiveNotify) GetStageId() uint32 {
	if x != nil {
		return x.StageId
	}
	return 0
}

func (x *BPAcitiveNotify) GetChargeTime() uint64 {
	if x != nil {
		return x.ChargeTime
	}
	return 0
}

// BP领奖请求
type BPPrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BPType     uint32   `protobuf:"varint,2,opt,name=BPType,proto3" json:"BPType,omitempty"`   // BP类型
	StageId    uint32   `protobuf:"varint,3,opt,name=StageId,proto3" json:"StageId,omitempty"` // BP期数
}

func (x *BPPrizeRequest) Reset() {
	*x = BPPrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BPPrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BPPrizeRequest) ProtoMessage() {}

func (x *BPPrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BPPrizeRequest.ProtoReflect.Descriptor instead.
func (*BPPrizeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{104}
}

func (x *BPPrizeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BPPrizeRequest) GetBPType() uint32 {
	if x != nil {
		return x.BPType
	}
	return 0
}

func (x *BPPrizeRequest) GetStageId() uint32 {
	if x != nil {
		return x.StageId
	}
	return 0
}

// BP领奖返回
type BPPrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead    *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BPType        uint32   `protobuf:"varint,2,opt,name=BPType,proto3" json:"BPType,omitempty"`               // BP类型
	StageId       uint32   `protobuf:"varint,3,opt,name=StageId,proto3" json:"StageId,omitempty"`             // BP期数
	NoramlPrizeId uint32   `protobuf:"varint,4,opt,name=NoramlPrizeId,proto3" json:"NoramlPrizeId,omitempty"` // 普通领奖ID
	ExtralPrizeId uint32   `protobuf:"varint,5,opt,name=ExtralPrizeId,proto3" json:"ExtralPrizeId,omitempty"` // 额外领奖ID
}

func (x *BPPrizeResponse) Reset() {
	*x = BPPrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BPPrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BPPrizeResponse) ProtoMessage() {}

func (x *BPPrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BPPrizeResponse.ProtoReflect.Descriptor instead.
func (*BPPrizeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{105}
}

func (x *BPPrizeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BPPrizeResponse) GetBPType() uint32 {
	if x != nil {
		return x.BPType
	}
	return 0
}

func (x *BPPrizeResponse) GetStageId() uint32 {
	if x != nil {
		return x.StageId
	}
	return 0
}

func (x *BPPrizeResponse) GetNoramlPrizeId() uint32 {
	if x != nil {
		return x.NoramlPrizeId
	}
	return 0
}

func (x *BPPrizeResponse) GetExtralPrizeId() uint32 {
	if x != nil {
		return x.ExtralPrizeId
	}
	return 0
}

// 充值卡新增返回
type ChargeCardNewNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket      `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	CardInfo   *PBChargeCard `protobuf:"bytes,2,opt,name=CardInfo,proto3" json:"CardInfo,omitempty"` // 充值卡
}

func (x *ChargeCardNewNotify) Reset() {
	*x = ChargeCardNewNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeCardNewNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeCardNewNotify) ProtoMessage() {}

func (x *ChargeCardNewNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeCardNewNotify.ProtoReflect.Descriptor instead.
func (*ChargeCardNewNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{106}
}

func (x *ChargeCardNewNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChargeCardNewNotify) GetCardInfo() *PBChargeCard {
	if x != nil {
		return x.CardInfo
	}
	return nil
}

// 充值卡更新返回
type ChargeCardUpdateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket        `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	CardInfo   []*PBChargeCard `protobuf:"bytes,2,rep,name=CardInfo,proto3" json:"CardInfo,omitempty"`       // 充值卡
	DelList    []uint32        `protobuf:"varint,3,rep,packed,name=DelList,proto3" json:"DelList,omitempty"` // 过期删除的卡
}

func (x *ChargeCardUpdateNotify) Reset() {
	*x = ChargeCardUpdateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeCardUpdateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeCardUpdateNotify) ProtoMessage() {}

func (x *ChargeCardUpdateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeCardUpdateNotify.ProtoReflect.Descriptor instead.
func (*ChargeCardUpdateNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{107}
}

func (x *ChargeCardUpdateNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChargeCardUpdateNotify) GetCardInfo() []*PBChargeCard {
	if x != nil {
		return x.CardInfo
	}
	return nil
}

func (x *ChargeCardUpdateNotify) GetDelList() []uint32 {
	if x != nil {
		return x.DelList
	}
	return nil
}

// 充值卡领奖请求
type ChargeCardPrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	CardType   uint32   `protobuf:"varint,2,opt,name=CardType,proto3" json:"CardType,omitempty"` // 充值卡类型
}

func (x *ChargeCardPrizeRequest) Reset() {
	*x = ChargeCardPrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeCardPrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeCardPrizeRequest) ProtoMessage() {}

func (x *ChargeCardPrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeCardPrizeRequest.ProtoReflect.Descriptor instead.
func (*ChargeCardPrizeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{108}
}

func (x *ChargeCardPrizeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChargeCardPrizeRequest) GetCardType() uint32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

// 充值卡领奖返回
type ChargeCardPrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	CardType   uint32   `protobuf:"varint,2,opt,name=CardType,proto3" json:"CardType,omitempty"`   // 充值卡类型
	PrizeTime  uint64   `protobuf:"varint,3,opt,name=PrizeTime,proto3" json:"PrizeTime,omitempty"` // 领奖时间
}

func (x *ChargeCardPrizeResponse) Reset() {
	*x = ChargeCardPrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeCardPrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeCardPrizeResponse) ProtoMessage() {}

func (x *ChargeCardPrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeCardPrizeResponse.ProtoReflect.Descriptor instead.
func (*ChargeCardPrizeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{109}
}

func (x *ChargeCardPrizeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChargeCardPrizeResponse) GetCardType() uint32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

func (x *ChargeCardPrizeResponse) GetPrizeTime() uint64 {
	if x != nil {
		return x.PrizeTime
	}
	return 0
}

// 广播通知协议
type BroadcastNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead    *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`        // 包头
	Channel       uint32   `protobuf:"varint,2,opt,name=Channel,proto3" json:"Channel,omitempty"`             // 广播频道
	BroadcastType uint32   `protobuf:"varint,3,opt,name=BroadcastType,proto3" json:"BroadcastType,omitempty"` // 广播类型
	Content       string   `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`              // 广播类容
	Extends       []byte   `protobuf:"bytes,5,opt,name=Extends,proto3" json:"Extends,omitempty"`              // 扩展字段
}

func (x *BroadcastNotify) Reset() {
	*x = BroadcastNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastNotify) ProtoMessage() {}

func (x *BroadcastNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastNotify.ProtoReflect.Descriptor instead.
func (*BroadcastNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{110}
}

func (x *BroadcastNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BroadcastNotify) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *BroadcastNotify) GetBroadcastType() uint32 {
	if x != nil {
		return x.BroadcastType
	}
	return 0
}

func (x *BroadcastNotify) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *BroadcastNotify) GetExtends() []byte {
	if x != nil {
		return x.Extends
	}
	return nil
}

// ----------------------------上阵星星增加请求-------------------------------
type HeroBattleStarInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroID uint32 `protobuf:"varint,1,opt,name=HeroID,proto3" json:"HeroID,omitempty"` // 英雄id
	Total  uint32 `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`   // 当前总量
}

func (x *HeroBattleStarInfo) Reset() {
	*x = HeroBattleStarInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroBattleStarInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroBattleStarInfo) ProtoMessage() {}

func (x *HeroBattleStarInfo) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroBattleStarInfo.ProtoReflect.Descriptor instead.
func (*HeroBattleStarInfo) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{111}
}

func (x *HeroBattleStarInfo) GetHeroID() uint32 {
	if x != nil {
		return x.HeroID
	}
	return 0
}

func (x *HeroBattleStarInfo) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type HeroBattleStarChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket              `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Heros      []*HeroBattleStarInfo `protobuf:"bytes,2,rep,name=Heros,proto3" json:"Heros,omitempty"`
}

func (x *HeroBattleStarChangeRequest) Reset() {
	*x = HeroBattleStarChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroBattleStarChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroBattleStarChangeRequest) ProtoMessage() {}

func (x *HeroBattleStarChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroBattleStarChangeRequest.ProtoReflect.Descriptor instead.
func (*HeroBattleStarChangeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{112}
}

func (x *HeroBattleStarChangeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroBattleStarChangeRequest) GetHeros() []*HeroBattleStarInfo {
	if x != nil {
		return x.Heros
	}
	return nil
}

type HeroBattleStarChangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *HeroBattleStarChangeResponse) Reset() {
	*x = HeroBattleStarChangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroBattleStarChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroBattleStarChangeResponse) ProtoMessage() {}

func (x *HeroBattleStarChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroBattleStarChangeResponse.ProtoReflect.Descriptor instead.
func (*HeroBattleStarChangeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{113}
}

func (x *HeroBattleStarChangeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 星星变更通知
type HeroBattleStarChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket              `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Heros      []*HeroBattleStarInfo `protobuf:"bytes,2,rep,name=Heros,proto3" json:"Heros,omitempty"`
}

func (x *HeroBattleStarChangeNotify) Reset() {
	*x = HeroBattleStarChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroBattleStarChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroBattleStarChangeNotify) ProtoMessage() {}

func (x *HeroBattleStarChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroBattleStarChangeNotify.ProtoReflect.Descriptor instead.
func (*HeroBattleStarChangeNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{114}
}

func (x *HeroBattleStarChangeNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroBattleStarChangeNotify) GetHeros() []*HeroBattleStarInfo {
	if x != nil {
		return x.Heros
	}
	return nil
}

// ------------------------------离线收益----------------------------
// 领取所有没有领取的奖励
type OfflineIncomeRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *OfflineIncomeRewardRequest) Reset() {
	*x = OfflineIncomeRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineIncomeRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineIncomeRewardRequest) ProtoMessage() {}

func (x *OfflineIncomeRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineIncomeRewardRequest.ProtoReflect.Descriptor instead.
func (*OfflineIncomeRewardRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{115}
}

func (x *OfflineIncomeRewardRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

type OfflineIncomeRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *OfflineIncomeRewardResponse) Reset() {
	*x = OfflineIncomeRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineIncomeRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineIncomeRewardResponse) ProtoMessage() {}

func (x *OfflineIncomeRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineIncomeRewardResponse.ProtoReflect.Descriptor instead.
func (*OfflineIncomeRewardResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{116}
}

func (x *OfflineIncomeRewardResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// ------------------------------挂机科技开始----------------------------
// 挂机科技等级同步 时间到
type HookTechLevelNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead   *IPacket      `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	HookTechList []*PBHookTech `protobuf:"bytes,2,rep,name=HookTechList,proto3" json:"HookTechList,omitempty"` // 挂机科技列表
}

func (x *HookTechLevelNotify) Reset() {
	*x = HookTechLevelNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookTechLevelNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookTechLevelNotify) ProtoMessage() {}

func (x *HookTechLevelNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookTechLevelNotify.ProtoReflect.Descriptor instead.
func (*HookTechLevelNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{117}
}

func (x *HookTechLevelNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HookTechLevelNotify) GetHookTechList() []*PBHookTech {
	if x != nil {
		return x.HookTechList
	}
	return nil
}

// 挂机科技升级请求
type HookTechLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"` // Id
}

func (x *HookTechLevelRequest) Reset() {
	*x = HookTechLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookTechLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookTechLevelRequest) ProtoMessage() {}

func (x *HookTechLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookTechLevelRequest.ProtoReflect.Descriptor instead.
func (*HookTechLevelRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{118}
}

func (x *HookTechLevelRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HookTechLevelRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 挂机科技升级返回
type HookTechLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`               // Id
	LevelTime  uint64   `protobuf:"varint,3,opt,name=LevelTime,proto3" json:"LevelTime,omitempty"` // 升级到达时间
}

func (x *HookTechLevelResponse) Reset() {
	*x = HookTechLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookTechLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookTechLevelResponse) ProtoMessage() {}

func (x *HookTechLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookTechLevelResponse.ProtoReflect.Descriptor instead.
func (*HookTechLevelResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{119}
}

func (x *HookTechLevelResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HookTechLevelResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HookTechLevelResponse) GetLevelTime() uint64 {
	if x != nil {
		return x.LevelTime
	}
	return 0
}

// 挂机科技加速请求
type HookTechSpeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`                 // Id
	AdvertType uint32   `protobuf:"varint,3,opt,name=AdvertType,proto3" json:"AdvertType,omitempty"` // 广告类型 0无广告
}

func (x *HookTechSpeedRequest) Reset() {
	*x = HookTechSpeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookTechSpeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookTechSpeedRequest) ProtoMessage() {}

func (x *HookTechSpeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookTechSpeedRequest.ProtoReflect.Descriptor instead.
func (*HookTechSpeedRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{120}
}

func (x *HookTechSpeedRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HookTechSpeedRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HookTechSpeedRequest) GetAdvertType() uint32 {
	if x != nil {
		return x.AdvertType
	}
	return 0
}

// 挂机科技加速返回
type HookTechSpeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`               // Id
	Level      uint32   `protobuf:"varint,3,opt,name=Level,proto3" json:"Level,omitempty"`         // 等级
	LevelTime  uint64   `protobuf:"varint,4,opt,name=LevelTime,proto3" json:"LevelTime,omitempty"` // 升级到达时间
}

func (x *HookTechSpeedResponse) Reset() {
	*x = HookTechSpeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookTechSpeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookTechSpeedResponse) ProtoMessage() {}

func (x *HookTechSpeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookTechSpeedResponse.ProtoReflect.Descriptor instead.
func (*HookTechSpeedResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{121}
}

func (x *HookTechSpeedResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HookTechSpeedResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HookTechSpeedResponse) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *HookTechSpeedResponse) GetLevelTime() uint64 {
	if x != nil {
		return x.LevelTime
	}
	return 0
}

// --------------------------------词条技能--------------------------------------
type EntryConditionNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket        `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Condition  *EntryCondition `protobuf:"bytes,2,opt,name=Condition,proto3" json:"Condition,omitempty"`
}

func (x *EntryConditionNotify) Reset() {
	*x = EntryConditionNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntryConditionNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryConditionNotify) ProtoMessage() {}

func (x *EntryConditionNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryConditionNotify.ProtoReflect.Descriptor instead.
func (*EntryConditionNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{122}
}

func (x *EntryConditionNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EntryConditionNotify) GetCondition() *EntryCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

type EntryEffectNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket     `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Effect     *EntryEffect `protobuf:"bytes,2,opt,name=Effect,proto3" json:"Effect,omitempty"`
}

func (x *EntryEffectNotify) Reset() {
	*x = EntryEffectNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntryEffectNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryEffectNotify) ProtoMessage() {}

func (x *EntryEffectNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryEffectNotify.ProtoReflect.Descriptor instead.
func (*EntryEffectNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{123}
}

func (x *EntryEffectNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EntryEffectNotify) GetEffect() *EntryEffect {
	if x != nil {
		return x.Effect
	}
	return nil
}

// 词条解锁请求
type EntryUnlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead     *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	PassiveSkillID uint32   `protobuf:"varint,2,opt,name=PassiveSkillID,proto3" json:"PassiveSkillID,omitempty"` // 被动技能id
}

func (x *EntryUnlockRequest) Reset() {
	*x = EntryUnlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntryUnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryUnlockRequest) ProtoMessage() {}

func (x *EntryUnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryUnlockRequest.ProtoReflect.Descriptor instead.
func (*EntryUnlockRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{124}
}

func (x *EntryUnlockRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EntryUnlockRequest) GetPassiveSkillID() uint32 {
	if x != nil {
		return x.PassiveSkillID
	}
	return 0
}

type EntryUnlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *EntryUnlockResponse) Reset() {
	*x = EntryUnlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntryUnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryUnlockResponse) ProtoMessage() {}

func (x *EntryUnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryUnlockResponse.ProtoReflect.Descriptor instead.
func (*EntryUnlockResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{125}
}

func (x *EntryUnlockResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 触发词条
type EntryTriggerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	EntryType  uint32   `protobuf:"varint,2,opt,name=EntryType,proto3" json:"EntryType,omitempty"`  // 触发的词条类型
	Times      uint32   `protobuf:"varint,3,opt,name=Times,proto3" json:"Times,omitempty"`          // 触发次数
	Params     []uint32 `protobuf:"varint,4,rep,packed,name=Params,proto3" json:"Params,omitempty"` // 扩展参数（例如品质、星级、等）
}

func (x *EntryTriggerRequest) Reset() {
	*x = EntryTriggerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntryTriggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryTriggerRequest) ProtoMessage() {}

func (x *EntryTriggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryTriggerRequest.ProtoReflect.Descriptor instead.
func (*EntryTriggerRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{126}
}

func (x *EntryTriggerRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EntryTriggerRequest) GetEntryType() uint32 {
	if x != nil {
		return x.EntryType
	}
	return 0
}

func (x *EntryTriggerRequest) GetTimes() uint32 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *EntryTriggerRequest) GetParams() []uint32 {
	if x != nil {
		return x.Params
	}
	return nil
}

type EntryTriggerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *EntryTriggerResponse) Reset() {
	*x = EntryTriggerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntryTriggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryTriggerResponse) ProtoMessage() {}

func (x *EntryTriggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryTriggerResponse.ProtoReflect.Descriptor instead.
func (*EntryTriggerResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{127}
}

func (x *EntryTriggerResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

type GetPlayerDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DataType   int32    `protobuf:"varint,2,opt,name=DataType,proto3" json:"DataType,omitempty"`
}

func (x *GetPlayerDataRequest) Reset() {
	*x = GetPlayerDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerDataRequest) ProtoMessage() {}

func (x *GetPlayerDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerDataRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerDataRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{128}
}

func (x *GetPlayerDataRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GetPlayerDataRequest) GetDataType() int32 {
	if x != nil {
		return x.DataType
	}
	return 0
}

type GetPlayerDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket      `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	PlayerData *PBPlayerData `protobuf:"bytes,2,opt,name=PlayerData,proto3" json:"PlayerData,omitempty"`
}

func (x *GetPlayerDataResponse) Reset() {
	*x = GetPlayerDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerDataResponse) ProtoMessage() {}

func (x *GetPlayerDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerDataResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerDataResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{129}
}

func (x *GetPlayerDataResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GetPlayerDataResponse) GetPlayerData() *PBPlayerData {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

type SetPlayerDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DataType   int32    `protobuf:"varint,2,opt,name=DataType,proto3" json:"DataType,omitempty"`
	JsonData   string   `protobuf:"bytes,3,opt,name=JsonData,proto3" json:"JsonData,omitempty"`
}

func (x *SetPlayerDataRequest) Reset() {
	*x = SetPlayerDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerDataRequest) ProtoMessage() {}

func (x *SetPlayerDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerDataRequest.ProtoReflect.Descriptor instead.
func (*SetPlayerDataRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{130}
}

func (x *SetPlayerDataRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SetPlayerDataRequest) GetDataType() int32 {
	if x != nil {
		return x.DataType
	}
	return 0
}

func (x *SetPlayerDataRequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type SetPlayerDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *SetPlayerDataResponse) Reset() {
	*x = SetPlayerDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerDataResponse) ProtoMessage() {}

func (x *SetPlayerDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerDataResponse.ProtoReflect.Descriptor instead.
func (*SetPlayerDataResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{131}
}

func (x *SetPlayerDataResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// --------------------------------七天活动开始--------------------------------------
// 成就任务更新
type AchieveTaskInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket           `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	SystemType uint32             `protobuf:"varint,2,opt,name=SystemType,proto3" json:"SystemType,omitempty"` // 成就系统类型
	TaskList   []*PBTaskStageInfo `protobuf:"bytes,3,rep,name=TaskList,proto3" json:"TaskList,omitempty"`      // 更新的任务进度信息
}

func (x *AchieveTaskInfoNotify) Reset() {
	*x = AchieveTaskInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchieveTaskInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchieveTaskInfoNotify) ProtoMessage() {}

func (x *AchieveTaskInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchieveTaskInfoNotify.ProtoReflect.Descriptor instead.
func (*AchieveTaskInfoNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{132}
}

func (x *AchieveTaskInfoNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *AchieveTaskInfoNotify) GetSystemType() uint32 {
	if x != nil {
		return x.SystemType
	}
	return 0
}

func (x *AchieveTaskInfoNotify) GetTaskList() []*PBTaskStageInfo {
	if x != nil {
		return x.TaskList
	}
	return nil
}

// 七天活动列表通知
type SevenDayListNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket          `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	AddList    []*PBSevenDayInfo `protobuf:"bytes,2,rep,name=AddList,proto3" json:"AddList,omitempty"`       // 增加的活动
	Delist     []uint32          `protobuf:"varint,3,rep,packed,name=Delist,proto3" json:"Delist,omitempty"` // 删除的活动
}

func (x *SevenDayListNotify) Reset() {
	*x = SevenDayListNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SevenDayListNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SevenDayListNotify) ProtoMessage() {}

func (x *SevenDayListNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SevenDayListNotify.ProtoReflect.Descriptor instead.
func (*SevenDayListNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{133}
}

func (x *SevenDayListNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SevenDayListNotify) GetAddList() []*PBSevenDayInfo {
	if x != nil {
		return x.AddList
	}
	return nil
}

func (x *SevenDayListNotify) GetDelist() []uint32 {
	if x != nil {
		return x.Delist
	}
	return nil
}

// 七天活动礼包通知
type SevenDayGiftNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	GiftInfo   *PBU32U32 `protobuf:"bytes,2,opt,name=GiftInfo,proto3" json:"GiftInfo,omitempty"` // 礼包数据
	Value      uint32    `protobuf:"varint,3,opt,name=Value,proto3" json:"Value,omitempty"`      // 活跃值
}

func (x *SevenDayGiftNotify) Reset() {
	*x = SevenDayGiftNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SevenDayGiftNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SevenDayGiftNotify) ProtoMessage() {}

func (x *SevenDayGiftNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SevenDayGiftNotify.ProtoReflect.Descriptor instead.
func (*SevenDayGiftNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{134}
}

func (x *SevenDayGiftNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SevenDayGiftNotify) GetGiftInfo() *PBU32U32 {
	if x != nil {
		return x.GiftInfo
	}
	return nil
}

func (x *SevenDayGiftNotify) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 七天活跃奖励领取请求
type SevenDayActivePrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"` // 活动ID
}

func (x *SevenDayActivePrizeRequest) Reset() {
	*x = SevenDayActivePrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SevenDayActivePrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SevenDayActivePrizeRequest) ProtoMessage() {}

func (x *SevenDayActivePrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SevenDayActivePrizeRequest.ProtoReflect.Descriptor instead.
func (*SevenDayActivePrizeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{135}
}

func (x *SevenDayActivePrizeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SevenDayActivePrizeRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 七天活跃奖励领取返回
type SevenDayActivePrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`                 // 活动ID
	PrizeValue uint32   `protobuf:"varint,3,opt,name=PrizeValue,proto3" json:"PrizeValue,omitempty"` // 当前领取的活跃值
}

func (x *SevenDayActivePrizeResponse) Reset() {
	*x = SevenDayActivePrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SevenDayActivePrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SevenDayActivePrizeResponse) ProtoMessage() {}

func (x *SevenDayActivePrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SevenDayActivePrizeResponse.ProtoReflect.Descriptor instead.
func (*SevenDayActivePrizeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{136}
}

func (x *SevenDayActivePrizeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SevenDayActivePrizeResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SevenDayActivePrizeResponse) GetPrizeValue() uint32 {
	if x != nil {
		return x.PrizeValue
	}
	return 0
}

// 七天任务奖励领取请求
type SevenDayTaskPrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`         // 活动ID
	TaskId     uint32   `protobuf:"varint,3,opt,name=TaskId,proto3" json:"TaskId,omitempty"` // 任务ID
}

func (x *SevenDayTaskPrizeRequest) Reset() {
	*x = SevenDayTaskPrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SevenDayTaskPrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SevenDayTaskPrizeRequest) ProtoMessage() {}

func (x *SevenDayTaskPrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SevenDayTaskPrizeRequest.ProtoReflect.Descriptor instead.
func (*SevenDayTaskPrizeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{137}
}

func (x *SevenDayTaskPrizeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SevenDayTaskPrizeRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SevenDayTaskPrizeRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// 七天任务奖励领取返回
type SevenDayTaskPrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead    *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id            uint32           `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`                      // 活动ID
	Value         uint32           `protobuf:"varint,3,opt,name=Value,proto3" json:"Value,omitempty"`                // 活跃值
	TaskStageInfo *PBTaskStageInfo `protobuf:"bytes,4,opt,name=TaskStageInfo,proto3" json:"TaskStageInfo,omitempty"` // 任务数据
}

func (x *SevenDayTaskPrizeResponse) Reset() {
	*x = SevenDayTaskPrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SevenDayTaskPrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SevenDayTaskPrizeResponse) ProtoMessage() {}

func (x *SevenDayTaskPrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SevenDayTaskPrizeResponse.ProtoReflect.Descriptor instead.
func (*SevenDayTaskPrizeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{138}
}

func (x *SevenDayTaskPrizeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SevenDayTaskPrizeResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SevenDayTaskPrizeResponse) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SevenDayTaskPrizeResponse) GetTaskStageInfo() *PBTaskStageInfo {
	if x != nil {
		return x.TaskStageInfo
	}
	return nil
}

// 七天购买礼包请求
type SevenDayBuyGiftRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`         // 活动ID
	GiftId     uint32   `protobuf:"varint,3,opt,name=GiftId,proto3" json:"GiftId,omitempty"` // 礼包ID
}

func (x *SevenDayBuyGiftRequest) Reset() {
	*x = SevenDayBuyGiftRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SevenDayBuyGiftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SevenDayBuyGiftRequest) ProtoMessage() {}

func (x *SevenDayBuyGiftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SevenDayBuyGiftRequest.ProtoReflect.Descriptor instead.
func (*SevenDayBuyGiftRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{139}
}

func (x *SevenDayBuyGiftRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SevenDayBuyGiftRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SevenDayBuyGiftRequest) GetGiftId() uint32 {
	if x != nil {
		return x.GiftId
	}
	return 0
}

// 七天任务奖励领取返回
type SevenDayBuyGiftResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32    `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`            // 活动ID
	Value      uint32    `protobuf:"varint,3,opt,name=Value,proto3" json:"Value,omitempty"`      // 活跃值
	GiftInfo   *PBU32U32 `protobuf:"bytes,4,opt,name=GiftInfo,proto3" json:"GiftInfo,omitempty"` // 礼包数据
}

func (x *SevenDayBuyGiftResponse) Reset() {
	*x = SevenDayBuyGiftResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SevenDayBuyGiftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SevenDayBuyGiftResponse) ProtoMessage() {}

func (x *SevenDayBuyGiftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SevenDayBuyGiftResponse.ProtoReflect.Descriptor instead.
func (*SevenDayBuyGiftResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{140}
}

func (x *SevenDayBuyGiftResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SevenDayBuyGiftResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SevenDayBuyGiftResponse) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SevenDayBuyGiftResponse) GetGiftInfo() *PBU32U32 {
	if x != nil {
		return x.GiftInfo
	}
	return nil
}

// --------------------------------七天活动结束--------------------------------------
type UserRouteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID       uint64     `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	RouteInfo *RouteInfo `protobuf:"bytes,2,opt,name=RouteInfo,proto3" json:"RouteInfo,omitempty"`
}

func (x *UserRouteInfo) Reset() {
	*x = UserRouteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRouteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRouteInfo) ProtoMessage() {}

func (x *UserRouteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRouteInfo.ProtoReflect.Descriptor instead.
func (*UserRouteInfo) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{141}
}

func (x *UserRouteInfo) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *UserRouteInfo) GetRouteInfo() *RouteInfo {
	if x != nil {
		return x.RouteInfo
	}
	return nil
}

type UpdateRouteNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Users      []*UserRouteInfo `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
}

func (x *UpdateRouteNotify) Reset() {
	*x = UpdateRouteNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRouteNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteNotify) ProtoMessage() {}

func (x *UpdateRouteNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteNotify.ProtoReflect.Descriptor instead.
func (*UpdateRouteNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{142}
}

func (x *UpdateRouteNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *UpdateRouteNotify) GetUsers() []*UserRouteInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

// 职业升级请求
type ProfessionLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	CurLevel   uint32   `protobuf:"varint,3,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 当前等级
	AddLevel   uint32   `protobuf:"varint,4,opt,name=AddLevel,proto3" json:"AddLevel,omitempty"` // 新增等级
}

func (x *ProfessionLevelRequest) Reset() {
	*x = ProfessionLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionLevelRequest) ProtoMessage() {}

func (x *ProfessionLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionLevelRequest.ProtoReflect.Descriptor instead.
func (*ProfessionLevelRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{143}
}

func (x *ProfessionLevelRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionLevelRequest) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionLevelRequest) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

func (x *ProfessionLevelRequest) GetAddLevel() uint32 {
	if x != nil {
		return x.AddLevel
	}
	return 0
}

// 职业升级返回
type ProfessionLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	CurLevel   uint32   `protobuf:"varint,3,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 新等级
}

func (x *ProfessionLevelResponse) Reset() {
	*x = ProfessionLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionLevelResponse) ProtoMessage() {}

func (x *ProfessionLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionLevelResponse.ProtoReflect.Descriptor instead.
func (*ProfessionLevelResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{144}
}

func (x *ProfessionLevelResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionLevelResponse) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionLevelResponse) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 职业突破请求
type ProfessionGradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
}

func (x *ProfessionGradeRequest) Reset() {
	*x = ProfessionGradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionGradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionGradeRequest) ProtoMessage() {}

func (x *ProfessionGradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionGradeRequest.ProtoReflect.Descriptor instead.
func (*ProfessionGradeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{145}
}

func (x *ProfessionGradeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionGradeRequest) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

// 职业突破返回
type ProfessionGradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	Grade      uint32   `protobuf:"varint,3,opt,name=Grade,proto3" json:"Grade,omitempty"`       // 突破等级
}

func (x *ProfessionGradeResponse) Reset() {
	*x = ProfessionGradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionGradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionGradeResponse) ProtoMessage() {}

func (x *ProfessionGradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionGradeResponse.ProtoReflect.Descriptor instead.
func (*ProfessionGradeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{146}
}

func (x *ProfessionGradeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionGradeResponse) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionGradeResponse) GetGrade() uint32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

// 职业巅峰突破请求
type ProfessionPeakRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
}

func (x *ProfessionPeakRequest) Reset() {
	*x = ProfessionPeakRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPeakRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPeakRequest) ProtoMessage() {}

func (x *ProfessionPeakRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPeakRequest.ProtoReflect.Descriptor instead.
func (*ProfessionPeakRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{147}
}

func (x *ProfessionPeakRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPeakRequest) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

// 职业巅峰突破返回
type ProfessionPeakResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"`   // 职业类型
	PeakLevel  uint32   `protobuf:"varint,3,opt,name=PeakLevel,proto3" json:"PeakLevel,omitempty"` // 新巅峰等级
}

func (x *ProfessionPeakResponse) Reset() {
	*x = ProfessionPeakResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPeakResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPeakResponse) ProtoMessage() {}

func (x *ProfessionPeakResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPeakResponse.ProtoReflect.Descriptor instead.
func (*ProfessionPeakResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{148}
}

func (x *ProfessionPeakResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPeakResponse) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPeakResponse) GetPeakLevel() uint32 {
	if x != nil {
		return x.PeakLevel
	}
	return 0
}

// 职业巅峰升级请求
type ProfessionPeakLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	CurLevel   uint32   `protobuf:"varint,3,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 当前巅峰等级
}

func (x *ProfessionPeakLevelRequest) Reset() {
	*x = ProfessionPeakLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPeakLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPeakLevelRequest) ProtoMessage() {}

func (x *ProfessionPeakLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPeakLevelRequest.ProtoReflect.Descriptor instead.
func (*ProfessionPeakLevelRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{149}
}

func (x *ProfessionPeakLevelRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPeakLevelRequest) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPeakLevelRequest) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 职业巅峰升级返回
type ProfessionPeakLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	CurLevel   uint32   `protobuf:"varint,3,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 新巅峰等级
}

func (x *ProfessionPeakLevelResponse) Reset() {
	*x = ProfessionPeakLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPeakLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPeakLevelResponse) ProtoMessage() {}

func (x *ProfessionPeakLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPeakLevelResponse.ProtoReflect.Descriptor instead.
func (*ProfessionPeakLevelResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{150}
}

func (x *ProfessionPeakLevelResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPeakLevelResponse) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPeakLevelResponse) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 职业部位升级请求
type ProfessionPartLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	PartType   uint32   `protobuf:"varint,3,opt,name=PartType,proto3" json:"PartType,omitempty"` // 部位类型
	CurLevel   uint32   `protobuf:"varint,4,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 当前等级
}

func (x *ProfessionPartLevelRequest) Reset() {
	*x = ProfessionPartLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPartLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPartLevelRequest) ProtoMessage() {}

func (x *ProfessionPartLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPartLevelRequest.ProtoReflect.Descriptor instead.
func (*ProfessionPartLevelRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{151}
}

func (x *ProfessionPartLevelRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPartLevelRequest) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPartLevelRequest) GetPartType() uint32 {
	if x != nil {
		return x.PartType
	}
	return 0
}

func (x *ProfessionPartLevelRequest) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 职业部位升级返回
type ProfessionPartLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	PartType   uint32   `protobuf:"varint,3,opt,name=PartType,proto3" json:"PartType,omitempty"` // 部位类型
	CurLevel   uint32   `protobuf:"varint,4,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 当前等级
}

func (x *ProfessionPartLevelResponse) Reset() {
	*x = ProfessionPartLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPartLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPartLevelResponse) ProtoMessage() {}

func (x *ProfessionPartLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPartLevelResponse.ProtoReflect.Descriptor instead.
func (*ProfessionPartLevelResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{152}
}

func (x *ProfessionPartLevelResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPartLevelResponse) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPartLevelResponse) GetPartType() uint32 {
	if x != nil {
		return x.PartType
	}
	return 0
}

func (x *ProfessionPartLevelResponse) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 职业部位一键升级请求
type ProfessionPartOnekeyLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
}

func (x *ProfessionPartOnekeyLevelRequest) Reset() {
	*x = ProfessionPartOnekeyLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPartOnekeyLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPartOnekeyLevelRequest) ProtoMessage() {}

func (x *ProfessionPartOnekeyLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPartOnekeyLevelRequest.ProtoReflect.Descriptor instead.
func (*ProfessionPartOnekeyLevelRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{153}
}

func (x *ProfessionPartOnekeyLevelRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPartOnekeyLevelRequest) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

// 职业部位一键升级返回
type ProfessionPartOnekeyLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket                      `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32                        `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	PartList   []*PBPlayerSystemProfPartInfo `protobuf:"bytes,3,rep,name=PartList,proto3" json:"PartList,omitempty"`  // 职业部位信息
}

func (x *ProfessionPartOnekeyLevelResponse) Reset() {
	*x = ProfessionPartOnekeyLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPartOnekeyLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPartOnekeyLevelResponse) ProtoMessage() {}

func (x *ProfessionPartOnekeyLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPartOnekeyLevelResponse.ProtoReflect.Descriptor instead.
func (*ProfessionPartOnekeyLevelResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{154}
}

func (x *ProfessionPartOnekeyLevelResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPartOnekeyLevelResponse) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPartOnekeyLevelResponse) GetPartList() []*PBPlayerSystemProfPartInfo {
	if x != nil {
		return x.PartList
	}
	return nil
}

// 职业装备穿戴请求
type ProfessionEquipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	PartType   uint32   `protobuf:"varint,3,opt,name=PartType,proto3" json:"PartType,omitempty"` // 部位类型
	Sn         uint32   `protobuf:"varint,4,opt,name=Sn,proto3" json:"Sn,omitempty"`             // 装备sn 0表示脱
}

func (x *ProfessionEquipRequest) Reset() {
	*x = ProfessionEquipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionEquipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionEquipRequest) ProtoMessage() {}

func (x *ProfessionEquipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionEquipRequest.ProtoReflect.Descriptor instead.
func (*ProfessionEquipRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{155}
}

func (x *ProfessionEquipRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionEquipRequest) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionEquipRequest) GetPartType() uint32 {
	if x != nil {
		return x.PartType
	}
	return 0
}

func (x *ProfessionEquipRequest) GetSn() uint32 {
	if x != nil {
		return x.Sn
	}
	return 0
}

// 职业装备穿戴返回
type ProfessionEquipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	PartType   uint32   `protobuf:"varint,3,opt,name=PartType,proto3" json:"PartType,omitempty"` // 部位类型
	Sn         uint32   `protobuf:"varint,4,opt,name=Sn,proto3" json:"Sn,omitempty"`             // 当前部位ID
}

func (x *ProfessionEquipResponse) Reset() {
	*x = ProfessionEquipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionEquipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionEquipResponse) ProtoMessage() {}

func (x *ProfessionEquipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionEquipResponse.ProtoReflect.Descriptor instead.
func (*ProfessionEquipResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{156}
}

func (x *ProfessionEquipResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionEquipResponse) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionEquipResponse) GetPartType() uint32 {
	if x != nil {
		return x.PartType
	}
	return 0
}

func (x *ProfessionEquipResponse) GetSn() uint32 {
	if x != nil {
		return x.Sn
	}
	return 0
}

// 职业装备一键脱装备请求
type ProfessionOnekeyUnEquipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
}

func (x *ProfessionOnekeyUnEquipRequest) Reset() {
	*x = ProfessionOnekeyUnEquipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionOnekeyUnEquipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionOnekeyUnEquipRequest) ProtoMessage() {}

func (x *ProfessionOnekeyUnEquipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionOnekeyUnEquipRequest.ProtoReflect.Descriptor instead.
func (*ProfessionOnekeyUnEquipRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{157}
}

func (x *ProfessionOnekeyUnEquipRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionOnekeyUnEquipRequest) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

// 职业装备一键脱穿戴返回
type ProfessionOnekeyUnEquipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead  *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType    uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"`              // 职业类型
	EquipSnList []uint32 `protobuf:"varint,3,rep,packed,name=EquipSnList,proto3" json:"EquipSnList,omitempty"` // 装备列表
}

func (x *ProfessionOnekeyUnEquipResponse) Reset() {
	*x = ProfessionOnekeyUnEquipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionOnekeyUnEquipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionOnekeyUnEquipResponse) ProtoMessage() {}

func (x *ProfessionOnekeyUnEquipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionOnekeyUnEquipResponse.ProtoReflect.Descriptor instead.
func (*ProfessionOnekeyUnEquipResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{158}
}

func (x *ProfessionOnekeyUnEquipResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionOnekeyUnEquipResponse) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionOnekeyUnEquipResponse) GetEquipSnList() []uint32 {
	if x != nil {
		return x.EquipSnList
	}
	return nil
}

// 职业部位精炼请求
type ProfessionPartRefineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	PartType   uint32   `protobuf:"varint,3,opt,name=PartType,proto3" json:"PartType,omitempty"` // 部位类型
	CurLevel   uint32   `protobuf:"varint,4,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 当前等级
}

func (x *ProfessionPartRefineRequest) Reset() {
	*x = ProfessionPartRefineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPartRefineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPartRefineRequest) ProtoMessage() {}

func (x *ProfessionPartRefineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPartRefineRequest.ProtoReflect.Descriptor instead.
func (*ProfessionPartRefineRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{159}
}

func (x *ProfessionPartRefineRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPartRefineRequest) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPartRefineRequest) GetPartType() uint32 {
	if x != nil {
		return x.PartType
	}
	return 0
}

func (x *ProfessionPartRefineRequest) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 职业部位精炼返回
type ProfessionPartRefineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	PartType   uint32   `protobuf:"varint,3,opt,name=PartType,proto3" json:"PartType,omitempty"` // 部位类型
	CurLevel   uint32   `protobuf:"varint,4,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 当前等级
}

func (x *ProfessionPartRefineResponse) Reset() {
	*x = ProfessionPartRefineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPartRefineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPartRefineResponse) ProtoMessage() {}

func (x *ProfessionPartRefineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPartRefineResponse.ProtoReflect.Descriptor instead.
func (*ProfessionPartRefineResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{160}
}

func (x *ProfessionPartRefineResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPartRefineResponse) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPartRefineResponse) GetPartType() uint32 {
	if x != nil {
		return x.PartType
	}
	return 0
}

func (x *ProfessionPartRefineResponse) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 职业部位一键精炼请求
type ProfessionPartOnekeyRefineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
}

func (x *ProfessionPartOnekeyRefineRequest) Reset() {
	*x = ProfessionPartOnekeyRefineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPartOnekeyRefineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPartOnekeyRefineRequest) ProtoMessage() {}

func (x *ProfessionPartOnekeyRefineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPartOnekeyRefineRequest.ProtoReflect.Descriptor instead.
func (*ProfessionPartOnekeyRefineRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{161}
}

func (x *ProfessionPartOnekeyRefineRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPartOnekeyRefineRequest) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

// 职业部位一键精炼返回
type ProfessionPartOnekeyRefineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket                      `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32                        `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	PartList   []*PBPlayerSystemProfPartInfo `protobuf:"bytes,3,rep,name=PartList,proto3" json:"PartList,omitempty"`  // 职业部位信息
}

func (x *ProfessionPartOnekeyRefineResponse) Reset() {
	*x = ProfessionPartOnekeyRefineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPartOnekeyRefineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPartOnekeyRefineResponse) ProtoMessage() {}

func (x *ProfessionPartOnekeyRefineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPartOnekeyRefineResponse.ProtoReflect.Descriptor instead.
func (*ProfessionPartOnekeyRefineResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{162}
}

func (x *ProfessionPartOnekeyRefineResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPartOnekeyRefineResponse) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPartOnekeyRefineResponse) GetPartList() []*PBPlayerSystemProfPartInfo {
	if x != nil {
		return x.PartList
	}
	return nil
}

// 职业部位精炼突破请求
type ProfessionPartRefineTupoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	PartType   uint32   `protobuf:"varint,3,opt,name=PartType,proto3" json:"PartType,omitempty"` // 部位类型
	CurLevel   uint32   `protobuf:"varint,4,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 当前等级
}

func (x *ProfessionPartRefineTupoRequest) Reset() {
	*x = ProfessionPartRefineTupoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPartRefineTupoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPartRefineTupoRequest) ProtoMessage() {}

func (x *ProfessionPartRefineTupoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPartRefineTupoRequest.ProtoReflect.Descriptor instead.
func (*ProfessionPartRefineTupoRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{163}
}

func (x *ProfessionPartRefineTupoRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPartRefineTupoRequest) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPartRefineTupoRequest) GetPartType() uint32 {
	if x != nil {
		return x.PartType
	}
	return 0
}

func (x *ProfessionPartRefineTupoRequest) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 职业部位精炼返回
type ProfessionPartRefineTupoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	PartType   uint32   `protobuf:"varint,3,opt,name=PartType,proto3" json:"PartType,omitempty"` // 部位类型
	CurLevel   uint32   `protobuf:"varint,4,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 当前等级
}

func (x *ProfessionPartRefineTupoResponse) Reset() {
	*x = ProfessionPartRefineTupoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPartRefineTupoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPartRefineTupoResponse) ProtoMessage() {}

func (x *ProfessionPartRefineTupoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPartRefineTupoResponse.ProtoReflect.Descriptor instead.
func (*ProfessionPartRefineTupoResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{164}
}

func (x *ProfessionPartRefineTupoResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPartRefineTupoResponse) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPartRefineTupoResponse) GetPartType() uint32 {
	if x != nil {
		return x.PartType
	}
	return 0
}

func (x *ProfessionPartRefineTupoResponse) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 职业部位重置请求
type ProfessionPartResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32   `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	PartType   uint32   `protobuf:"varint,3,opt,name=PartType,proto3" json:"PartType,omitempty"` // 部位类型 999表示任意
}

func (x *ProfessionPartResetRequest) Reset() {
	*x = ProfessionPartResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPartResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPartResetRequest) ProtoMessage() {}

func (x *ProfessionPartResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPartResetRequest.ProtoReflect.Descriptor instead.
func (*ProfessionPartResetRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{165}
}

func (x *ProfessionPartResetRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPartResetRequest) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPartResetRequest) GetPartType() uint32 {
	if x != nil {
		return x.PartType
	}
	return 0
}

// 职业部位重置返回
type ProfessionPartResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket                      `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ProfType   uint32                        `protobuf:"varint,2,opt,name=ProfType,proto3" json:"ProfType,omitempty"` // 职业类型
	PartList   []*PBPlayerSystemProfPartInfo `protobuf:"bytes,3,rep,name=PartList,proto3" json:"PartList,omitempty"`  // 职业装备信息
}

func (x *ProfessionPartResetResponse) Reset() {
	*x = ProfessionPartResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfessionPartResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfessionPartResetResponse) ProtoMessage() {}

func (x *ProfessionPartResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfessionPartResetResponse.ProtoReflect.Descriptor instead.
func (*ProfessionPartResetResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{166}
}

func (x *ProfessionPartResetResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ProfessionPartResetResponse) GetProfType() uint32 {
	if x != nil {
		return x.ProfType
	}
	return 0
}

func (x *ProfessionPartResetResponse) GetPartList() []*PBPlayerSystemProfPartInfo {
	if x != nil {
		return x.PartList
	}
	return nil
}

// 装备通知
type EquipmentNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket       `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Equipment  []*PBEquipment `protobuf:"bytes,2,rep,name=Equipment,proto3" json:"Equipment,omitempty"` // 装备数据
	IsHook     bool           `protobuf:"varint,3,opt,name=IsHook,proto3" json:"IsHook,omitempty"`      // 是否挂机背包
}

func (x *EquipmentNotify) Reset() {
	*x = EquipmentNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentNotify) ProtoMessage() {}

func (x *EquipmentNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentNotify.ProtoReflect.Descriptor instead.
func (*EquipmentNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{167}
}

func (x *EquipmentNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EquipmentNotify) GetEquipment() []*PBEquipment {
	if x != nil {
		return x.Equipment
	}
	return nil
}

func (x *EquipmentNotify) GetIsHook() bool {
	if x != nil {
		return x.IsHook
	}
	return false
}

// 装备分解积分通知
type EquipmentSplitScoreNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	SplitScore uint32   `protobuf:"varint,2,opt,name=SplitScore,proto3" json:"SplitScore,omitempty"` // 当前进度积分
}

func (x *EquipmentSplitScoreNotify) Reset() {
	*x = EquipmentSplitScoreNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentSplitScoreNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentSplitScoreNotify) ProtoMessage() {}

func (x *EquipmentSplitScoreNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentSplitScoreNotify.ProtoReflect.Descriptor instead.
func (*EquipmentSplitScoreNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{168}
}

func (x *EquipmentSplitScoreNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EquipmentSplitScoreNotify) GetSplitScore() uint32 {
	if x != nil {
		return x.SplitScore
	}
	return 0
}

// 装备分解请求
type EquipmentSplitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	SnList     []uint32 `protobuf:"varint,2,rep,packed,name=SnList,proto3" json:"SnList,omitempty"` // 装备sn列表
}

func (x *EquipmentSplitRequest) Reset() {
	*x = EquipmentSplitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentSplitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentSplitRequest) ProtoMessage() {}

func (x *EquipmentSplitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentSplitRequest.ProtoReflect.Descriptor instead.
func (*EquipmentSplitRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{169}
}

func (x *EquipmentSplitRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EquipmentSplitRequest) GetSnList() []uint32 {
	if x != nil {
		return x.SnList
	}
	return nil
}

// 装备分解返回
type EquipmentSplitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	SnList     []uint32 `protobuf:"varint,2,rep,packed,name=SnList,proto3" json:"SnList,omitempty"` // 装备sn列表
}

func (x *EquipmentSplitResponse) Reset() {
	*x = EquipmentSplitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentSplitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentSplitResponse) ProtoMessage() {}

func (x *EquipmentSplitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentSplitResponse.ProtoReflect.Descriptor instead.
func (*EquipmentSplitResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{170}
}

func (x *EquipmentSplitResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EquipmentSplitResponse) GetSnList() []uint32 {
	if x != nil {
		return x.SnList
	}
	return nil
}

// 装备格子购买请求
type EquipmentBuyPosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead     *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	CurPosBuyCount uint32   `protobuf:"varint,2,opt,name=CurPosBuyCount,proto3" json:"CurPosBuyCount,omitempty"` // 当前购买次数
}

func (x *EquipmentBuyPosRequest) Reset() {
	*x = EquipmentBuyPosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentBuyPosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentBuyPosRequest) ProtoMessage() {}

func (x *EquipmentBuyPosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentBuyPosRequest.ProtoReflect.Descriptor instead.
func (*EquipmentBuyPosRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{171}
}

func (x *EquipmentBuyPosRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EquipmentBuyPosRequest) GetCurPosBuyCount() uint32 {
	if x != nil {
		return x.CurPosBuyCount
	}
	return 0
}

// 装备格子购买返回
type EquipmentBuyPosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead  *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	PosBuyCount uint32   `protobuf:"varint,2,opt,name=PosBuyCount,proto3" json:"PosBuyCount,omitempty"` // 当前购买次数
}

func (x *EquipmentBuyPosResponse) Reset() {
	*x = EquipmentBuyPosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentBuyPosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentBuyPosResponse) ProtoMessage() {}

func (x *EquipmentBuyPosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentBuyPosResponse.ProtoReflect.Descriptor instead.
func (*EquipmentBuyPosResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{172}
}

func (x *EquipmentBuyPosResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EquipmentBuyPosResponse) GetPosBuyCount() uint32 {
	if x != nil {
		return x.PosBuyCount
	}
	return 0
}

// 装备自动分解请求
type EquipmentAutoSplitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead  *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	QualityList []uint32 `protobuf:"varint,2,rep,packed,name=QualityList,proto3" json:"QualityList,omitempty"` // 品质列表
}

func (x *EquipmentAutoSplitRequest) Reset() {
	*x = EquipmentAutoSplitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentAutoSplitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentAutoSplitRequest) ProtoMessage() {}

func (x *EquipmentAutoSplitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentAutoSplitRequest.ProtoReflect.Descriptor instead.
func (*EquipmentAutoSplitRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{173}
}

func (x *EquipmentAutoSplitRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EquipmentAutoSplitRequest) GetQualityList() []uint32 {
	if x != nil {
		return x.QualityList
	}
	return nil
}

// 装备自动分解返回
type EquipmentAutoSplitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead  *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	QualityList []uint32 `protobuf:"varint,2,rep,packed,name=QualityList,proto3" json:"QualityList,omitempty"` // 品质列表
}

func (x *EquipmentAutoSplitResponse) Reset() {
	*x = EquipmentAutoSplitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentAutoSplitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentAutoSplitResponse) ProtoMessage() {}

func (x *EquipmentAutoSplitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentAutoSplitResponse.ProtoReflect.Descriptor instead.
func (*EquipmentAutoSplitResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{174}
}

func (x *EquipmentAutoSplitResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EquipmentAutoSplitResponse) GetQualityList() []uint32 {
	if x != nil {
		return x.QualityList
	}
	return nil
}

// 装备锁定请求
type EquipmentLockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Sn         uint32   `protobuf:"varint,2,opt,name=Sn,proto3" json:"Sn,omitempty"`         // 装备Sn
	IsLock     bool     `protobuf:"varint,3,opt,name=IsLock,proto3" json:"IsLock,omitempty"` // 是否加锁
}

func (x *EquipmentLockRequest) Reset() {
	*x = EquipmentLockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentLockRequest) ProtoMessage() {}

func (x *EquipmentLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentLockRequest.ProtoReflect.Descriptor instead.
func (*EquipmentLockRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{175}
}

func (x *EquipmentLockRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EquipmentLockRequest) GetSn() uint32 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *EquipmentLockRequest) GetIsLock() bool {
	if x != nil {
		return x.IsLock
	}
	return false
}

// 装备锁定返回
type EquipmentLockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Sn         uint32   `protobuf:"varint,2,opt,name=Sn,proto3" json:"Sn,omitempty"`         // 装备Sn
	IsLock     bool     `protobuf:"varint,3,opt,name=IsLock,proto3" json:"IsLock,omitempty"` // 是否加锁
}

func (x *EquipmentLockResponse) Reset() {
	*x = EquipmentLockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentLockResponse) ProtoMessage() {}

func (x *EquipmentLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentLockResponse.ProtoReflect.Descriptor instead.
func (*EquipmentLockResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{176}
}

func (x *EquipmentLockResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *EquipmentLockResponse) GetSn() uint32 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *EquipmentLockResponse) GetIsLock() bool {
	if x != nil {
		return x.IsLock
	}
	return false
}

// 挂机装备领取请求
type HookEquipmentAwardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Sn         uint32   `protobuf:"varint,2,opt,name=Sn,proto3" json:"Sn,omitempty"` // 装备Sn
}

func (x *HookEquipmentAwardRequest) Reset() {
	*x = HookEquipmentAwardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookEquipmentAwardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookEquipmentAwardRequest) ProtoMessage() {}

func (x *HookEquipmentAwardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookEquipmentAwardRequest.ProtoReflect.Descriptor instead.
func (*HookEquipmentAwardRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{177}
}

func (x *HookEquipmentAwardRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HookEquipmentAwardRequest) GetSn() uint32 {
	if x != nil {
		return x.Sn
	}
	return 0
}

// 挂机装备领取返回
type HookEquipmentAwardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Sn         uint32   `protobuf:"varint,2,opt,name=Sn,proto3" json:"Sn,omitempty"` // 装备Sn
}

func (x *HookEquipmentAwardResponse) Reset() {
	*x = HookEquipmentAwardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookEquipmentAwardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookEquipmentAwardResponse) ProtoMessage() {}

func (x *HookEquipmentAwardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookEquipmentAwardResponse.ProtoReflect.Descriptor instead.
func (*HookEquipmentAwardResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{178}
}

func (x *HookEquipmentAwardResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HookEquipmentAwardResponse) GetSn() uint32 {
	if x != nil {
		return x.Sn
	}
	return 0
}

// 英雄基础信息通知
type HeroNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Info       []*PBHero `protobuf:"bytes,2,rep,name=Info,proto3" json:"Info,omitempty"` // 英雄数据
}

func (x *HeroNotify) Reset() {
	*x = HeroNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroNotify) ProtoMessage() {}

func (x *HeroNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroNotify.ProtoReflect.Descriptor instead.
func (*HeroNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{179}
}

func (x *HeroNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroNotify) GetInfo() []*PBHero {
	if x != nil {
		return x.Info
	}
	return nil
}

// 英雄新消息通知
type HeroNewStarNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Info       []*PBHero `protobuf:"bytes,2,rep,name=Info,proto3" json:"Info,omitempty"` // 英雄数据
}

func (x *HeroNewStarNotify) Reset() {
	*x = HeroNewStarNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroNewStarNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroNewStarNotify) ProtoMessage() {}

func (x *HeroNewStarNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroNewStarNotify.ProtoReflect.Descriptor instead.
func (*HeroNewStarNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{180}
}

func (x *HeroNewStarNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroNewStarNotify) GetInfo() []*PBHero {
	if x != nil {
		return x.Info
	}
	return nil
}

// 战斗力通知
type HeroFightPowerNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	FightPower uint32   `protobuf:"varint,2,opt,name=FightPower,proto3" json:"FightPower,omitempty"` // 战斗力
}

func (x *HeroFightPowerNotify) Reset() {
	*x = HeroFightPowerNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroFightPowerNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroFightPowerNotify) ProtoMessage() {}

func (x *HeroFightPowerNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroFightPowerNotify.ProtoReflect.Descriptor instead.
func (*HeroFightPowerNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{181}
}

func (x *HeroFightPowerNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroFightPowerNotify) GetFightPower() uint32 {
	if x != nil {
		return x.FightPower
	}
	return 0
}

// 英雄升星请求
type HeroUpStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Sn         uint32   `protobuf:"varint,2,opt,name=Sn,proto3" json:"Sn,omitempty"`                      // 升星的sn
	UseSnList  []uint32 `protobuf:"varint,3,rep,packed,name=UseSnList,proto3" json:"UseSnList,omitempty"` // 消耗的英雄
}

func (x *HeroUpStarRequest) Reset() {
	*x = HeroUpStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroUpStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroUpStarRequest) ProtoMessage() {}

func (x *HeroUpStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroUpStarRequest.ProtoReflect.Descriptor instead.
func (*HeroUpStarRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{182}
}

func (x *HeroUpStarRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroUpStarRequest) GetSn() uint32 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *HeroUpStarRequest) GetUseSnList() []uint32 {
	if x != nil {
		return x.UseSnList
	}
	return nil
}

// 英雄升星返回
type HeroUpStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Sn         uint32   `protobuf:"varint,2,opt,name=Sn,proto3" json:"Sn,omitempty"`                      // 升星的sn
	Star       uint32   `protobuf:"varint,3,opt,name=Star,proto3" json:"Star,omitempty"`                  // 星级
	UseSnList  []uint32 `protobuf:"varint,4,rep,packed,name=UseSnList,proto3" json:"UseSnList,omitempty"` // 消耗的英雄
}

func (x *HeroUpStarResponse) Reset() {
	*x = HeroUpStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroUpStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroUpStarResponse) ProtoMessage() {}

func (x *HeroUpStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroUpStarResponse.ProtoReflect.Descriptor instead.
func (*HeroUpStarResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{183}
}

func (x *HeroUpStarResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroUpStarResponse) GetSn() uint32 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *HeroUpStarResponse) GetStar() uint32 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *HeroUpStarResponse) GetUseSnList() []uint32 {
	if x != nil {
		return x.UseSnList
	}
	return nil
}

// 英雄自动升星请求
type HeroAutoUpStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *HeroAutoUpStarRequest) Reset() {
	*x = HeroAutoUpStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroAutoUpStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroAutoUpStarRequest) ProtoMessage() {}

func (x *HeroAutoUpStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroAutoUpStarRequest.ProtoReflect.Descriptor instead.
func (*HeroAutoUpStarRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{184}
}

func (x *HeroAutoUpStarRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 英雄自动升星返回
type HeroAutoUpStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	HeroList   []*PBU32U32 `protobuf:"bytes,2,rep,name=HeroList,proto3" json:"HeroList,omitempty"`           // 升星的英雄列表 key:sn value:星级
	DelSnList  []uint32    `protobuf:"varint,3,rep,packed,name=DelSnList,proto3" json:"DelSnList,omitempty"` // 消耗的英雄
}

func (x *HeroAutoUpStarResponse) Reset() {
	*x = HeroAutoUpStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroAutoUpStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroAutoUpStarResponse) ProtoMessage() {}

func (x *HeroAutoUpStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroAutoUpStarResponse.ProtoReflect.Descriptor instead.
func (*HeroAutoUpStarResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{185}
}

func (x *HeroAutoUpStarResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroAutoUpStarResponse) GetHeroList() []*PBU32U32 {
	if x != nil {
		return x.HeroList
	}
	return nil
}

func (x *HeroAutoUpStarResponse) GetDelSnList() []uint32 {
	if x != nil {
		return x.DelSnList
	}
	return nil
}

// 英雄觉醒请求
type HeroAwakenLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Sn         uint32   `protobuf:"varint,2,opt,name=Sn,proto3" json:"Sn,omitempty"`             // 觉醒的sn
	CurLevel   uint32   `protobuf:"varint,3,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 当前等级
}

func (x *HeroAwakenLevelRequest) Reset() {
	*x = HeroAwakenLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroAwakenLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroAwakenLevelRequest) ProtoMessage() {}

func (x *HeroAwakenLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroAwakenLevelRequest.ProtoReflect.Descriptor instead.
func (*HeroAwakenLevelRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{186}
}

func (x *HeroAwakenLevelRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroAwakenLevelRequest) GetSn() uint32 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *HeroAwakenLevelRequest) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 英雄觉醒返回
type HeroAwakenLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Sn         uint32   `protobuf:"varint,2,opt,name=Sn,proto3" json:"Sn,omitempty"`             // 觉醒的sn
	CurLevel   uint32   `protobuf:"varint,3,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 当前等级
}

func (x *HeroAwakenLevelResponse) Reset() {
	*x = HeroAwakenLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroAwakenLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroAwakenLevelResponse) ProtoMessage() {}

func (x *HeroAwakenLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroAwakenLevelResponse.ProtoReflect.Descriptor instead.
func (*HeroAwakenLevelResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{187}
}

func (x *HeroAwakenLevelResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroAwakenLevelResponse) GetSn() uint32 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *HeroAwakenLevelResponse) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 英雄上阵请求
type HeroGameHeroListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket        `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Team       *PBHeroTeamList `protobuf:"bytes,2,opt,name=Team,proto3" json:"Team,omitempty"` // 上阵列表
}

func (x *HeroGameHeroListRequest) Reset() {
	*x = HeroGameHeroListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroGameHeroListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroGameHeroListRequest) ProtoMessage() {}

func (x *HeroGameHeroListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroGameHeroListRequest.ProtoReflect.Descriptor instead.
func (*HeroGameHeroListRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{188}
}

func (x *HeroGameHeroListRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroGameHeroListRequest) GetTeam() *PBHeroTeamList {
	if x != nil {
		return x.Team
	}
	return nil
}

// 英雄上阵返回
type HeroGameHeroListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket        `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Team       *PBHeroTeamList `protobuf:"bytes,2,opt,name=Team,proto3" json:"Team,omitempty"` // 上阵列表
}

func (x *HeroGameHeroListResponse) Reset() {
	*x = HeroGameHeroListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroGameHeroListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroGameHeroListResponse) ProtoMessage() {}

func (x *HeroGameHeroListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroGameHeroListResponse.ProtoReflect.Descriptor instead.
func (*HeroGameHeroListResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{189}
}

func (x *HeroGameHeroListResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroGameHeroListResponse) GetTeam() *PBHeroTeamList {
	if x != nil {
		return x.Team
	}
	return nil
}

// 英雄上阵通知
type HeroGameHeroListNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket        `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Team       *PBHeroTeamList `protobuf:"bytes,2,opt,name=Team,proto3" json:"Team,omitempty"` // 上阵列表
}

func (x *HeroGameHeroListNotify) Reset() {
	*x = HeroGameHeroListNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroGameHeroListNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroGameHeroListNotify) ProtoMessage() {}

func (x *HeroGameHeroListNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroGameHeroListNotify.ProtoReflect.Descriptor instead.
func (*HeroGameHeroListNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{190}
}

func (x *HeroGameHeroListNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroGameHeroListNotify) GetTeam() *PBHeroTeamList {
	if x != nil {
		return x.Team
	}
	return nil
}

// 英雄重生请求
type HeroRebirthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Sn         uint32   `protobuf:"varint,2,opt,name=Sn,proto3" json:"Sn,omitempty"` // 英雄sn
}

func (x *HeroRebirthRequest) Reset() {
	*x = HeroRebirthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroRebirthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroRebirthRequest) ProtoMessage() {}

func (x *HeroRebirthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroRebirthRequest.ProtoReflect.Descriptor instead.
func (*HeroRebirthRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{191}
}

func (x *HeroRebirthRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroRebirthRequest) GetSn() uint32 {
	if x != nil {
		return x.Sn
	}
	return 0
}

// 英雄重生返回
type HeroRebirthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Sn         uint32   `protobuf:"varint,2,opt,name=Sn,proto3" json:"Sn,omitempty"`     // 升星的sn
	Star       uint32   `protobuf:"varint,3,opt,name=Star,proto3" json:"Star,omitempty"` // 星级
}

func (x *HeroRebirthResponse) Reset() {
	*x = HeroRebirthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroRebirthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroRebirthResponse) ProtoMessage() {}

func (x *HeroRebirthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroRebirthResponse.ProtoReflect.Descriptor instead.
func (*HeroRebirthResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{192}
}

func (x *HeroRebirthResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroRebirthResponse) GetSn() uint32 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *HeroRebirthResponse) GetStar() uint32 {
	if x != nil {
		return x.Star
	}
	return 0
}

// 英雄图鉴激活通知
type HeroBookNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	HeroBook   *PBHeroBook `protobuf:"bytes,2,opt,name=HeroBook,proto3" json:"HeroBook,omitempty"` // 英雄图鉴 0星表示需要激活
}

func (x *HeroBookNotify) Reset() {
	*x = HeroBookNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroBookNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroBookNotify) ProtoMessage() {}

func (x *HeroBookNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroBookNotify.ProtoReflect.Descriptor instead.
func (*HeroBookNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{193}
}

func (x *HeroBookNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroBookNotify) GetHeroBook() *PBHeroBook {
	if x != nil {
		return x.HeroBook
	}
	return nil
}

// 英雄图鉴激活请求
type HeroBookActiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	HeroId     uint32   `protobuf:"varint,2,opt,name=HeroId,proto3" json:"HeroId,omitempty"` // 英雄ID
}

func (x *HeroBookActiveRequest) Reset() {
	*x = HeroBookActiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroBookActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroBookActiveRequest) ProtoMessage() {}

func (x *HeroBookActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroBookActiveRequest.ProtoReflect.Descriptor instead.
func (*HeroBookActiveRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{194}
}

func (x *HeroBookActiveRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroBookActiveRequest) GetHeroId() uint32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

// 英雄图鉴激活返回
type HeroBookActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	HeroBook   *PBHeroBook `protobuf:"bytes,2,opt,name=HeroBook,proto3" json:"HeroBook,omitempty"` // 英雄图鉴
}

func (x *HeroBookActiveResponse) Reset() {
	*x = HeroBookActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroBookActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroBookActiveResponse) ProtoMessage() {}

func (x *HeroBookActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroBookActiveResponse.ProtoReflect.Descriptor instead.
func (*HeroBookActiveResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{195}
}

func (x *HeroBookActiveResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroBookActiveResponse) GetHeroBook() *PBHeroBook {
	if x != nil {
		return x.HeroBook
	}
	return nil
}

// 英雄图鉴升星请求
type HeroBookUpStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	HeroId     uint32   `protobuf:"varint,2,opt,name=HeroId,proto3" json:"HeroId,omitempty"` // 英雄ID
}

func (x *HeroBookUpStarRequest) Reset() {
	*x = HeroBookUpStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroBookUpStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroBookUpStarRequest) ProtoMessage() {}

func (x *HeroBookUpStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroBookUpStarRequest.ProtoReflect.Descriptor instead.
func (*HeroBookUpStarRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{196}
}

func (x *HeroBookUpStarRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroBookUpStarRequest) GetHeroId() uint32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

// 英雄图鉴升星返回
type HeroBookUpStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	HeroBook   *PBHeroBook `protobuf:"bytes,2,opt,name=HeroBook,proto3" json:"HeroBook,omitempty"` // 英雄图鉴
}

func (x *HeroBookUpStarResponse) Reset() {
	*x = HeroBookUpStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroBookUpStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroBookUpStarResponse) ProtoMessage() {}

func (x *HeroBookUpStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroBookUpStarResponse.ProtoReflect.Descriptor instead.
func (*HeroBookUpStarResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{197}
}

func (x *HeroBookUpStarResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HeroBookUpStarResponse) GetHeroBook() *PBHeroBook {
	if x != nil {
		return x.HeroBook
	}
	return nil
}

// 系统属性通知
type SystemPropNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead     *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	SyetemPropType EmSyetemPropType `protobuf:"varint,2,opt,name=SyetemPropType,proto3,enum=common.EmSyetemPropType" json:"SyetemPropType,omitempty"` // 系统类型
	PropInfoList   []*PBPropInfo    `protobuf:"bytes,3,rep,name=PropInfoList,proto3" json:"PropInfoList,omitempty"`                                   // 属性数据
}

func (x *SystemPropNotify) Reset() {
	*x = SystemPropNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemPropNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemPropNotify) ProtoMessage() {}

func (x *SystemPropNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemPropNotify.ProtoReflect.Descriptor instead.
func (*SystemPropNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{198}
}

func (x *SystemPropNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *SystemPropNotify) GetSyetemPropType() EmSyetemPropType {
	if x != nil {
		return x.SyetemPropType
	}
	return EmSyetemPropType_SPT_HeroBook
}

func (x *SystemPropNotify) GetPropInfoList() []*PBPropInfo {
	if x != nil {
		return x.PropInfoList
	}
	return nil
}

// 关卡同步
type BattleMapNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BattleType EmBattleType     `protobuf:"varint,2,opt,name=BattleType,proto3,enum=common.EmBattleType" json:"BattleType,omitempty"` // 战斗类型 1地图，2爬塔，3挂机
	MapInfo    *PBBattleMapInfo `protobuf:"bytes,3,opt,name=MapInfo,proto3" json:"MapInfo,omitempty"`                                 // 战场信息
}

func (x *BattleMapNotify) Reset() {
	*x = BattleMapNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleMapNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleMapNotify) ProtoMessage() {}

func (x *BattleMapNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleMapNotify.ProtoReflect.Descriptor instead.
func (*BattleMapNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{199}
}

func (x *BattleMapNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleMapNotify) GetBattleType() EmBattleType {
	if x != nil {
		return x.BattleType
	}
	return EmBattleType_EBT_None
}

func (x *BattleMapNotify) GetMapInfo() *PBBattleMapInfo {
	if x != nil {
		return x.MapInfo
	}
	return nil
}

// 挑战开始请求
type BattleBeginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket     `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BattleType EmBattleType `protobuf:"varint,2,opt,name=BattleType,proto3,enum=common.EmBattleType" json:"BattleType,omitempty"` // 战斗类型 1地图，2爬塔，3挂机
	MapId      uint32       `protobuf:"varint,3,opt,name=MapId,proto3" json:"MapId,omitempty"`                                    // 地图ID
	StageId    uint32       `protobuf:"varint,4,opt,name=StageId,proto3" json:"StageId,omitempty"`                                // 关卡ID
	Params     []uint32     `protobuf:"varint,5,rep,packed,name=Params,proto3" json:"Params,omitempty"`                           // 参数
}

func (x *BattleBeginRequest) Reset() {
	*x = BattleBeginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleBeginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleBeginRequest) ProtoMessage() {}

func (x *BattleBeginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleBeginRequest.ProtoReflect.Descriptor instead.
func (*BattleBeginRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{200}
}

func (x *BattleBeginRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleBeginRequest) GetBattleType() EmBattleType {
	if x != nil {
		return x.BattleType
	}
	return EmBattleType_EBT_None
}

func (x *BattleBeginRequest) GetMapId() uint32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *BattleBeginRequest) GetStageId() uint32 {
	if x != nil {
		return x.StageId
	}
	return 0
}

func (x *BattleBeginRequest) GetParams() []uint32 {
	if x != nil {
		return x.Params
	}
	return nil
}

// 挑战开始返回
type BattleBeginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket     `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BattleType EmBattleType `protobuf:"varint,2,opt,name=BattleType,proto3,enum=common.EmBattleType" json:"BattleType,omitempty"` // 战斗类型 1地图，2爬塔，3挂机
	MapId      uint32       `protobuf:"varint,3,opt,name=MapId,proto3" json:"MapId,omitempty"`                                    // 地图ID
	StageId    uint32       `protobuf:"varint,4,opt,name=StageId,proto3" json:"StageId,omitempty"`                                // 关卡ID
	FightCount uint32       `protobuf:"varint,5,opt,name=FightCount,proto3" json:"FightCount,omitempty"`                          // 挑战次数
	Params     []uint32     `protobuf:"varint,6,rep,packed,name=Params,proto3" json:"Params,omitempty"`                           // 参数
}

func (x *BattleBeginResponse) Reset() {
	*x = BattleBeginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleBeginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleBeginResponse) ProtoMessage() {}

func (x *BattleBeginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleBeginResponse.ProtoReflect.Descriptor instead.
func (*BattleBeginResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{201}
}

func (x *BattleBeginResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleBeginResponse) GetBattleType() EmBattleType {
	if x != nil {
		return x.BattleType
	}
	return EmBattleType_EBT_None
}

func (x *BattleBeginResponse) GetMapId() uint32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *BattleBeginResponse) GetStageId() uint32 {
	if x != nil {
		return x.StageId
	}
	return 0
}

func (x *BattleBeginResponse) GetFightCount() uint32 {
	if x != nil {
		return x.FightCount
	}
	return 0
}

func (x *BattleBeginResponse) GetParams() []uint32 {
	if x != nil {
		return x.Params
	}
	return nil
}

// 挑战结束请求
type BattleEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Battle     *BattleInfo `protobuf:"bytes,2,opt,name=Battle,proto3" json:"Battle,omitempty"`
}

func (x *BattleEndRequest) Reset() {
	*x = BattleEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleEndRequest) ProtoMessage() {}

func (x *BattleEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleEndRequest.ProtoReflect.Descriptor instead.
func (*BattleEndRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{202}
}

func (x *BattleEndRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleEndRequest) GetBattle() *BattleInfo {
	if x != nil {
		return x.Battle
	}
	return nil
}

// 挑战结束返回
type BattleEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BattleType EmBattleType     `protobuf:"varint,2,opt,name=BattleType,proto3,enum=common.EmBattleType" json:"BattleType,omitempty"` // 战斗类型 1地图，2爬塔，3挂机
	MapId      uint32           `protobuf:"varint,3,opt,name=MapId,proto3" json:"MapId,omitempty"`                                    // 地图ID
	StageId    uint32           `protobuf:"varint,4,opt,name=StageId,proto3" json:"StageId,omitempty"`                                // 关卡ID
	ItemInfo   []*PBAddItemData `protobuf:"bytes,5,rep,name=ItemInfo,proto3" json:"ItemInfo,omitempty"`                               // 道具信息
}

func (x *BattleEndResponse) Reset() {
	*x = BattleEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleEndResponse) ProtoMessage() {}

func (x *BattleEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleEndResponse.ProtoReflect.Descriptor instead.
func (*BattleEndResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{203}
}

func (x *BattleEndResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleEndResponse) GetBattleType() EmBattleType {
	if x != nil {
		return x.BattleType
	}
	return EmBattleType_EBT_None
}

func (x *BattleEndResponse) GetMapId() uint32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *BattleEndResponse) GetStageId() uint32 {
	if x != nil {
		return x.StageId
	}
	return 0
}

func (x *BattleEndResponse) GetItemInfo() []*PBAddItemData {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

// 挑战记录请求
type BattleRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket     `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BattleType EmBattleType `protobuf:"varint,2,opt,name=BattleType,proto3,enum=common.EmBattleType" json:"BattleType,omitempty"` // 战斗类型 1地图，2爬塔，3挂机
	MapId      uint32       `protobuf:"varint,3,opt,name=MapId,proto3" json:"MapId,omitempty"`                                    // 地图ID
	StageId    uint32       `protobuf:"varint,4,opt,name=StageId,proto3" json:"StageId,omitempty"`                                // 关卡ID
}

func (x *BattleRecordRequest) Reset() {
	*x = BattleRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleRecordRequest) ProtoMessage() {}

func (x *BattleRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleRecordRequest.ProtoReflect.Descriptor instead.
func (*BattleRecordRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{204}
}

func (x *BattleRecordRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleRecordRequest) GetBattleType() EmBattleType {
	if x != nil {
		return x.BattleType
	}
	return EmBattleType_EBT_None
}

func (x *BattleRecordRequest) GetMapId() uint32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *BattleRecordRequest) GetStageId() uint32 {
	if x != nil {
		return x.StageId
	}
	return 0
}

// 挑战记录返回
type BattleRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket              `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BattleType EmBattleType          `protobuf:"varint,2,opt,name=BattleType,proto3,enum=common.EmBattleType" json:"BattleType,omitempty"` // 战斗类型 1地图，2爬塔，3挂机
	MapId      uint32                `protobuf:"varint,3,opt,name=MapId,proto3" json:"MapId,omitempty"`                                    // 地图ID
	StageId    uint32                `protobuf:"varint,4,opt,name=StageId,proto3" json:"StageId,omitempty"`                                // 关卡ID
	RecordList []*PBPlayerBattleData `protobuf:"bytes,5,rep,name=RecordList,proto3" json:"RecordList,omitempty"`                           // 记录数据
}

func (x *BattleRecordResponse) Reset() {
	*x = BattleRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleRecordResponse) ProtoMessage() {}

func (x *BattleRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleRecordResponse.ProtoReflect.Descriptor instead.
func (*BattleRecordResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{205}
}

func (x *BattleRecordResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleRecordResponse) GetBattleType() EmBattleType {
	if x != nil {
		return x.BattleType
	}
	return EmBattleType_EBT_None
}

func (x *BattleRecordResponse) GetMapId() uint32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *BattleRecordResponse) GetStageId() uint32 {
	if x != nil {
		return x.StageId
	}
	return 0
}

func (x *BattleRecordResponse) GetRecordList() []*PBPlayerBattleData {
	if x != nil {
		return x.RecordList
	}
	return nil
}

// 领取精英关卡奖励请求
type NormalBattlePrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	MapId      uint32   `protobuf:"varint,2,opt,name=MapId,proto3" json:"MapId,omitempty"`           // 地图ID
	StageId    uint32   `protobuf:"varint,3,opt,name=StageId,proto3" json:"StageId,omitempty"`       // 关卡ID
	PrizeStage uint32   `protobuf:"varint,4,opt,name=PrizeStage,proto3" json:"PrizeStage,omitempty"` // 阶段ID
}

func (x *NormalBattlePrizeRequest) Reset() {
	*x = NormalBattlePrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NormalBattlePrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalBattlePrizeRequest) ProtoMessage() {}

func (x *NormalBattlePrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalBattlePrizeRequest.ProtoReflect.Descriptor instead.
func (*NormalBattlePrizeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{206}
}

func (x *NormalBattlePrizeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *NormalBattlePrizeRequest) GetMapId() uint32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *NormalBattlePrizeRequest) GetStageId() uint32 {
	if x != nil {
		return x.StageId
	}
	return 0
}

func (x *NormalBattlePrizeRequest) GetPrizeStage() uint32 {
	if x != nil {
		return x.PrizeStage
	}
	return 0
}

// 领取精英关卡奖励返回
type NormalBattlePrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead   *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	PrizeMapId   uint32   `protobuf:"varint,2,opt,name=PrizeMapId,proto3" json:"PrizeMapId,omitempty"`        // 领取的地图ID
	PrizeStageId uint32   `protobuf:"varint,3,opt,name=PrizeStageId,proto3" json:"PrizeStageId,omitempty"`    // 领取的关卡ID
	PrizeStage   []uint32 `protobuf:"varint,4,rep,packed,name=PrizeStage,proto3" json:"PrizeStage,omitempty"` // 领取的奖励进度
}

func (x *NormalBattlePrizeResponse) Reset() {
	*x = NormalBattlePrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NormalBattlePrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalBattlePrizeResponse) ProtoMessage() {}

func (x *NormalBattlePrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalBattlePrizeResponse.ProtoReflect.Descriptor instead.
func (*NormalBattlePrizeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{207}
}

func (x *NormalBattlePrizeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *NormalBattlePrizeResponse) GetPrizeMapId() uint32 {
	if x != nil {
		return x.PrizeMapId
	}
	return 0
}

func (x *NormalBattlePrizeResponse) GetPrizeStageId() uint32 {
	if x != nil {
		return x.PrizeStageId
	}
	return 0
}

func (x *NormalBattlePrizeResponse) GetPrizeStage() []uint32 {
	if x != nil {
		return x.PrizeStage
	}
	return nil
}

// 挂机自动推关设置请求
type HookBattleAutoMapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *HookBattleAutoMapRequest) Reset() {
	*x = HookBattleAutoMapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookBattleAutoMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookBattleAutoMapRequest) ProtoMessage() {}

func (x *HookBattleAutoMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookBattleAutoMapRequest.ProtoReflect.Descriptor instead.
func (*HookBattleAutoMapRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{208}
}

func (x *HookBattleAutoMapRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 挂机自动推关设置返回
type HookBattleAutoMapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	AutoMap    bool     `protobuf:"varint,2,opt,name=AutoMap,proto3" json:"AutoMap,omitempty"` // 是否自动推关
}

func (x *HookBattleAutoMapResponse) Reset() {
	*x = HookBattleAutoMapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookBattleAutoMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookBattleAutoMapResponse) ProtoMessage() {}

func (x *HookBattleAutoMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookBattleAutoMapResponse.ProtoReflect.Descriptor instead.
func (*HookBattleAutoMapResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{209}
}

func (x *HookBattleAutoMapResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HookBattleAutoMapResponse) GetAutoMap() bool {
	if x != nil {
		return x.AutoMap
	}
	return false
}

// 关卡复活请求
type BattleReliveNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket        `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Relive     *PBBattleRelive `protobuf:"bytes,2,opt,name=Relive,proto3" json:"Relive,omitempty"`
}

func (x *BattleReliveNotify) Reset() {
	*x = BattleReliveNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleReliveNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleReliveNotify) ProtoMessage() {}

func (x *BattleReliveNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleReliveNotify.ProtoReflect.Descriptor instead.
func (*BattleReliveNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{210}
}

func (x *BattleReliveNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleReliveNotify) GetRelive() *PBBattleRelive {
	if x != nil {
		return x.Relive
	}
	return nil
}

// 关卡复活请求
type BattleReliveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket     `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BattleType EmBattleType `protobuf:"varint,2,opt,name=BattleType,proto3,enum=common.EmBattleType" json:"BattleType,omitempty"` // 战斗类型 1地图，2爬塔，3挂机
	HeroId     uint32       `protobuf:"varint,3,opt,name=HeroId,proto3" json:"HeroId,omitempty"`                                  // 英雄ID
	AdvertType uint32       `protobuf:"varint,4,opt,name=AdvertType,proto3" json:"AdvertType,omitempty"`                          // 广告类型
}

func (x *BattleReliveRequest) Reset() {
	*x = BattleReliveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleReliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleReliveRequest) ProtoMessage() {}

func (x *BattleReliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleReliveRequest.ProtoReflect.Descriptor instead.
func (*BattleReliveRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{211}
}

func (x *BattleReliveRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleReliveRequest) GetBattleType() EmBattleType {
	if x != nil {
		return x.BattleType
	}
	return EmBattleType_EBT_None
}

func (x *BattleReliveRequest) GetHeroId() uint32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *BattleReliveRequest) GetAdvertType() uint32 {
	if x != nil {
		return x.AdvertType
	}
	return 0
}

// 关卡复活返回
type BattleReliveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket        `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BattleType EmBattleType    `protobuf:"varint,2,opt,name=BattleType,proto3,enum=common.EmBattleType" json:"BattleType,omitempty"` // 战斗类型 1地图，2爬塔，3挂机
	HeroId     uint32          `protobuf:"varint,3,opt,name=HeroId,proto3" json:"HeroId,omitempty"`                                  // 英雄ID
	Relive     *PBBattleRelive `protobuf:"bytes,4,opt,name=Relive,proto3" json:"Relive,omitempty"`                                   // 复活数据
}

func (x *BattleReliveResponse) Reset() {
	*x = BattleReliveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleReliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleReliveResponse) ProtoMessage() {}

func (x *BattleReliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleReliveResponse.ProtoReflect.Descriptor instead.
func (*BattleReliveResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{212}
}

func (x *BattleReliveResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleReliveResponse) GetBattleType() EmBattleType {
	if x != nil {
		return x.BattleType
	}
	return EmBattleType_EBT_None
}

func (x *BattleReliveResponse) GetHeroId() uint32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *BattleReliveResponse) GetRelive() *PBBattleRelive {
	if x != nil {
		return x.Relive
	}
	return nil
}

// 关卡功能购买请求
type BattleFunBuyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead    *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BattleFunType uint32   `protobuf:"varint,2,opt,name=BattleFunType,proto3" json:"BattleFunType,omitempty"` // 刷新类型 1是复活  2是卡牌刷新
}

func (x *BattleFunBuyRequest) Reset() {
	*x = BattleFunBuyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleFunBuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleFunBuyRequest) ProtoMessage() {}

func (x *BattleFunBuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleFunBuyRequest.ProtoReflect.Descriptor instead.
func (*BattleFunBuyRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{213}
}

func (x *BattleFunBuyRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleFunBuyRequest) GetBattleFunType() uint32 {
	if x != nil {
		return x.BattleFunType
	}
	return 0
}

// 关卡功能购买返回
type BattleFunBuyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead    *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BattleFunType uint32   `protobuf:"varint,2,opt,name=BattleFunType,proto3" json:"BattleFunType,omitempty"` // 刷新类型 1是复活  2是卡牌刷新
}

func (x *BattleFunBuyResponse) Reset() {
	*x = BattleFunBuyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleFunBuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleFunBuyResponse) ProtoMessage() {}

func (x *BattleFunBuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleFunBuyResponse.ProtoReflect.Descriptor instead.
func (*BattleFunBuyResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{214}
}

func (x *BattleFunBuyResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleFunBuyResponse) GetBattleFunType() uint32 {
	if x != nil {
		return x.BattleFunType
	}
	return 0
}

// 挂机掉落请求
type HookBattleLootRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead  *IPacket                 `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	MonsterInfo []*BattleKillMonsterInfo `protobuf:"bytes,2,rep,name=MonsterInfo,proto3" json:"MonsterInfo,omitempty"` // 击杀数据
}

func (x *HookBattleLootRequest) Reset() {
	*x = HookBattleLootRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookBattleLootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookBattleLootRequest) ProtoMessage() {}

func (x *HookBattleLootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookBattleLootRequest.ProtoReflect.Descriptor instead.
func (*HookBattleLootRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{215}
}

func (x *HookBattleLootRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *HookBattleLootRequest) GetMonsterInfo() []*BattleKillMonsterInfo {
	if x != nil {
		return x.MonsterInfo
	}
	return nil
}

// 挂机掉落请求
type HookBattleLootResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *HookBattleLootResponse) Reset() {
	*x = HookBattleLootResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HookBattleLootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HookBattleLootResponse) ProtoMessage() {}

func (x *HookBattleLootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HookBattleLootResponse.ProtoReflect.Descriptor instead.
func (*HookBattleLootResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{216}
}

func (x *HookBattleLootResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 战斗进度保存请求
type BattleScheduleSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead     *IPacket          `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BattleSchedule *PBBattleSchedule `protobuf:"bytes,2,opt,name=BattleSchedule,proto3" json:"BattleSchedule,omitempty"`
}

func (x *BattleScheduleSaveRequest) Reset() {
	*x = BattleScheduleSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleScheduleSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleScheduleSaveRequest) ProtoMessage() {}

func (x *BattleScheduleSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleScheduleSaveRequest.ProtoReflect.Descriptor instead.
func (*BattleScheduleSaveRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{217}
}

func (x *BattleScheduleSaveRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleScheduleSaveRequest) GetBattleSchedule() *PBBattleSchedule {
	if x != nil {
		return x.BattleSchedule
	}
	return nil
}

// 战斗进度结束返回
type BattleScheduleSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead     *IPacket          `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BattleSchedule *PBBattleSchedule `protobuf:"bytes,2,opt,name=BattleSchedule,proto3" json:"BattleSchedule,omitempty"`
}

func (x *BattleScheduleSaveResponse) Reset() {
	*x = BattleScheduleSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleScheduleSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleScheduleSaveResponse) ProtoMessage() {}

func (x *BattleScheduleSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleScheduleSaveResponse.ProtoReflect.Descriptor instead.
func (*BattleScheduleSaveResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{218}
}

func (x *BattleScheduleSaveResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BattleScheduleSaveResponse) GetBattleSchedule() *PBBattleSchedule {
	if x != nil {
		return x.BattleSchedule
	}
	return nil
}

// 机器人通知
type CrystalRobotNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket        `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	RobotInfo  *PBCrystalRobot `protobuf:"bytes,2,opt,name=RobotInfo,proto3" json:"RobotInfo,omitempty"` // 变更之后的机器人信息
}

func (x *CrystalRobotNotify) Reset() {
	*x = CrystalRobotNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalRobotNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalRobotNotify) ProtoMessage() {}

func (x *CrystalRobotNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalRobotNotify.ProtoReflect.Descriptor instead.
func (*CrystalRobotNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{219}
}

func (x *CrystalRobotNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *CrystalRobotNotify) GetRobotInfo() *PBCrystalRobot {
	if x != nil {
		return x.RobotInfo
	}
	return nil
}

// 晶核通知
type CrystalNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead  *IPacket     `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	CrystalInfo []*PBCrystal `protobuf:"bytes,2,rep,name=CrystalInfo,proto3" json:"CrystalInfo,omitempty"` // 变更之后的晶核信息
}

func (x *CrystalNotify) Reset() {
	*x = CrystalNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalNotify) ProtoMessage() {}

func (x *CrystalNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalNotify.ProtoReflect.Descriptor instead.
func (*CrystalNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{220}
}

func (x *CrystalNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *CrystalNotify) GetCrystalInfo() []*PBCrystal {
	if x != nil {
		return x.CrystalInfo
	}
	return nil
}

// 机器人升级请求
type CrystalRobotUpgradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	RobotID    uint32   `protobuf:"varint,2,opt,name=RobotID,proto3" json:"RobotID,omitempty"` // 机器人ID
}

func (x *CrystalRobotUpgradeRequest) Reset() {
	*x = CrystalRobotUpgradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalRobotUpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalRobotUpgradeRequest) ProtoMessage() {}

func (x *CrystalRobotUpgradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalRobotUpgradeRequest.ProtoReflect.Descriptor instead.
func (*CrystalRobotUpgradeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{221}
}

func (x *CrystalRobotUpgradeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *CrystalRobotUpgradeRequest) GetRobotID() uint32 {
	if x != nil {
		return x.RobotID
	}
	return 0
}

type CrystalRobotUpgradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	RobotID    uint32   `protobuf:"varint,2,opt,name=RobotID,proto3" json:"RobotID,omitempty"`   // 机器人ID
	CurLevel   uint32   `protobuf:"varint,3,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"` // 升级之后的当前等级
}

func (x *CrystalRobotUpgradeResponse) Reset() {
	*x = CrystalRobotUpgradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalRobotUpgradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalRobotUpgradeResponse) ProtoMessage() {}

func (x *CrystalRobotUpgradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalRobotUpgradeResponse.ProtoReflect.Descriptor instead.
func (*CrystalRobotUpgradeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{222}
}

func (x *CrystalRobotUpgradeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *CrystalRobotUpgradeResponse) GetRobotID() uint32 {
	if x != nil {
		return x.RobotID
	}
	return 0
}

func (x *CrystalRobotUpgradeResponse) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 机器人上阵请求
type CrystalRobotBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	RobotID    uint32   `protobuf:"varint,2,opt,name=RobotID,proto3" json:"RobotID,omitempty"` // 机器人ID
}

func (x *CrystalRobotBattleRequest) Reset() {
	*x = CrystalRobotBattleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalRobotBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalRobotBattleRequest) ProtoMessage() {}

func (x *CrystalRobotBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalRobotBattleRequest.ProtoReflect.Descriptor instead.
func (*CrystalRobotBattleRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{223}
}

func (x *CrystalRobotBattleRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *CrystalRobotBattleRequest) GetRobotID() uint32 {
	if x != nil {
		return x.RobotID
	}
	return 0
}

type CrystalRobotBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	RobotID    uint32   `protobuf:"varint,2,opt,name=RobotID,proto3" json:"RobotID,omitempty"` // 机器人ID
}

func (x *CrystalRobotBattleResponse) Reset() {
	*x = CrystalRobotBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalRobotBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalRobotBattleResponse) ProtoMessage() {}

func (x *CrystalRobotBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalRobotBattleResponse.ProtoReflect.Descriptor instead.
func (*CrystalRobotBattleResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{224}
}

func (x *CrystalRobotBattleResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *CrystalRobotBattleResponse) GetRobotID() uint32 {
	if x != nil {
		return x.RobotID
	}
	return 0
}

// 晶核改造请求
type CrystalRedefineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	CrystalID  uint32   `protobuf:"varint,2,opt,name=CrystalID,proto3" json:"CrystalID,omitempty"` // 要改造的晶核ID
}

func (x *CrystalRedefineRequest) Reset() {
	*x = CrystalRedefineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalRedefineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalRedefineRequest) ProtoMessage() {}

func (x *CrystalRedefineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalRedefineRequest.ProtoReflect.Descriptor instead.
func (*CrystalRedefineRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{225}
}

func (x *CrystalRedefineRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *CrystalRedefineRequest) GetCrystalID() uint32 {
	if x != nil {
		return x.CrystalID
	}
	return 0
}

type CrystalRedefineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	CrystalID  uint32   `protobuf:"varint,2,opt,name=CrystalID,proto3" json:"CrystalID,omitempty"` // 要改造的晶核ID
	CurStar    uint32   `protobuf:"varint,3,opt,name=CurStar,proto3" json:"CurStar,omitempty"`     // 升级之后的星级
}

func (x *CrystalRedefineResponse) Reset() {
	*x = CrystalRedefineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalRedefineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalRedefineResponse) ProtoMessage() {}

func (x *CrystalRedefineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalRedefineResponse.ProtoReflect.Descriptor instead.
func (*CrystalRedefineResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{226}
}

func (x *CrystalRedefineResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *CrystalRedefineResponse) GetCrystalID() uint32 {
	if x != nil {
		return x.CrystalID
	}
	return 0
}

func (x *CrystalRedefineResponse) GetCurStar() uint32 {
	if x != nil {
		return x.CurStar
	}
	return 0
}

// 晶核升级请求
type CrystalUpgradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	CrystalID  uint32   `protobuf:"varint,2,opt,name=CrystalID,proto3" json:"CrystalID,omitempty"` // 要改造的晶核ID
}

func (x *CrystalUpgradeRequest) Reset() {
	*x = CrystalUpgradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalUpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalUpgradeRequest) ProtoMessage() {}

func (x *CrystalUpgradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalUpgradeRequest.ProtoReflect.Descriptor instead.
func (*CrystalUpgradeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{227}
}

func (x *CrystalUpgradeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *CrystalUpgradeRequest) GetCrystalID() uint32 {
	if x != nil {
		return x.CrystalID
	}
	return 0
}

type CrystalUpgradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	CrystalID  uint32   `protobuf:"varint,2,opt,name=CrystalID,proto3" json:"CrystalID,omitempty"` // 要改造的晶核ID
	CurLevel   uint32   `protobuf:"varint,3,opt,name=CurLevel,proto3" json:"CurLevel,omitempty"`   // 升级之后的等级
}

func (x *CrystalUpgradeResponse) Reset() {
	*x = CrystalUpgradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalUpgradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalUpgradeResponse) ProtoMessage() {}

func (x *CrystalUpgradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalUpgradeResponse.ProtoReflect.Descriptor instead.
func (*CrystalUpgradeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{228}
}

func (x *CrystalUpgradeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *CrystalUpgradeResponse) GetCrystalID() uint32 {
	if x != nil {
		return x.CrystalID
	}
	return 0
}

func (x *CrystalUpgradeResponse) GetCurLevel() uint32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// 图鉴系统领取等级奖励请求
type BookStageRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *BookStageRewardRequest) Reset() {
	*x = BookStageRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookStageRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookStageRewardRequest) ProtoMessage() {}

func (x *BookStageRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookStageRewardRequest.ProtoReflect.Descriptor instead.
func (*BookStageRewardRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{229}
}

func (x *BookStageRewardRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

type BookStageRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket       `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	BookInfo   *PBCrystalBook `protobuf:"bytes,2,opt,name=BookInfo,proto3" json:"BookInfo,omitempty"` // 图鉴数据
}

func (x *BookStageRewardResponse) Reset() {
	*x = BookStageRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookStageRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookStageRewardResponse) ProtoMessage() {}

func (x *BookStageRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookStageRewardResponse.ProtoReflect.Descriptor instead.
func (*BookStageRewardResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{230}
}

func (x *BookStageRewardResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BookStageRewardResponse) GetBookInfo() *PBCrystalBook {
	if x != nil {
		return x.BookInfo
	}
	return nil
}

// 图鉴系统领取收藏币接口
type BookCollectionCoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	CrystalID  uint32   `protobuf:"varint,2,opt,name=CrystalID,proto3" json:"CrystalID,omitempty"` // 晶核ID
}

func (x *BookCollectionCoinRequest) Reset() {
	*x = BookCollectionCoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookCollectionCoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookCollectionCoinRequest) ProtoMessage() {}

func (x *BookCollectionCoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookCollectionCoinRequest.ProtoReflect.Descriptor instead.
func (*BookCollectionCoinRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{231}
}

func (x *BookCollectionCoinRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BookCollectionCoinRequest) GetCrystalID() uint32 {
	if x != nil {
		return x.CrystalID
	}
	return 0
}

type BookCollectionCoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Coin       uint32   `protobuf:"varint,2,opt,name=Coin,proto3" json:"Coin,omitempty"`   // 收藏币数量
	Level      uint32   `protobuf:"varint,3,opt,name=Level,proto3" json:"Level,omitempty"` // 当前图鉴系统等级
}

func (x *BookCollectionCoinResponse) Reset() {
	*x = BookCollectionCoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookCollectionCoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookCollectionCoinResponse) ProtoMessage() {}

func (x *BookCollectionCoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookCollectionCoinResponse.ProtoReflect.Descriptor instead.
func (*BookCollectionCoinResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{232}
}

func (x *BookCollectionCoinResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *BookCollectionCoinResponse) GetCoin() uint32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *BookCollectionCoinResponse) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

// 切换基因方案
type GeneSchemeChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	SchemeID   uint32   `protobuf:"varint,2,opt,name=SchemeID,proto3" json:"SchemeID,omitempty"` // 基因方案ID
}

func (x *GeneSchemeChangeRequest) Reset() {
	*x = GeneSchemeChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneSchemeChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneSchemeChangeRequest) ProtoMessage() {}

func (x *GeneSchemeChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneSchemeChangeRequest.ProtoReflect.Descriptor instead.
func (*GeneSchemeChangeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{233}
}

func (x *GeneSchemeChangeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GeneSchemeChangeRequest) GetSchemeID() uint32 {
	if x != nil {
		return x.SchemeID
	}
	return 0
}

type GeneSchemeChangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *GeneSchemeChangeResponse) Reset() {
	*x = GeneSchemeChangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneSchemeChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneSchemeChangeResponse) ProtoMessage() {}

func (x *GeneSchemeChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneSchemeChangeResponse.ProtoReflect.Descriptor instead.
func (*GeneSchemeChangeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{234}
}

func (x *GeneSchemeChangeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 重置基因方案请求
type GeneSchemeResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	SchemeID   uint32   `protobuf:"varint,2,opt,name=SchemeID,proto3" json:"SchemeID,omitempty"` // 基因方案ID
}

func (x *GeneSchemeResetRequest) Reset() {
	*x = GeneSchemeResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneSchemeResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneSchemeResetRequest) ProtoMessage() {}

func (x *GeneSchemeResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneSchemeResetRequest.ProtoReflect.Descriptor instead.
func (*GeneSchemeResetRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{235}
}

func (x *GeneSchemeResetRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GeneSchemeResetRequest) GetSchemeID() uint32 {
	if x != nil {
		return x.SchemeID
	}
	return 0
}

type GeneSchemeResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *GeneSchemeResetResponse) Reset() {
	*x = GeneSchemeResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneSchemeResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneSchemeResetResponse) ProtoMessage() {}

func (x *GeneSchemeResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneSchemeResetResponse.ProtoReflect.Descriptor instead.
func (*GeneSchemeResetResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{236}
}

func (x *GeneSchemeResetResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 基因方案修改名字
type GeneChangeNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	SchemeID   uint32   `protobuf:"varint,2,opt,name=SchemeID,proto3" json:"SchemeID,omitempty"` // 基因方案ID
	Name       string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`          // 改成的名字
}

func (x *GeneChangeNameRequest) Reset() {
	*x = GeneChangeNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneChangeNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneChangeNameRequest) ProtoMessage() {}

func (x *GeneChangeNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneChangeNameRequest.ProtoReflect.Descriptor instead.
func (*GeneChangeNameRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{237}
}

func (x *GeneChangeNameRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GeneChangeNameRequest) GetSchemeID() uint32 {
	if x != nil {
		return x.SchemeID
	}
	return 0
}

func (x *GeneChangeNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GeneChangeNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *GeneChangeNameResponse) Reset() {
	*x = GeneChangeNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneChangeNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneChangeNameResponse) ProtoMessage() {}

func (x *GeneChangeNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneChangeNameResponse.ProtoReflect.Descriptor instead.
func (*GeneChangeNameResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{238}
}

func (x *GeneChangeNameResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 基因种子激活
type GeneCardActiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsActive bool   `protobuf:"varint,1,opt,name=IsActive,proto3" json:"IsActive,omitempty"` // 是否激活
	CardID   uint32 `protobuf:"varint,2,opt,name=CardID,proto3" json:"CardID,omitempty"`     // 卡牌ID
}

func (x *GeneCardActiveInfo) Reset() {
	*x = GeneCardActiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneCardActiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneCardActiveInfo) ProtoMessage() {}

func (x *GeneCardActiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneCardActiveInfo.ProtoReflect.Descriptor instead.
func (*GeneCardActiveInfo) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{239}
}

func (x *GeneCardActiveInfo) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GeneCardActiveInfo) GetCardID() uint32 {
	if x != nil {
		return x.CardID
	}
	return 0
}

type GeneCardActiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead     *IPacket              `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	SchemeID       uint32                `protobuf:"varint,2,opt,name=SchemeID,proto3" json:"SchemeID,omitempty"`                    // 方案ID
	Actives        []*GeneCardActiveInfo `protobuf:"bytes,3,rep,name=Actives,proto3" json:"Actives,omitempty"`                       // 激活列表
	RobotPositions []uint32              `protobuf:"varint,4,rep,packed,name=RobotPositions,proto3" json:"RobotPositions,omitempty"` // 重置机器人位置列表
}

func (x *GeneCardActiveRequest) Reset() {
	*x = GeneCardActiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneCardActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneCardActiveRequest) ProtoMessage() {}

func (x *GeneCardActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneCardActiveRequest.ProtoReflect.Descriptor instead.
func (*GeneCardActiveRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{240}
}

func (x *GeneCardActiveRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GeneCardActiveRequest) GetSchemeID() uint32 {
	if x != nil {
		return x.SchemeID
	}
	return 0
}

func (x *GeneCardActiveRequest) GetActives() []*GeneCardActiveInfo {
	if x != nil {
		return x.Actives
	}
	return nil
}

func (x *GeneCardActiveRequest) GetRobotPositions() []uint32 {
	if x != nil {
		return x.RobotPositions
	}
	return nil
}

type GeneCardActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *GeneCardActiveResponse) Reset() {
	*x = GeneCardActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneCardActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneCardActiveResponse) ProtoMessage() {}

func (x *GeneCardActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneCardActiveResponse.ProtoReflect.Descriptor instead.
func (*GeneCardActiveResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{241}
}

func (x *GeneCardActiveResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 基因共鸣使徒激活/更换
type GeneRobotActiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	SchemeID   uint32   `protobuf:"varint,2,opt,name=SchemeID,proto3" json:"SchemeID,omitempty"` // 方案ID
	Position   uint32   `protobuf:"varint,3,opt,name=Position,proto3" json:"Position,omitempty"` // 位置
	RobotID    uint32   `protobuf:"varint,4,opt,name=RobotID,proto3" json:"RobotID,omitempty"`   // 机器人id
}

func (x *GeneRobotActiveRequest) Reset() {
	*x = GeneRobotActiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneRobotActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneRobotActiveRequest) ProtoMessage() {}

func (x *GeneRobotActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneRobotActiveRequest.ProtoReflect.Descriptor instead.
func (*GeneRobotActiveRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{242}
}

func (x *GeneRobotActiveRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GeneRobotActiveRequest) GetSchemeID() uint32 {
	if x != nil {
		return x.SchemeID
	}
	return 0
}

func (x *GeneRobotActiveRequest) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *GeneRobotActiveRequest) GetRobotID() uint32 {
	if x != nil {
		return x.RobotID
	}
	return 0
}

type GeneRobotActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *GeneRobotActiveResponse) Reset() {
	*x = GeneRobotActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneRobotActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneRobotActiveResponse) ProtoMessage() {}

func (x *GeneRobotActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneRobotActiveResponse.ProtoReflect.Descriptor instead.
func (*GeneRobotActiveResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{243}
}

func (x *GeneRobotActiveResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 基因共鸣使徒强化卡牌激活
type GeneRobotCardActiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket              `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	SchemeID   uint32                `protobuf:"varint,2,opt,name=SchemeID,proto3" json:"SchemeID,omitempty"` // 方案ID
	Position   uint32                `protobuf:"varint,3,opt,name=Position,proto3" json:"Position,omitempty"` // 位置
	Actives    []*GeneCardActiveInfo `protobuf:"bytes,4,rep,name=Actives,proto3" json:"Actives,omitempty"`    // 激活列表
}

func (x *GeneRobotCardActiveRequest) Reset() {
	*x = GeneRobotCardActiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneRobotCardActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneRobotCardActiveRequest) ProtoMessage() {}

func (x *GeneRobotCardActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneRobotCardActiveRequest.ProtoReflect.Descriptor instead.
func (*GeneRobotCardActiveRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{244}
}

func (x *GeneRobotCardActiveRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GeneRobotCardActiveRequest) GetSchemeID() uint32 {
	if x != nil {
		return x.SchemeID
	}
	return 0
}

func (x *GeneRobotCardActiveRequest) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *GeneRobotCardActiveRequest) GetActives() []*GeneCardActiveInfo {
	if x != nil {
		return x.Actives
	}
	return nil
}

type GeneRobotCardActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *GeneRobotCardActiveResponse) Reset() {
	*x = GeneRobotCardActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneRobotCardActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneRobotCardActiveResponse) ProtoMessage() {}

func (x *GeneRobotCardActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneRobotCardActiveResponse.ProtoReflect.Descriptor instead.
func (*GeneRobotCardActiveResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{245}
}

func (x *GeneRobotCardActiveResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 世界boss数据同步
type WorldBossNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket                 `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	WorldBoss  *PBPlayerSystemWorldBoss `protobuf:"bytes,2,opt,name=WorldBoss,proto3" json:"WorldBoss,omitempty"`
}

func (x *WorldBossNotify) Reset() {
	*x = WorldBossNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossNotify) ProtoMessage() {}

func (x *WorldBossNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossNotify.ProtoReflect.Descriptor instead.
func (*WorldBossNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{246}
}

func (x *WorldBossNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *WorldBossNotify) GetWorldBoss() *PBPlayerSystemWorldBoss {
	if x != nil {
		return x.WorldBoss
	}
	return nil
}

// 世界boss阶段奖励请求
type WorldBossStagePrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *WorldBossStagePrizeRequest) Reset() {
	*x = WorldBossStagePrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossStagePrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossStagePrizeRequest) ProtoMessage() {}

func (x *WorldBossStagePrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossStagePrizeRequest.ProtoReflect.Descriptor instead.
func (*WorldBossStagePrizeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{247}
}

func (x *WorldBossStagePrizeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 世界boss阶段奖励返回
type WorldBossStagePrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead        *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DailyPrizeStageId uint32   `protobuf:"varint,2,opt,name=DailyPrizeStageId,proto3" json:"DailyPrizeStageId,omitempty"` // 阶段ID
}

func (x *WorldBossStagePrizeResponse) Reset() {
	*x = WorldBossStagePrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossStagePrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossStagePrizeResponse) ProtoMessage() {}

func (x *WorldBossStagePrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossStagePrizeResponse.ProtoReflect.Descriptor instead.
func (*WorldBossStagePrizeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{248}
}

func (x *WorldBossStagePrizeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *WorldBossStagePrizeResponse) GetDailyPrizeStageId() uint32 {
	if x != nil {
		return x.DailyPrizeStageId
	}
	return 0
}

// 世界boss购买次数请求
type WorldBossBuyCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *WorldBossBuyCountRequest) Reset() {
	*x = WorldBossBuyCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossBuyCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossBuyCountRequest) ProtoMessage() {}

func (x *WorldBossBuyCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossBuyCountRequest.ProtoReflect.Descriptor instead.
func (*WorldBossBuyCountRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{249}
}

func (x *WorldBossBuyCountRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 世界boss购买次数返回
type WorldBossBuyCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead    *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DailyBuyCount uint32   `protobuf:"varint,2,opt,name=DailyBuyCount,proto3" json:"DailyBuyCount,omitempty"` // 购买次数
}

func (x *WorldBossBuyCountResponse) Reset() {
	*x = WorldBossBuyCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossBuyCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossBuyCountResponse) ProtoMessage() {}

func (x *WorldBossBuyCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossBuyCountResponse.ProtoReflect.Descriptor instead.
func (*WorldBossBuyCountResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{250}
}

func (x *WorldBossBuyCountResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *WorldBossBuyCountResponse) GetDailyBuyCount() uint32 {
	if x != nil {
		return x.DailyBuyCount
	}
	return 0
}

// 世界boss扫荡请求
type WorldBossSweepRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *WorldBossSweepRequest) Reset() {
	*x = WorldBossSweepRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossSweepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossSweepRequest) ProtoMessage() {}

func (x *WorldBossSweepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossSweepRequest.ProtoReflect.Descriptor instead.
func (*WorldBossSweepRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{251}
}

func (x *WorldBossSweepRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 世界boss扫荡返回
type WorldBossSweepResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead      *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DailyEnterCount uint32   `protobuf:"varint,2,opt,name=DailyEnterCount,proto3" json:"DailyEnterCount,omitempty"` // 进入次数
	DailyPrizeCount uint32   `protobuf:"varint,3,opt,name=DailyPrizeCount,proto3" json:"DailyPrizeCount,omitempty"` // 奖励次数
}

func (x *WorldBossSweepResponse) Reset() {
	*x = WorldBossSweepResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossSweepResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossSweepResponse) ProtoMessage() {}

func (x *WorldBossSweepResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossSweepResponse.ProtoReflect.Descriptor instead.
func (*WorldBossSweepResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{252}
}

func (x *WorldBossSweepResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *WorldBossSweepResponse) GetDailyEnterCount() uint32 {
	if x != nil {
		return x.DailyEnterCount
	}
	return 0
}

func (x *WorldBossSweepResponse) GetDailyPrizeCount() uint32 {
	if x != nil {
		return x.DailyPrizeCount
	}
	return 0
}

// 世界boss挑战开始请求
type WorldBossBattleBeginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *WorldBossBattleBeginRequest) Reset() {
	*x = WorldBossBattleBeginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossBattleBeginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossBattleBeginRequest) ProtoMessage() {}

func (x *WorldBossBattleBeginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossBattleBeginRequest.ProtoReflect.Descriptor instead.
func (*WorldBossBattleBeginRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{253}
}

func (x *WorldBossBattleBeginRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 世界boss挑战开始返回
type WorldBossBattleBeginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead      *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DailyEnterCount uint32   `protobuf:"varint,2,opt,name=DailyEnterCount,proto3" json:"DailyEnterCount,omitempty"` // 使用免费次数 +1 最大三次
}

func (x *WorldBossBattleBeginResponse) Reset() {
	*x = WorldBossBattleBeginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossBattleBeginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossBattleBeginResponse) ProtoMessage() {}

func (x *WorldBossBattleBeginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossBattleBeginResponse.ProtoReflect.Descriptor instead.
func (*WorldBossBattleBeginResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{254}
}

func (x *WorldBossBattleBeginResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *WorldBossBattleBeginResponse) GetDailyEnterCount() uint32 {
	if x != nil {
		return x.DailyEnterCount
	}
	return 0
}

// 世界boss挑战结束请求
type WorldBossBattleEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket    `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Battle     *BattleInfo `protobuf:"bytes,2,opt,name=Battle,proto3" json:"Battle,omitempty"`
	IsFinish   uint32      `protobuf:"varint,3,opt,name=IsFinish,proto3" json:"IsFinish,omitempty"` //是否最终上报
}

func (x *WorldBossBattleEndRequest) Reset() {
	*x = WorldBossBattleEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossBattleEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossBattleEndRequest) ProtoMessage() {}

func (x *WorldBossBattleEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossBattleEndRequest.ProtoReflect.Descriptor instead.
func (*WorldBossBattleEndRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{255}
}

func (x *WorldBossBattleEndRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *WorldBossBattleEndRequest) GetBattle() *BattleInfo {
	if x != nil {
		return x.Battle
	}
	return nil
}

func (x *WorldBossBattleEndRequest) GetIsFinish() uint32 {
	if x != nil {
		return x.IsFinish
	}
	return 0
}

// 世界boss挑战结束返回
type WorldBossBattleEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead       *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	DailyMaxDamage   uint64           `protobuf:"varint,2,opt,name=DailyMaxDamage,proto3" json:"DailyMaxDamage,omitempty"`     // 最大伤害值
	DailyTotalDamage uint64           `protobuf:"varint,3,opt,name=DailyTotalDamage,proto3" json:"DailyTotalDamage,omitempty"` // 每日累计伤害值
	DailyPrizeCount  uint32           `protobuf:"varint,4,opt,name=DailyPrizeCount,proto3" json:"DailyPrizeCount,omitempty"`   // 结算次数
	ItemInfo         []*PBAddItemData `protobuf:"bytes,5,rep,name=ItemInfo,proto3" json:"ItemInfo,omitempty"`                  // 道具信息
	DailyEnterCount  uint32           `protobuf:"varint,6,opt,name=DailyEnterCount,proto3" json:"DailyEnterCount,omitempty"`   // 免费次数 -1
}

func (x *WorldBossBattleEndResponse) Reset() {
	*x = WorldBossBattleEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossBattleEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossBattleEndResponse) ProtoMessage() {}

func (x *WorldBossBattleEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossBattleEndResponse.ProtoReflect.Descriptor instead.
func (*WorldBossBattleEndResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{256}
}

func (x *WorldBossBattleEndResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *WorldBossBattleEndResponse) GetDailyMaxDamage() uint64 {
	if x != nil {
		return x.DailyMaxDamage
	}
	return 0
}

func (x *WorldBossBattleEndResponse) GetDailyTotalDamage() uint64 {
	if x != nil {
		return x.DailyTotalDamage
	}
	return 0
}

func (x *WorldBossBattleEndResponse) GetDailyPrizeCount() uint32 {
	if x != nil {
		return x.DailyPrizeCount
	}
	return 0
}

func (x *WorldBossBattleEndResponse) GetItemInfo() []*PBAddItemData {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

func (x *WorldBossBattleEndResponse) GetDailyEnterCount() uint32 {
	if x != nil {
		return x.DailyEnterCount
	}
	return 0
}

// 世界boss挑战记录查询
type WorldBossRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	AccountId  uint64   `protobuf:"varint,2,opt,name=AccountId,proto3" json:"AccountId,omitempty"` // 玩家ID
	ServerId   uint32   `protobuf:"varint,3,opt,name=ServerId,proto3" json:"ServerId,omitempty"`   // 服务器ID
}

func (x *WorldBossRecordRequest) Reset() {
	*x = WorldBossRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossRecordRequest) ProtoMessage() {}

func (x *WorldBossRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossRecordRequest.ProtoReflect.Descriptor instead.
func (*WorldBossRecordRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{257}
}

func (x *WorldBossRecordRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *WorldBossRecordRequest) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *WorldBossRecordRequest) GetServerId() uint32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

// 挑战记录返回
type WorldBossRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket            `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	RecordInfo *PBPlayerBattleData `protobuf:"bytes,2,opt,name=RecordInfo,proto3" json:"RecordInfo,omitempty"` // 记录数据
}

func (x *WorldBossRecordResponse) Reset() {
	*x = WorldBossRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldBossRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldBossRecordResponse) ProtoMessage() {}

func (x *WorldBossRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldBossRecordResponse.ProtoReflect.Descriptor instead.
func (*WorldBossRecordResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{258}
}

func (x *WorldBossRecordResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *WorldBossRecordResponse) GetRecordInfo() *PBPlayerBattleData {
	if x != nil {
		return x.RecordInfo
	}
	return nil
}

// 打开boss界面请求
type OpenBossRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *OpenBossRequest) Reset() {
	*x = OpenBossRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenBossRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenBossRequest) ProtoMessage() {}

func (x *OpenBossRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenBossRequest.ProtoReflect.Descriptor instead.
func (*OpenBossRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{259}
}

func (x *OpenBossRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

// 打开boss界面返回
type OpenBossResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead    *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	WorldBossRank *PBU32U64 `protobuf:"bytes,2,opt,name=WorldBossRank,proto3" json:"WorldBossRank,omitempty"` // 世界boss排名数据 key:名次 value:分数
}

func (x *OpenBossResponse) Reset() {
	*x = OpenBossResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenBossResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenBossResponse) ProtoMessage() {}

func (x *OpenBossResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenBossResponse.ProtoReflect.Descriptor instead.
func (*OpenBossResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{260}
}

func (x *OpenBossResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *OpenBossResponse) GetWorldBossRank() *PBU32U64 {
	if x != nil {
		return x.WorldBossRank
	}
	return nil
}

// 锦标赛任务完成领奖请求
type ChampionshipTaskRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	RankType   uint32   `protobuf:"varint,2,opt,name=RankType,proto3" json:"RankType,omitempty"`
	TaskID     uint32   `protobuf:"varint,3,opt,name=TaskID,proto3" json:"TaskID,omitempty"`
}

func (x *ChampionshipTaskRewardRequest) Reset() {
	*x = ChampionshipTaskRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionshipTaskRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionshipTaskRewardRequest) ProtoMessage() {}

func (x *ChampionshipTaskRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionshipTaskRewardRequest.ProtoReflect.Descriptor instead.
func (*ChampionshipTaskRewardRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{261}
}

func (x *ChampionshipTaskRewardRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChampionshipTaskRewardRequest) GetRankType() uint32 {
	if x != nil {
		return x.RankType
	}
	return 0
}

func (x *ChampionshipTaskRewardRequest) GetTaskID() uint32 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

// 领奖完成返回
type ChampionshipTaskRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Task       *PBTaskStageInfo `protobuf:"bytes,2,opt,name=Task,proto3" json:"Task,omitempty"` // 主线任务
}

func (x *ChampionshipTaskRewardResponse) Reset() {
	*x = ChampionshipTaskRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionshipTaskRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionshipTaskRewardResponse) ProtoMessage() {}

func (x *ChampionshipTaskRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionshipTaskRewardResponse.ProtoReflect.Descriptor instead.
func (*ChampionshipTaskRewardResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{262}
}

func (x *ChampionshipTaskRewardResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChampionshipTaskRewardResponse) GetTask() *PBTaskStageInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

type ChampionshipInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"` // 包头
}

func (x *ChampionshipInfoRequest) Reset() {
	*x = ChampionshipInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionshipInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionshipInfoRequest) ProtoMessage() {}

func (x *ChampionshipInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionshipInfoRequest.ProtoReflect.Descriptor instead.
func (*ChampionshipInfoRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{263}
}

func (x *ChampionshipInfoRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

type ChampionshipRankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankType uint32    `protobuf:"varint,1,opt,name=RankType,proto3" json:"RankType,omitempty"` // 排行榜类型
	First    *RankInfo `protobuf:"bytes,2,opt,name=First,proto3" json:"First,omitempty"`        // 第一名信息
}

func (x *ChampionshipRankInfo) Reset() {
	*x = ChampionshipRankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionshipRankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionshipRankInfo) ProtoMessage() {}

func (x *ChampionshipRankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionshipRankInfo.ProtoReflect.Descriptor instead.
func (*ChampionshipRankInfo) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{264}
}

func (x *ChampionshipRankInfo) GetRankType() uint32 {
	if x != nil {
		return x.RankType
	}
	return 0
}

func (x *ChampionshipRankInfo) GetFirst() *RankInfo {
	if x != nil {
		return x.First
	}
	return nil
}

type ChampionshipInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket                `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"` // 包头
	List       []*ChampionshipRankInfo `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`             // 第一名信息
}

func (x *ChampionshipInfoResponse) Reset() {
	*x = ChampionshipInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionshipInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionshipInfoResponse) ProtoMessage() {}

func (x *ChampionshipInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionshipInfoResponse.ProtoReflect.Descriptor instead.
func (*ChampionshipInfoResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{265}
}

func (x *ChampionshipInfoResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChampionshipInfoResponse) GetList() []*ChampionshipRankInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type ChampionshipTimeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankType uint32 `protobuf:"varint,1,opt,name=RankType,proto3" json:"RankType,omitempty"` // 排行榜类型
	Interval uint64 `protobuf:"varint,2,opt,name=Interval,proto3" json:"Interval,omitempty"` // 间隔多长时间开启
	Active   uint64 `protobuf:"varint,3,opt,name=Active,proto3" json:"Active,omitempty"`     // 活跃时长
	Reward   uint64 `protobuf:"varint,4,opt,name=Reward,proto3" json:"Reward,omitempty"`     // 结算时长（领奖时长）
	Show     uint64 `protobuf:"varint,5,opt,name=Show,proto3" json:"Show,omitempty"`         // 展示时长
}

func (x *ChampionshipTimeInfo) Reset() {
	*x = ChampionshipTimeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionshipTimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionshipTimeInfo) ProtoMessage() {}

func (x *ChampionshipTimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionshipTimeInfo.ProtoReflect.Descriptor instead.
func (*ChampionshipTimeInfo) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{266}
}

func (x *ChampionshipTimeInfo) GetRankType() uint32 {
	if x != nil {
		return x.RankType
	}
	return 0
}

func (x *ChampionshipTimeInfo) GetInterval() uint64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *ChampionshipTimeInfo) GetActive() uint64 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *ChampionshipTimeInfo) GetReward() uint64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *ChampionshipTimeInfo) GetShow() uint64 {
	if x != nil {
		return x.Show
	}
	return 0
}

type ChampionshipNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket                `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	CreateTime uint64                  `protobuf:"varint,2,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"` // 锦标赛活动开启时间
	Expire     uint64                  `protobuf:"varint,3,opt,name=Expire,proto3" json:"Expire,omitempty"`         // 活动有效时长
	List       []*ChampionshipTimeInfo `protobuf:"bytes,4,rep,name=List,proto3" json:"List,omitempty"`              // 第一名信息
}

func (x *ChampionshipNotify) Reset() {
	*x = ChampionshipNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChampionshipNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChampionshipNotify) ProtoMessage() {}

func (x *ChampionshipNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChampionshipNotify.ProtoReflect.Descriptor instead.
func (*ChampionshipNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{267}
}

func (x *ChampionshipNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChampionshipNotify) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ChampionshipNotify) GetExpire() uint64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *ChampionshipNotify) GetList() []*ChampionshipTimeInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 活动列表同步
type ActivityListNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead   *IPacket                `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ActivityList []*PBPlayerActivityInfo `protobuf:"bytes,2,rep,name=ActivityList,proto3" json:"ActivityList,omitempty"`   // 活动列表
	DelIdList    []uint32                `protobuf:"varint,3,rep,packed,name=DelIdList,proto3" json:"DelIdList,omitempty"` // 活动结束的列表
}

func (x *ActivityListNotify) Reset() {
	*x = ActivityListNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityListNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityListNotify) ProtoMessage() {}

func (x *ActivityListNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityListNotify.ProtoReflect.Descriptor instead.
func (*ActivityListNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{268}
}

func (x *ActivityListNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ActivityListNotify) GetActivityList() []*PBPlayerActivityInfo {
	if x != nil {
		return x.ActivityList
	}
	return nil
}

func (x *ActivityListNotify) GetDelIdList() []uint32 {
	if x != nil {
		return x.DelIdList
	}
	return nil
}

// 新增活动数据同步
type ActivityDataNewNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead   *IPacket                `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ActivityType uint32                  `protobuf:"varint,2,opt,name=ActivityType,proto3" json:"ActivityType,omitempty"` // 活动类型
	Info         *PBPlayerSystemActivity `protobuf:"bytes,3,opt,name=Info,proto3" json:"Info,omitempty"`                  // 新增活动
}

func (x *ActivityDataNewNotify) Reset() {
	*x = ActivityDataNewNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDataNewNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDataNewNotify) ProtoMessage() {}

func (x *ActivityDataNewNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDataNewNotify.ProtoReflect.Descriptor instead.
func (*ActivityDataNewNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{269}
}

func (x *ActivityDataNewNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ActivityDataNewNotify) GetActivityType() uint32 {
	if x != nil {
		return x.ActivityType
	}
	return 0
}

func (x *ActivityDataNewNotify) GetInfo() *PBPlayerSystemActivity {
	if x != nil {
		return x.Info
	}
	return nil
}

// 活动红点同步
type ActivityRedNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	IdList     []uint32 `protobuf:"varint,2,rep,packed,name=IdList,proto3" json:"IdList,omitempty"` // 活动类型 活动ID列表
}

func (x *ActivityRedNotify) Reset() {
	*x = ActivityRedNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityRedNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityRedNotify) ProtoMessage() {}

func (x *ActivityRedNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityRedNotify.ProtoReflect.Descriptor instead.
func (*ActivityRedNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{270}
}

func (x *ActivityRedNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ActivityRedNotify) GetIdList() []uint32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

// 活动打开请求
type ActivityOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"` // ID
}

func (x *ActivityOpenRequest) Reset() {
	*x = ActivityOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityOpenRequest) ProtoMessage() {}

func (x *ActivityOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityOpenRequest.ProtoReflect.Descriptor instead.
func (*ActivityOpenRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{271}
}

func (x *ActivityOpenRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ActivityOpenRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 活动打开返回
type ActivityOpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`            // ID
	JsonData   []string `protobuf:"bytes,3,rep,name=JsonData,proto3" json:"JsonData,omitempty"` // json数据
}

func (x *ActivityOpenResponse) Reset() {
	*x = ActivityOpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityOpenResponse) ProtoMessage() {}

func (x *ActivityOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityOpenResponse.ProtoReflect.Descriptor instead.
func (*ActivityOpenResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{272}
}

func (x *ActivityOpenResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ActivityOpenResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityOpenResponse) GetJsonData() []string {
	if x != nil {
		return x.JsonData
	}
	return nil
}

// 活动免费奖励请求
type ActivityFreePrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"` // ID
}

func (x *ActivityFreePrizeRequest) Reset() {
	*x = ActivityFreePrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityFreePrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityFreePrizeRequest) ProtoMessage() {}

func (x *ActivityFreePrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityFreePrizeRequest.ProtoReflect.Descriptor instead.
func (*ActivityFreePrizeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{273}
}

func (x *ActivityFreePrizeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ActivityFreePrizeRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 活动免费奖励返回
type ActivityFreePrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead         *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id                 uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`                                 // ID
	NextDailyPrizeTime uint64   `protobuf:"varint,4,opt,name=NextDailyPrizeTime,proto3" json:"NextDailyPrizeTime,omitempty"` // 下次奖励时间
}

func (x *ActivityFreePrizeResponse) Reset() {
	*x = ActivityFreePrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityFreePrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityFreePrizeResponse) ProtoMessage() {}

func (x *ActivityFreePrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityFreePrizeResponse.ProtoReflect.Descriptor instead.
func (*ActivityFreePrizeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{274}
}

func (x *ActivityFreePrizeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ActivityFreePrizeResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityFreePrizeResponse) GetNextDailyPrizeTime() uint64 {
	if x != nil {
		return x.NextDailyPrizeTime
	}
	return 0
}

// 成长之路领奖请求
type GrowRoadTaskPrizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32   `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`         // 活动ID growroad表的ID
	TaskId     uint32   `protobuf:"varint,3,opt,name=TaskId,proto3" json:"TaskId,omitempty"` // 任务ID
}

func (x *GrowRoadTaskPrizeRequest) Reset() {
	*x = GrowRoadTaskPrizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrowRoadTaskPrizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrowRoadTaskPrizeRequest) ProtoMessage() {}

func (x *GrowRoadTaskPrizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrowRoadTaskPrizeRequest.ProtoReflect.Descriptor instead.
func (*GrowRoadTaskPrizeRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{275}
}

func (x *GrowRoadTaskPrizeRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GrowRoadTaskPrizeRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GrowRoadTaskPrizeRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// 成长之路领奖返回
type GrowRoadTaskPrizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead    *IPacket         `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id            uint32           `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`                      // 活动ID growroad表的ID
	TaskStageInfo *PBTaskStageInfo `protobuf:"bytes,4,opt,name=TaskStageInfo,proto3" json:"TaskStageInfo,omitempty"` // 任务数据
}

func (x *GrowRoadTaskPrizeResponse) Reset() {
	*x = GrowRoadTaskPrizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrowRoadTaskPrizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrowRoadTaskPrizeResponse) ProtoMessage() {}

func (x *GrowRoadTaskPrizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrowRoadTaskPrizeResponse.ProtoReflect.Descriptor instead.
func (*GrowRoadTaskPrizeResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{276}
}

func (x *GrowRoadTaskPrizeResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *GrowRoadTaskPrizeResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GrowRoadTaskPrizeResponse) GetTaskStageInfo() *PBTaskStageInfo {
	if x != nil {
		return x.TaskStageInfo
	}
	return nil
}

// 直购礼包新增返回
type ChargeGiftBuyNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32    `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`          // 活动ID
	BuyInfo    *PBU32U32 `protobuf:"bytes,3,opt,name=BuyInfo,proto3" json:"BuyInfo,omitempty"` // 礼包ID|数量
}

func (x *ChargeGiftBuyNotify) Reset() {
	*x = ChargeGiftBuyNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeGiftBuyNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeGiftBuyNotify) ProtoMessage() {}

func (x *ChargeGiftBuyNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeGiftBuyNotify.ProtoReflect.Descriptor instead.
func (*ChargeGiftBuyNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{277}
}

func (x *ChargeGiftBuyNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *ChargeGiftBuyNotify) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChargeGiftBuyNotify) GetBuyInfo() *PBU32U32 {
	if x != nil {
		return x.BuyInfo
	}
	return nil
}

// 开服特惠礼包购买返回
type OpenServerGiftBuyNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket  `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	Id         uint32    `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`          // sID
	GiftId     uint32    `protobuf:"varint,3,opt,name=GiftId,proto3" json:"GiftId,omitempty"`  // 礼包ID
	BuyInfo    *PBU32U32 `protobuf:"bytes,4,opt,name=BuyInfo,proto3" json:"BuyInfo,omitempty"` // id|数量
}

func (x *OpenServerGiftBuyNotify) Reset() {
	*x = OpenServerGiftBuyNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenServerGiftBuyNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenServerGiftBuyNotify) ProtoMessage() {}

func (x *OpenServerGiftBuyNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenServerGiftBuyNotify.ProtoReflect.Descriptor instead.
func (*OpenServerGiftBuyNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{278}
}

func (x *OpenServerGiftBuyNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *OpenServerGiftBuyNotify) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpenServerGiftBuyNotify) GetGiftId() uint32 {
	if x != nil {
		return x.GiftId
	}
	return 0
}

func (x *OpenServerGiftBuyNotify) GetBuyInfo() *PBU32U32 {
	if x != nil {
		return x.BuyInfo
	}
	return nil
}

// 开服特惠礼包新增返回
type OpenServerGiftNewNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket              `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	SId        uint32                `protobuf:"varint,2,opt,name=SId,proto3" json:"SId,omitempty"`          // 活动ID
	GiftInfo   *PBOpenServerGiftInfo `protobuf:"bytes,3,opt,name=GiftInfo,proto3" json:"GiftInfo,omitempty"` // 礼包ID|数量
}

func (x *OpenServerGiftNewNotify) Reset() {
	*x = OpenServerGiftNewNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenServerGiftNewNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenServerGiftNewNotify) ProtoMessage() {}

func (x *OpenServerGiftNewNotify) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenServerGiftNewNotify.ProtoReflect.Descriptor instead.
func (*OpenServerGiftNewNotify) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{279}
}

func (x *OpenServerGiftNewNotify) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *OpenServerGiftNewNotify) GetSId() uint32 {
	if x != nil {
		return x.SId
	}
	return 0
}

func (x *OpenServerGiftNewNotify) GetGiftInfo() *PBOpenServerGiftInfo {
	if x != nil {
		return x.GiftInfo
	}
	return nil
}

// ******************冒险奖励*************************
type AdventureRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
	ID         uint32   `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`       // 活动ID
	CfgID      uint32   `protobuf:"varint,3,opt,name=CfgID,proto3" json:"CfgID,omitempty"` // 奖励配置ID
}

func (x *AdventureRewardRequest) Reset() {
	*x = AdventureRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdventureRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdventureRewardRequest) ProtoMessage() {}

func (x *AdventureRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdventureRewardRequest.ProtoReflect.Descriptor instead.
func (*AdventureRewardRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{280}
}

func (x *AdventureRewardRequest) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

func (x *AdventureRewardRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdventureRewardRequest) GetCfgID() uint32 {
	if x != nil {
		return x.CfgID
	}
	return 0
}

// 返回恭喜获得
type AdventureRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketHead *IPacket `protobuf:"bytes,1,opt,name=PacketHead,proto3" json:"PacketHead,omitempty"`
}

func (x *AdventureRewardResponse) Reset() {
	*x = AdventureRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdventureRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdventureRewardResponse) ProtoMessage() {}

func (x *AdventureRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdventureRewardResponse.ProtoReflect.Descriptor instead.
func (*AdventureRewardResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{281}
}

func (x *AdventureRewardResponse) GetPacketHead() *IPacket {
	if x != nil {
		return x.PacketHead
	}
	return nil
}

var File_client_proto protoreflect.FileDescriptor

var file_client_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x54, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x57, 0x0a,
	0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63,
	0x76, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x52, 0x65, 0x63,
	0x76, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x43, 0x75, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x96, 0x01, 0x0a, 0x13, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x72, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x3a, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x42, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x79, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x0d, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x64, 0x76, 0x65, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x41, 0x64, 0x76, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7d, 0x0a, 0x0e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x41, 0x64, 0x76,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x41,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x41, 0x64, 0x76, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7b, 0x0a, 0x0c, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x79, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x4a, 0x73, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x80, 0x01,
	0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x76,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x69, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x59, 0x0a, 0x16, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x17, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x49, 0x64, 0x22, 0x6e, 0x0a, 0x0d, 0x47, 0x6d, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x47, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x22, 0x41, 0x0a, 0x0e, 0x47, 0x6d, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x50, 0x72, 0x69, 0x7a, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x31, 0x0a, 0x09,
	0x44, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x44, 0x6f, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x44, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x37, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x42, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x73,
	0x73, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x49, 0x73, 0x44, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x44,
	0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x43, 0x75, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x40,
	0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x22, 0x79, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52,
	0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x0c,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x49, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73,
	0x4e, 0x65, 0x77, 0x12, 0x2e, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x50, 0x42, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x06, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x22, 0x5e, 0x0a, 0x0f, 0x50, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x43, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x6a, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x4d,
	0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x4d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x04,
	0x4d, 0x61, 0x69, 0x6c, 0x22, 0x49, 0x0a, 0x16, 0x4f, 0x6e, 0x65, 0x6b, 0x65, 0x79, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22,
	0x76, 0x0a, 0x17, 0x4f, 0x6e, 0x65, 0x6b, 0x65, 0x79, 0x41, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x4d,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x4d, 0x61, 0x69, 0x6c,
	0x52, 0x05, 0x4d, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x5b, 0x0a, 0x10, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4d, 0x61,
	0x69, 0x6c, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x11, 0x41, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x4d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x04,
	0x4d, 0x61, 0x69, 0x6c, 0x22, 0x4a, 0x0a, 0x17, 0x4f, 0x6e, 0x65, 0x6b, 0x65, 0x79, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x22, 0x65, 0x0a, 0x18, 0x4f, 0x6e, 0x65, 0x6b, 0x65, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07,
	0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x5c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4d,
	0x61, 0x69, 0x6c, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4d, 0x61,
	0x69, 0x6c, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x10, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x0e, 0x49,
	0x74, 0x65, 0x6d, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x75, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67,
	0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x55,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x55, 0x0a, 0x12, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d,
	0x55, 0x73, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x49,
	0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x41, 0x64, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x8b, 0x01, 0x0a, 0x13, 0x49, 0x74, 0x65,
	0x6d, 0x55, 0x73, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x55, 0x73, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x36, 0x0a,
	0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x42, 0x55, 0x33, 0x32, 0x55, 0x33, 0x32, 0x52, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x36, 0x0a,
	0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x42, 0x55, 0x33, 0x32, 0x55, 0x33, 0x32, 0x52, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x0f, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x59, 0x0a, 0x10, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x0b, 0x52,
	0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x52,
	0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x89, 0x02, 0x0a, 0x0c, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x53, 0x65, 0x6c,
	0x66, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x53, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0xf6, 0x01, 0x0a, 0x11,
	0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x44, 0x6f, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x6d, 0x44, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x44, 0x6f, 0x69, 0x6e,
	0x67, 0x12, 0x31, 0x0a, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x50, 0x42, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x12, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x10,
	0x52, 0x61, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x73, 0x0a, 0x0e, 0x42,
	0x6f, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d,
	0x22, 0x91, 0x01, 0x0a, 0x0f, 0x42, 0x6f, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x41,
	0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x18, 0x42, 0x6f, 0x78, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x22, 0xb0, 0x01, 0x0a, 0x19, 0x42, 0x6f, 0x78, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x65, 0x65, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x4e, 0x65, 0x65, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x52, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x22, 0x48, 0x0a, 0x15, 0x4d, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x73, 0x6b,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x84,
	0x01, 0x0a, 0x16, 0x4d, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x4d, 0x61,
	0x69, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x4d, 0x61, 0x69,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x7b, 0x0a, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x22, 0x61, 0x0a, 0x16, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x16, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54,
	0x61, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x31, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50,
	0x42, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x4d, 0x0a, 0x1a, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x6e, 0x0a, 0x1b, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x69,
	0x7a, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x50,
	0x72, 0x69, 0x7a, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x7f, 0x0a, 0x10, 0x53, 0x65, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x3a,
	0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x50, 0x42, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x44, 0x0a, 0x11, 0x53, 0x65,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x22, 0x62, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x44, 0x22, 0x63, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x22, 0x71, 0x0a, 0x0c, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x07, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x52, 0x07, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x22, 0x79, 0x0a, 0x11,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x50, 0x42, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52,
	0x06, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x66,
	0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x6a, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x75, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x55, 0x33, 0x32, 0x55, 0x36, 0x34, 0x52, 0x08, 0x53, 0x68,
	0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x70,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x68,
	0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x68,
	0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x70, 0x4f,
	0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x47, 0x6f, 0x6f, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x53, 0x68, 0x6f, 0x70,
	0x47, 0x6f, 0x6f, 0x64, 0x43, 0x66, 0x67, 0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x99, 0x01, 0x0a, 0x16, 0x53, 0x68, 0x6f, 0x70, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x47, 0x6f, 0x6f,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x55, 0x33, 0x32,
	0x55, 0x33, 0x32, 0x52, 0x08, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7c, 0x0a,
	0x13, 0x53, 0x68, 0x6f, 0x70, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x44, 0x22, 0x99, 0x01, 0x0a, 0x14,
	0x53, 0x68, 0x6f, 0x70, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x42,
	0x75, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x42,
	0x75, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x70,
	0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53,
	0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x5e, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xa1, 0x01, 0x0a, 0x18, 0x53, 0x68, 0x6f, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x6e, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x53,
	0x68, 0x6f, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x53,
	0x68, 0x6f, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x53, 0x68, 0x6f,
	0x70, 0x47, 0x6f, 0x6f, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x70, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53,
	0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x04, 0x53, 0x68, 0x6f, 0x70, 0x22, 0x79, 0x0a,
	0x12, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x46, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x49, 0x73, 0x46, 0x72, 0x65, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x13, 0x53, 0x68, 0x6f,
	0x70, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a,
	0x0b, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x50, 0x42, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xa7, 0x01, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53,
	0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x53, 0x68,
	0x6f, 0x70, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x95, 0x01, 0x0a, 0x0a, 0x44,
	0x72, 0x61, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x44, 0x72,
	0x61, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x44, 0x72,
	0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x44, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x44, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x44, 0x65, 0x6c, 0x44, 0x72, 0x61, 0x77, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x0b, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x44,
	0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x55,
	0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x49, 0x73, 0x55, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a,
	0x0c, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x34,
	0x0a, 0x08, 0x44, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x42, 0x44, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x44, 0x72, 0x61, 0x77,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x14, 0x44, 0x72, 0x61, 0x77, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x44,
	0x72, 0x61, 0x77, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x15, 0x44, 0x72, 0x61, 0x77, 0x50, 0x72,
	0x69, 0x7a, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x44, 0x72, 0x61,
	0x77, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x70, 0x0a, 0x15, 0x44, 0x72, 0x61, 0x77, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x16, 0x44, 0x72, 0x61, 0x77, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x44, 0x72, 0x61, 0x77, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x0c, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x52, 0x06, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x22, 0x7f, 0x0a, 0x12, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4e, 0x65, 0x69, 0x67, 0x6f, 0x75, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x4e, 0x65, 0x69, 0x67, 0x6f, 0x75, 0x22, 0x94, 0x01, 0x0a,
	0x13, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x4c, 0x0a, 0x0e, 0x42, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x75,
	0x61, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x42, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x75, 0x61, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x0e, 0x42, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x75, 0x61, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x66,
	0x0a, 0x13, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x45, 0x0a,
	0x0f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x52, 0x0f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x70, 0x0a, 0x17, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x18, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72,
	0x69, 0x7a, 0x65, 0x44, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72,
	0x69, 0x7a, 0x65, 0x44, 0x61, 0x79, 0x22, 0x6e, 0x0a, 0x0b, 0x42, 0x50, 0x4e, 0x65, 0x77, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x42, 0x50, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x42, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x42, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x10, 0x42, 0x50, 0x4e, 0x65, 0x77,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x42, 0x50, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x42, 0x50,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x42, 0x50, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x07, 0x44, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6e, 0x0a, 0x0d, 0x42, 0x50, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x42,
	0x50, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x42, 0x50, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x0f, 0x42, 0x50,
	0x41, 0x63, 0x69, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x42, 0x50, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x42, 0x50, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x73, 0x0a, 0x0e, 0x42, 0x50, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x50, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x42, 0x50, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x0f, 0x42, 0x50, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x50,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x42, 0x50, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x4e, 0x6f, 0x72, 0x61, 0x6d, 0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x4e, 0x6f, 0x72, 0x61, 0x6d, 0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x78, 0x74, 0x72, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x65, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x36, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x50, 0x42, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x44, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x44,
	0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x84, 0x01,
	0x0a, 0x17, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x50, 0x72, 0x69, 0x7a, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x42, 0x0a,
	0x12, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x80, 0x01, 0x0a, 0x1b, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x48, 0x65, 0x72, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x48,
	0x65, 0x72, 0x6f, 0x73, 0x22, 0x4f, 0x0a, 0x1c, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x7f, 0x0a, 0x1a, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x48, 0x65, 0x72, 0x6f, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x72,
	0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x48, 0x65, 0x72, 0x6f, 0x73, 0x22, 0x4d, 0x0a, 0x1a, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x4e, 0x0a, 0x1b, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x65,
	0x63, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x3c,
	0x0a, 0x0c, 0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x65, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x65, 0x63, 0x68, 0x52, 0x0c,
	0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x65, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x14,
	0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x65, 0x63, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x15, 0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x65, 0x63,
	0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x77, 0x0a,
	0x14, 0x48, 0x6f, 0x6f, 0x6b, 0x54, 0x65, 0x63, 0x68, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x15, 0x48, 0x6f, 0x6f, 0x6b, 0x54,
	0x65, 0x63, 0x68, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x3a, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x11, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x31, 0x0a, 0x06, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x06, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x22, 0x6d, 0x0a, 0x12, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x50,
	0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x49, 0x44, 0x22, 0x46, 0x0a, 0x13, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x13,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0x47, 0x0a, 0x14, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x63, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x84,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7f, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x73,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x73,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x22, 0xa3, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x54, 0x61,
	0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x76, 0x65, 0x6e,
	0x44, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x36,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50,
	0x42, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x41,
	0x64, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x44, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x8f,
	0x01, 0x0a, 0x12, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x47, 0x69, 0x66, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x55, 0x33, 0x32, 0x55, 0x33, 0x32,
	0x52, 0x08, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x5d, 0x0a, 0x1a, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x22,
	0x7e, 0x0a, 0x1b, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x73, 0x0a, 0x18, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x50,
	0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61,
	0x79, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x71,
	0x0a, 0x16, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x42, 0x75, 0x79, 0x47, 0x69, 0x66,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x69, 0x66,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x47, 0x69, 0x66, 0x74, 0x49,
	0x64, 0x22, 0xa4, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x42, 0x75,
	0x79, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x55, 0x33, 0x32, 0x55, 0x33, 0x32, 0x52, 0x08,
	0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x52, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x09, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x71, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22,
	0x9d, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x41, 0x64, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0x82, 0x01, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x75, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x22, 0x65, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7c, 0x0a, 0x17, 0x50,
	0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x47, 0x72, 0x61, 0x64, 0x65, 0x22, 0x64, 0x0a, 0x15, 0x50, 0x72, 0x6f,
	0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x83, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x65,
	0x61, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x65, 0x61, 0x6b, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x65, 0x61, 0x6b,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x85, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x86, 0x01,
	0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x75,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xa1, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x66, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xa2, 0x01, 0x0a, 0x1b, 0x50,
	0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0x6f, 0x0a, 0x20, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x4f, 0x6e, 0x65, 0x6b, 0x65, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xb6, 0x01, 0x0a, 0x21, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x74, 0x4f, 0x6e, 0x65, 0x6b, 0x65, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x50, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x50, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x16, 0x50, 0x72,
	0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x53, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x53, 0x6e, 0x22, 0x92, 0x01,
	0x0a, 0x17, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72,
	0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x53, 0x6e, 0x22, 0x6d, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4f, 0x6e, 0x65, 0x6b, 0x65, 0x79, 0x55, 0x6e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x90, 0x01, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4f, 0x6e, 0x65, 0x6b, 0x65, 0x79, 0x55, 0x6e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x71, 0x75, 0x69, 0x70, 0x53, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x45, 0x71, 0x75, 0x69, 0x70, 0x53, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xa3, 0x01, 0x0a, 0x1c, 0x50, 0x72,
	0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0x70, 0x0a, 0x21, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x4f, 0x6e, 0x65, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xb7, 0x01, 0x0a, 0x22, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x74, 0x4f, 0x6e, 0x65, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f,
	0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f,
	0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x50, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x50, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x1f,
	0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x54, 0x75, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x50, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x75, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x22, 0xa7, 0x01, 0x0a, 0x20, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x54, 0x75, 0x70,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72,
	0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x85,
	0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x66, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x50, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x50, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x0f, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x37,
	0x0a, 0x09, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x42, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x48, 0x6f, 0x6f,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x48, 0x6f, 0x6f, 0x6b, 0x22,
	0x6c, 0x0a, 0x19, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x60, 0x0a,
	0x15, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x61, 0x0a, 0x16, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x71, 0x0a, 0x16, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x75, 0x79, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x43, 0x75, 0x72, 0x50, 0x6f, 0x73, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x43, 0x75, 0x72, 0x50, 0x6f, 0x73, 0x42, 0x75, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6c, 0x0a, 0x17, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x75, 0x79, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x50, 0x6f, 0x73, 0x42, 0x75, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x6e, 0x0a, 0x19, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x1a, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x14, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49,
	0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x22, 0x70, 0x0a, 0x15, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x53, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x22, 0x5c, 0x0a, 0x19, 0x48, 0x6f, 0x6f, 0x6b, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x53, 0x6e, 0x22, 0x5d, 0x0a, 0x1a, 0x48, 0x6f, 0x6f, 0x6b, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x53, 0x6e, 0x22, 0x67, 0x0a, 0x0a, 0x48, 0x65, 0x72, 0x6f, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x42, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6e, 0x0a,
	0x11, 0x48, 0x65, 0x72, 0x6f, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x42, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67, 0x0a,
	0x14, 0x48, 0x65, 0x72, 0x6f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x72, 0x0a, 0x11, 0x48, 0x65, 0x72, 0x6f, 0x55, 0x70,
	0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x55, 0x73, 0x65, 0x53, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x09, 0x55, 0x73, 0x65, 0x53, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x12, 0x48,
	0x65, 0x72, 0x6f, 0x55, 0x70, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x53, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x55, 0x73, 0x65, 0x53, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x15, 0x48, 0x65, 0x72, 0x6f, 0x41, 0x75, 0x74, 0x6f,
	0x55, 0x70, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x9b,
	0x01, 0x0a, 0x16, 0x48, 0x65, 0x72, 0x6f, 0x41, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x53, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x48, 0x65,
	0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x55, 0x33,
	0x32, 0x55, 0x33, 0x32, 0x52, 0x08, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x53, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x53, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x16,
	0x48, 0x65, 0x72, 0x6f, 0x41, 0x77, 0x61, 0x6b, 0x65, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0x76, 0x0a, 0x17, 0x48, 0x65, 0x72, 0x6f, 0x41, 0x77, 0x61, 0x6b, 0x65,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x53, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x7c, 0x0a, 0x17, 0x48,
	0x65, 0x72, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x65, 0x61, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x7d, 0x0a, 0x18, 0x48, 0x65, 0x72,
	0x6f, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x7b, 0x0a, 0x16, 0x48, 0x65, 0x72, 0x6f,
	0x47, 0x61, 0x6d, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x42, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x04, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x55, 0x0a, 0x12, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x53, 0x6e, 0x22, 0x6a, 0x0a, 0x13,
	0x48, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x62, 0x69, 0x72, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x53, 0x74, 0x61, 0x72, 0x22, 0x77, 0x0a, 0x0e, 0x48, 0x65, 0x72, 0x6f,
	0x42, 0x6f, 0x6f, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x48,
	0x65, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x48,
	0x65, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x08, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x6f, 0x6f,
	0x6b, 0x22, 0x60, 0x0a, 0x15, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x48,
	0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x72,
	0x6f, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x16, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x34,
	0x0a, 0x08, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x42, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x08, 0x48, 0x65, 0x72, 0x6f,
	0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x60, 0x0a, 0x15, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b,
	0x55, 0x70, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x16, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x6f,
	0x6f, 0x6b, 0x55, 0x70, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x34, 0x0a, 0x08, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x50, 0x42, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x08, 0x48,
	0x65, 0x72, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0xc3, 0x01, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x40, 0x0a,
	0x0e, 0x53, 0x79, 0x65, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x6d, 0x53, 0x79, 0x65, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0e, 0x53, 0x79, 0x65, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x3c, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb1, 0x01,
	0x0a, 0x0f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xc3, 0x01, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x34, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x67, 0x68, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x75,
	0x0a, 0x10, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x11, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x0a,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xac, 0x01, 0x0a, 0x13,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61,
	0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xef, 0x01, 0x0a, 0x14, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61,
	0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9b, 0x01, 0x0a,
	0x18, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72,
	0x69, 0x7a, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x50, 0x72, 0x69, 0x7a, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x19, 0x4e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x69,
	0x7a, 0x65, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x50,
	0x72, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x69,
	0x7a, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0a, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a,
	0x18, 0x48, 0x6f, 0x6f, 0x6b, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x4d,
	0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x66, 0x0a, 0x19, 0x48, 0x6f,
	0x6f, 0x6b, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x61, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x75, 0x74, 0x6f,
	0x4d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x41, 0x75, 0x74, 0x6f, 0x4d,
	0x61, 0x70, 0x22, 0x7b, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x52, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x52, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x06, 0x52, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x22,
	0xb4, 0x01, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x52, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x34, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x06, 0x52, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x06, 0x52, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x22, 0x6c, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x75,
	0x6e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x75, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x6d, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x75, 0x6e, 0x42,
	0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x75, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x48, 0x6f, 0x6f, 0x6b, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x4c, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x45, 0x0a, 0x0b,
	0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4b, 0x69, 0x6c, 0x6c, 0x4d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x16, 0x48, 0x6f, 0x6f, 0x6b, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x4c, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x94,
	0x01, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x46, 0x0a,
	0x0e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x1a, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x46, 0x0a, 0x0e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0e, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x81, 0x01,
	0x0a, 0x12, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61,
	0x6c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x09, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x7b, 0x0a, 0x0d, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61,
	0x6c, 0x52, 0x0b, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67,
	0x0a, 0x1a, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44, 0x22, 0x84, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x79, 0x73,
	0x74, 0x61, 0x6c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x66,
	0x0a, 0x19, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44, 0x22, 0x67, 0x0a, 0x1a, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61,
	0x6c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44, 0x22,
	0x67, 0x0a, 0x16, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72,
	0x79, 0x73, 0x74, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43,
	0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x49, 0x44, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x79,
	0x73, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61,
	0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x53, 0x74, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x43, 0x75, 0x72, 0x53, 0x74, 0x61, 0x72, 0x22, 0x66, 0x0a,
	0x15, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x79, 0x73, 0x74,
	0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x79, 0x73,
	0x74, 0x61, 0x6c, 0x49, 0x44, 0x22, 0x83, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61,
	0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x49, 0x0a, 0x16, 0x42,
	0x6f, 0x6f, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x17, 0x42, 0x6f, 0x6f, 0x6b, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x42, 0x6f,
	0x6f, 0x6b, 0x52, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6a, 0x0a, 0x19,
	0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72,
	0x79, 0x73, 0x74, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43,
	0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x49, 0x44, 0x22, 0x77, 0x0a, 0x1a, 0x42, 0x6f, 0x6f, 0x6b,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x22, 0x66, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x4b, 0x0a, 0x18, 0x47, 0x65, 0x6e,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x65, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x44, 0x22, 0x4a, 0x0a,
	0x17, 0x47, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x78, 0x0a, 0x15, 0x47, 0x65, 0x6e,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x48,
	0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x22, 0xc2, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x6e,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x44, 0x12,
	0x34, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x49, 0x0a,
	0x16, 0x47, 0x65, 0x6e, 0x65, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x6e,
	0x65, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x49, 0x44, 0x22, 0x4a, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73,
	0x22, 0x4e, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x22, 0x87, 0x01, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x43, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x52,
	0x09, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x22, 0x4d, 0x0a, 0x1a, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x53, 0x74, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x22, 0x7c, 0x0a, 0x1b, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x53, 0x74, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x69, 0x7a, 0x65,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x18, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x42, 0x6f, 0x73, 0x73, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x22, 0x72, 0x0a, 0x19, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73,
	0x73, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x75, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x15, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x42, 0x6f, 0x73, 0x73, 0x53, 0x77, 0x65, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73,
	0x53, 0x77, 0x65, 0x65, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x1b, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x22, 0x79, 0x0a, 0x1c, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9a, 0x01,
	0x0a, 0x19, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x06,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x49, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x49, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x22, 0xae, 0x02, 0x0a, 0x1a, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x45, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x4d, 0x61, 0x78, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x61, 0x78, 0x44, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72,
	0x69, 0x7a, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x41, 0x64, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x16,
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x8c, 0x01, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x40,
	0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x50, 0x42, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x42, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x6f, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x42, 0x55, 0x33, 0x32, 0x55, 0x36, 0x34, 0x52, 0x0d, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x42, 0x6f, 0x73, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x84, 0x01, 0x0a, 0x1d, 0x43, 0x68, 0x61,
	0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x52,
	0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22,
	0x84, 0x01, 0x0a, 0x1e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x4a, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x22, 0x60, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61,
	0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x52, 0x61,
	0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x46, 0x69, 0x72, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x22, 0x7d, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x30, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x52, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x52, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x22, 0xaf, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61,
	0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xab, 0x01, 0x0a, 0x12, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x46, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65,
	0x6c, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x44,
	0x65, 0x6c, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x65, 0x77, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x5c, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x56, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x18,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x72, 0x65, 0x65, 0x50, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x72, 0x65, 0x65, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x4e, 0x65, 0x78, 0x74,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x4e, 0x65, 0x78, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50,
	0x72, 0x69, 0x7a, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x73, 0x0a, 0x18, 0x47, 0x72, 0x6f, 0x77,
	0x52, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xa1, 0x01,
	0x0a, 0x19, 0x47, 0x72, 0x6f, 0x77, 0x52, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0d,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x50, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x88, 0x01, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x47, 0x69, 0x66, 0x74,
	0x42, 0x75, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x07, 0x42, 0x75,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x55, 0x33, 0x32,
	0x55, 0x33, 0x32, 0x52, 0x07, 0x42, 0x75, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa4, 0x01, 0x0a,
	0x17, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x42,
	0x75, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x69, 0x66,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x47, 0x69, 0x66, 0x74, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x07, 0x42, 0x75, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x50, 0x42, 0x55, 0x33, 0x32, 0x55, 0x33, 0x32, 0x52, 0x07, 0x42, 0x75, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x17, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x4e, 0x65, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x53, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x53,
	0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x42, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x6f, 0x0a, 0x16, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x66, 0x67, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43, 0x66,
	0x67, 0x49, 0x44, 0x22, 0x4a, 0x0a, 0x17, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x42,
	0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_proto_rawDescOnce sync.Once
	file_client_proto_rawDescData = file_client_proto_rawDesc
)

func file_client_proto_rawDescGZIP() []byte {
	file_client_proto_rawDescOnce.Do(func() {
		file_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_proto_rawDescData)
	})
	return file_client_proto_rawDescData
}

var file_client_proto_msgTypes = make([]protoimpl.MessageInfo, 282)
var file_client_proto_goTypes = []interface{}{
	(*LoginRequest)(nil),                       // 0: client.LoginRequest
	(*LoginResponse)(nil),                      // 1: client.LoginResponse
	(*HeartbeatRequest)(nil),                   // 2: client.HeartbeatRequest
	(*HeartbeatResponse)(nil),                  // 3: client.HeartbeatResponse
	(*AllPlayerInfoNotify)(nil),                // 4: client.AllPlayerInfoNotify
	(*CommonNotify)(nil),                       // 5: client.CommonNotify
	(*ProtocolNameNotify)(nil),                 // 6: client.ProtocolNameNotify
	(*AdvertRequest)(nil),                      // 7: client.AdvertRequest
	(*AdvertResponse)(nil),                     // 8: client.AdvertResponse
	(*AdvertNotify)(nil),                       // 9: client.AdvertNotify
	(*ClientJsonNotify)(nil),                   // 10: client.ClientJsonNotify
	(*PlayerUpdateKvNotify)(nil),               // 11: client.PlayerUpdateKvNotify
	(*SystemOpenNotify)(nil),                   // 12: client.SystemOpenNotify
	(*SystemOpenPrizeRequest)(nil),             // 13: client.SystemOpenPrizeRequest
	(*SystemOpenPrizeResponse)(nil),            // 14: client.SystemOpenPrizeResponse
	(*GmFuncRequest)(nil),                      // 15: client.GmFuncRequest
	(*GmFuncResponse)(nil),                     // 16: client.GmFuncResponse
	(*CommonPrizeNotify)(nil),                  // 17: client.CommonPrizeNotify
	(*PassTimeNotify)(nil),                     // 18: client.PassTimeNotify
	(*NoticeRequest)(nil),                      // 19: client.NoticeRequest
	(*NoticeResponse)(nil),                     // 20: client.NoticeResponse
	(*NoticeNotify)(nil),                       // 21: client.NoticeNotify
	(*PageOpenRequest)(nil),                    // 22: client.PageOpenRequest
	(*PageOpenResponse)(nil),                   // 23: client.PageOpenResponse
	(*NewMailNotify)(nil),                      // 24: client.NewMailNotify
	(*OnekeyAwardMailRequest)(nil),             // 25: client.OnekeyAwardMailRequest
	(*OnekeyAwardMailResponse)(nil),            // 26: client.OnekeyAwardMailResponse
	(*AwardMailRequest)(nil),                   // 27: client.AwardMailRequest
	(*AwardMailResponse)(nil),                  // 28: client.AwardMailResponse
	(*OnekeyDeleteMailRequest)(nil),            // 29: client.OnekeyDeleteMailRequest
	(*OnekeyDeleteMailResponse)(nil),           // 30: client.OnekeyDeleteMailResponse
	(*DeleteMailRequest)(nil),                  // 31: client.DeleteMailRequest
	(*DeleteMailResponse)(nil),                 // 32: client.DeleteMailResponse
	(*ItemUpdateNotify)(nil),                   // 33: client.ItemUpdateNotify
	(*ItemBuyRequest)(nil),                     // 34: client.ItemBuyRequest
	(*ItemBuyResponse)(nil),                    // 35: client.ItemBuyResponse
	(*ItemUseRequest)(nil),                     // 36: client.ItemUseRequest
	(*ItemUseResponse)(nil),                    // 37: client.ItemUseResponse
	(*ItemUseShowRequest)(nil),                 // 38: client.ItemUseShowRequest
	(*ItemUseShowInfo)(nil),                    // 39: client.ItemUseShowInfo
	(*ItemUseShowResponse)(nil),                // 40: client.ItemUseShowResponse
	(*ItemSelectRequest)(nil),                  // 41: client.ItemSelectRequest
	(*ItemSelectResponse)(nil),                 // 42: client.ItemSelectResponse
	(*GiftCodeRequest)(nil),                    // 43: client.GiftCodeRequest
	(*GiftCodeResponse)(nil),                   // 44: client.GiftCodeResponse
	(*RankRequest)(nil),                        // 45: client.RankRequest
	(*RankResponse)(nil),                       // 46: client.RankResponse
	(*RankRewardRequest)(nil),                  // 47: client.RankRewardRequest
	(*RankRewardResponse)(nil),                 // 48: client.RankRewardResponse
	(*RankUpdateNotify)(nil),                   // 49: client.RankUpdateNotify
	(*BoxOpenRequest)(nil),                     // 50: client.BoxOpenRequest
	(*BoxOpenResponse)(nil),                    // 51: client.BoxOpenResponse
	(*BoxProgressRewardRequest)(nil),           // 52: client.BoxProgressRewardRequest
	(*BoxProgressRewardResponse)(nil),          // 53: client.BoxProgressRewardResponse
	(*MainTaskFinishRequest)(nil),              // 54: client.MainTaskFinishRequest
	(*MainTaskFinishResponse)(nil),             // 55: client.MainTaskFinishResponse
	(*DailyTaskNotify)(nil),                    // 56: client.DailyTaskNotify
	(*DailyTaskFinishRequest)(nil),             // 57: client.DailyTaskFinishRequest
	(*DailyTasFinishResponse)(nil),             // 58: client.DailyTasFinishResponse
	(*DailyTaskScorePrizeRequest)(nil),         // 59: client.DailyTaskScorePrizeRequest
	(*DailyTaskScorePrizeResponse)(nil),        // 60: client.DailyTaskScorePrizeResponse
	(*SetClientRequest)(nil),                   // 61: client.SetClientRequest
	(*SetClientResponse)(nil),                  // 62: client.SetClientResponse
	(*ChangeAvatarRequest)(nil),                // 63: client.ChangeAvatarRequest
	(*ChangeAvatarResponse)(nil),               // 64: client.ChangeAvatarResponse
	(*AvatarNotify)(nil),                       // 65: client.AvatarNotify
	(*AvatarFrameNotify)(nil),                  // 66: client.AvatarFrameNotify
	(*ChangeAvatarFrameRequest)(nil),           // 67: client.ChangeAvatarFrameRequest
	(*ChangeAvatarFrameResponse)(nil),          // 68: client.ChangeAvatarFrameResponse
	(*ChangePlayerNameRequest)(nil),            // 69: client.ChangePlayerNameRequest
	(*ChangePlayerNameResponse)(nil),           // 70: client.ChangePlayerNameResponse
	(*ShopListNotify)(nil),                     // 71: client.ShopListNotify
	(*ShopOpenRequest)(nil),                    // 72: client.ShopOpenRequest
	(*ShopOpenResponse)(nil),                   // 73: client.ShopOpenResponse
	(*ShopExchangeGoodNotify)(nil),             // 74: client.ShopExchangeGoodNotify
	(*ShopExchangeRequest)(nil),                // 75: client.ShopExchangeRequest
	(*ShopExchangeResponse)(nil),               // 76: client.ShopExchangeResponse
	(*ShopBuyRequest)(nil),                     // 77: client.ShopBuyRequest
	(*ShopBuyResponse)(nil),                    // 78: client.ShopBuyResponse
	(*ShopUpdateOneGoodsNotify)(nil),           // 79: client.ShopUpdateOneGoodsNotify
	(*ShopUpdateNotify)(nil),                   // 80: client.ShopUpdateNotify
	(*ShopRefreshRequest)(nil),                 // 81: client.ShopRefreshRequest
	(*ShopRefreshResponse)(nil),                // 82: client.ShopRefreshResponse
	(*ShopRefreshTimeNotify)(nil),              // 83: client.ShopRefreshTimeNotify
	(*DrawNotify)(nil),                         // 84: client.DrawNotify
	(*DrawRequest)(nil),                        // 85: client.DrawRequest
	(*DrawResponse)(nil),                       // 86: client.DrawResponse
	(*DrawPrizeInfoRequest)(nil),               // 87: client.DrawPrizeInfoRequest
	(*DrawPrizeInfoResponse)(nil),              // 88: client.DrawPrizeInfoResponse
	(*DrawScorePrizeRequest)(nil),              // 89: client.DrawScorePrizeRequest
	(*DrawScorePrizeResponse)(nil),             // 90: client.DrawScorePrizeResponse
	(*ChargeNotify)(nil),                       // 91: client.ChargeNotify
	(*ChargeOrderRequest)(nil),                 // 92: client.ChargeOrderRequest
	(*ChargeOrderResponse)(nil),                // 93: client.ChargeOrderResponse
	(*ChargeQueryNotify)(nil),                  // 94: client.ChargeQueryNotify
	(*ChargeQueryRequest)(nil),                 // 95: client.ChargeQueryRequest
	(*ChargeQueryResponse)(nil),                // 96: client.ChargeQueryResponse
	(*FirstChargeNotify)(nil),                  // 97: client.FirstChargeNotify
	(*FirstChargePrizeRequest)(nil),            // 98: client.FirstChargePrizeRequest
	(*FirstChargePrizeResponse)(nil),           // 99: client.FirstChargePrizeResponse
	(*BPNewNotify)(nil),                        // 100: client.BPNewNotify
	(*BPNewStageNotify)(nil),                   // 101: client.BPNewStageNotify
	(*BPValueNotify)(nil),                      // 102: client.BPValueNotify
	(*BPAcitiveNotify)(nil),                    // 103: client.BPAcitiveNotify
	(*BPPrizeRequest)(nil),                     // 104: client.BPPrizeRequest
	(*BPPrizeResponse)(nil),                    // 105: client.BPPrizeResponse
	(*ChargeCardNewNotify)(nil),                // 106: client.ChargeCardNewNotify
	(*ChargeCardUpdateNotify)(nil),             // 107: client.ChargeCardUpdateNotify
	(*ChargeCardPrizeRequest)(nil),             // 108: client.ChargeCardPrizeRequest
	(*ChargeCardPrizeResponse)(nil),            // 109: client.ChargeCardPrizeResponse
	(*BroadcastNotify)(nil),                    // 110: client.BroadcastNotify
	(*HeroBattleStarInfo)(nil),                 // 111: client.HeroBattleStarInfo
	(*HeroBattleStarChangeRequest)(nil),        // 112: client.HeroBattleStarChangeRequest
	(*HeroBattleStarChangeResponse)(nil),       // 113: client.HeroBattleStarChangeResponse
	(*HeroBattleStarChangeNotify)(nil),         // 114: client.HeroBattleStarChangeNotify
	(*OfflineIncomeRewardRequest)(nil),         // 115: client.OfflineIncomeRewardRequest
	(*OfflineIncomeRewardResponse)(nil),        // 116: client.OfflineIncomeRewardResponse
	(*HookTechLevelNotify)(nil),                // 117: client.HookTechLevelNotify
	(*HookTechLevelRequest)(nil),               // 118: client.HookTechLevelRequest
	(*HookTechLevelResponse)(nil),              // 119: client.HookTechLevelResponse
	(*HookTechSpeedRequest)(nil),               // 120: client.HookTechSpeedRequest
	(*HookTechSpeedResponse)(nil),              // 121: client.HookTechSpeedResponse
	(*EntryConditionNotify)(nil),               // 122: client.EntryConditionNotify
	(*EntryEffectNotify)(nil),                  // 123: client.EntryEffectNotify
	(*EntryUnlockRequest)(nil),                 // 124: client.EntryUnlockRequest
	(*EntryUnlockResponse)(nil),                // 125: client.EntryUnlockResponse
	(*EntryTriggerRequest)(nil),                // 126: client.EntryTriggerRequest
	(*EntryTriggerResponse)(nil),               // 127: client.EntryTriggerResponse
	(*GetPlayerDataRequest)(nil),               // 128: client.GetPlayerDataRequest
	(*GetPlayerDataResponse)(nil),              // 129: client.GetPlayerDataResponse
	(*SetPlayerDataRequest)(nil),               // 130: client.SetPlayerDataRequest
	(*SetPlayerDataResponse)(nil),              // 131: client.SetPlayerDataResponse
	(*AchieveTaskInfoNotify)(nil),              // 132: client.AchieveTaskInfoNotify
	(*SevenDayListNotify)(nil),                 // 133: client.SevenDayListNotify
	(*SevenDayGiftNotify)(nil),                 // 134: client.SevenDayGiftNotify
	(*SevenDayActivePrizeRequest)(nil),         // 135: client.SevenDayActivePrizeRequest
	(*SevenDayActivePrizeResponse)(nil),        // 136: client.SevenDayActivePrizeResponse
	(*SevenDayTaskPrizeRequest)(nil),           // 137: client.SevenDayTaskPrizeRequest
	(*SevenDayTaskPrizeResponse)(nil),          // 138: client.SevenDayTaskPrizeResponse
	(*SevenDayBuyGiftRequest)(nil),             // 139: client.SevenDayBuyGiftRequest
	(*SevenDayBuyGiftResponse)(nil),            // 140: client.SevenDayBuyGiftResponse
	(*UserRouteInfo)(nil),                      // 141: client.UserRouteInfo
	(*UpdateRouteNotify)(nil),                  // 142: client.UpdateRouteNotify
	(*ProfessionLevelRequest)(nil),             // 143: client.ProfessionLevelRequest
	(*ProfessionLevelResponse)(nil),            // 144: client.ProfessionLevelResponse
	(*ProfessionGradeRequest)(nil),             // 145: client.ProfessionGradeRequest
	(*ProfessionGradeResponse)(nil),            // 146: client.ProfessionGradeResponse
	(*ProfessionPeakRequest)(nil),              // 147: client.ProfessionPeakRequest
	(*ProfessionPeakResponse)(nil),             // 148: client.ProfessionPeakResponse
	(*ProfessionPeakLevelRequest)(nil),         // 149: client.ProfessionPeakLevelRequest
	(*ProfessionPeakLevelResponse)(nil),        // 150: client.ProfessionPeakLevelResponse
	(*ProfessionPartLevelRequest)(nil),         // 151: client.ProfessionPartLevelRequest
	(*ProfessionPartLevelResponse)(nil),        // 152: client.ProfessionPartLevelResponse
	(*ProfessionPartOnekeyLevelRequest)(nil),   // 153: client.ProfessionPartOnekeyLevelRequest
	(*ProfessionPartOnekeyLevelResponse)(nil),  // 154: client.ProfessionPartOnekeyLevelResponse
	(*ProfessionEquipRequest)(nil),             // 155: client.ProfessionEquipRequest
	(*ProfessionEquipResponse)(nil),            // 156: client.ProfessionEquipResponse
	(*ProfessionOnekeyUnEquipRequest)(nil),     // 157: client.ProfessionOnekeyUnEquipRequest
	(*ProfessionOnekeyUnEquipResponse)(nil),    // 158: client.ProfessionOnekeyUnEquipResponse
	(*ProfessionPartRefineRequest)(nil),        // 159: client.ProfessionPartRefineRequest
	(*ProfessionPartRefineResponse)(nil),       // 160: client.ProfessionPartRefineResponse
	(*ProfessionPartOnekeyRefineRequest)(nil),  // 161: client.ProfessionPartOnekeyRefineRequest
	(*ProfessionPartOnekeyRefineResponse)(nil), // 162: client.ProfessionPartOnekeyRefineResponse
	(*ProfessionPartRefineTupoRequest)(nil),    // 163: client.ProfessionPartRefineTupoRequest
	(*ProfessionPartRefineTupoResponse)(nil),   // 164: client.ProfessionPartRefineTupoResponse
	(*ProfessionPartResetRequest)(nil),         // 165: client.ProfessionPartResetRequest
	(*ProfessionPartResetResponse)(nil),        // 166: client.ProfessionPartResetResponse
	(*EquipmentNotify)(nil),                    // 167: client.EquipmentNotify
	(*EquipmentSplitScoreNotify)(nil),          // 168: client.EquipmentSplitScoreNotify
	(*EquipmentSplitRequest)(nil),              // 169: client.EquipmentSplitRequest
	(*EquipmentSplitResponse)(nil),             // 170: client.EquipmentSplitResponse
	(*EquipmentBuyPosRequest)(nil),             // 171: client.EquipmentBuyPosRequest
	(*EquipmentBuyPosResponse)(nil),            // 172: client.EquipmentBuyPosResponse
	(*EquipmentAutoSplitRequest)(nil),          // 173: client.EquipmentAutoSplitRequest
	(*EquipmentAutoSplitResponse)(nil),         // 174: client.EquipmentAutoSplitResponse
	(*EquipmentLockRequest)(nil),               // 175: client.EquipmentLockRequest
	(*EquipmentLockResponse)(nil),              // 176: client.EquipmentLockResponse
	(*HookEquipmentAwardRequest)(nil),          // 177: client.HookEquipmentAwardRequest
	(*HookEquipmentAwardResponse)(nil),         // 178: client.HookEquipmentAwardResponse
	(*HeroNotify)(nil),                         // 179: client.HeroNotify
	(*HeroNewStarNotify)(nil),                  // 180: client.HeroNewStarNotify
	(*HeroFightPowerNotify)(nil),               // 181: client.HeroFightPowerNotify
	(*HeroUpStarRequest)(nil),                  // 182: client.HeroUpStarRequest
	(*HeroUpStarResponse)(nil),                 // 183: client.HeroUpStarResponse
	(*HeroAutoUpStarRequest)(nil),              // 184: client.HeroAutoUpStarRequest
	(*HeroAutoUpStarResponse)(nil),             // 185: client.HeroAutoUpStarResponse
	(*HeroAwakenLevelRequest)(nil),             // 186: client.HeroAwakenLevelRequest
	(*HeroAwakenLevelResponse)(nil),            // 187: client.HeroAwakenLevelResponse
	(*HeroGameHeroListRequest)(nil),            // 188: client.HeroGameHeroListRequest
	(*HeroGameHeroListResponse)(nil),           // 189: client.HeroGameHeroListResponse
	(*HeroGameHeroListNotify)(nil),             // 190: client.HeroGameHeroListNotify
	(*HeroRebirthRequest)(nil),                 // 191: client.HeroRebirthRequest
	(*HeroRebirthResponse)(nil),                // 192: client.HeroRebirthResponse
	(*HeroBookNotify)(nil),                     // 193: client.HeroBookNotify
	(*HeroBookActiveRequest)(nil),              // 194: client.HeroBookActiveRequest
	(*HeroBookActiveResponse)(nil),             // 195: client.HeroBookActiveResponse
	(*HeroBookUpStarRequest)(nil),              // 196: client.HeroBookUpStarRequest
	(*HeroBookUpStarResponse)(nil),             // 197: client.HeroBookUpStarResponse
	(*SystemPropNotify)(nil),                   // 198: client.SystemPropNotify
	(*BattleMapNotify)(nil),                    // 199: client.BattleMapNotify
	(*BattleBeginRequest)(nil),                 // 200: client.BattleBeginRequest
	(*BattleBeginResponse)(nil),                // 201: client.BattleBeginResponse
	(*BattleEndRequest)(nil),                   // 202: client.BattleEndRequest
	(*BattleEndResponse)(nil),                  // 203: client.BattleEndResponse
	(*BattleRecordRequest)(nil),                // 204: client.BattleRecordRequest
	(*BattleRecordResponse)(nil),               // 205: client.BattleRecordResponse
	(*NormalBattlePrizeRequest)(nil),           // 206: client.NormalBattlePrizeRequest
	(*NormalBattlePrizeResponse)(nil),          // 207: client.NormalBattlePrizeResponse
	(*HookBattleAutoMapRequest)(nil),           // 208: client.HookBattleAutoMapRequest
	(*HookBattleAutoMapResponse)(nil),          // 209: client.HookBattleAutoMapResponse
	(*BattleReliveNotify)(nil),                 // 210: client.BattleReliveNotify
	(*BattleReliveRequest)(nil),                // 211: client.BattleReliveRequest
	(*BattleReliveResponse)(nil),               // 212: client.BattleReliveResponse
	(*BattleFunBuyRequest)(nil),                // 213: client.BattleFunBuyRequest
	(*BattleFunBuyResponse)(nil),               // 214: client.BattleFunBuyResponse
	(*HookBattleLootRequest)(nil),              // 215: client.HookBattleLootRequest
	(*HookBattleLootResponse)(nil),             // 216: client.HookBattleLootResponse
	(*BattleScheduleSaveRequest)(nil),          // 217: client.BattleScheduleSaveRequest
	(*BattleScheduleSaveResponse)(nil),         // 218: client.BattleScheduleSaveResponse
	(*CrystalRobotNotify)(nil),                 // 219: client.CrystalRobotNotify
	(*CrystalNotify)(nil),                      // 220: client.CrystalNotify
	(*CrystalRobotUpgradeRequest)(nil),         // 221: client.CrystalRobotUpgradeRequest
	(*CrystalRobotUpgradeResponse)(nil),        // 222: client.CrystalRobotUpgradeResponse
	(*CrystalRobotBattleRequest)(nil),          // 223: client.CrystalRobotBattleRequest
	(*CrystalRobotBattleResponse)(nil),         // 224: client.CrystalRobotBattleResponse
	(*CrystalRedefineRequest)(nil),             // 225: client.CrystalRedefineRequest
	(*CrystalRedefineResponse)(nil),            // 226: client.CrystalRedefineResponse
	(*CrystalUpgradeRequest)(nil),              // 227: client.CrystalUpgradeRequest
	(*CrystalUpgradeResponse)(nil),             // 228: client.CrystalUpgradeResponse
	(*BookStageRewardRequest)(nil),             // 229: client.BookStageRewardRequest
	(*BookStageRewardResponse)(nil),            // 230: client.BookStageRewardResponse
	(*BookCollectionCoinRequest)(nil),          // 231: client.BookCollectionCoinRequest
	(*BookCollectionCoinResponse)(nil),         // 232: client.BookCollectionCoinResponse
	(*GeneSchemeChangeRequest)(nil),            // 233: client.GeneSchemeChangeRequest
	(*GeneSchemeChangeResponse)(nil),           // 234: client.GeneSchemeChangeResponse
	(*GeneSchemeResetRequest)(nil),             // 235: client.GeneSchemeResetRequest
	(*GeneSchemeResetResponse)(nil),            // 236: client.GeneSchemeResetResponse
	(*GeneChangeNameRequest)(nil),              // 237: client.GeneChangeNameRequest
	(*GeneChangeNameResponse)(nil),             // 238: client.GeneChangeNameResponse
	(*GeneCardActiveInfo)(nil),                 // 239: client.GeneCardActiveInfo
	(*GeneCardActiveRequest)(nil),              // 240: client.GeneCardActiveRequest
	(*GeneCardActiveResponse)(nil),             // 241: client.GeneCardActiveResponse
	(*GeneRobotActiveRequest)(nil),             // 242: client.GeneRobotActiveRequest
	(*GeneRobotActiveResponse)(nil),            // 243: client.GeneRobotActiveResponse
	(*GeneRobotCardActiveRequest)(nil),         // 244: client.GeneRobotCardActiveRequest
	(*GeneRobotCardActiveResponse)(nil),        // 245: client.GeneRobotCardActiveResponse
	(*WorldBossNotify)(nil),                    // 246: client.WorldBossNotify
	(*WorldBossStagePrizeRequest)(nil),         // 247: client.WorldBossStagePrizeRequest
	(*WorldBossStagePrizeResponse)(nil),        // 248: client.WorldBossStagePrizeResponse
	(*WorldBossBuyCountRequest)(nil),           // 249: client.WorldBossBuyCountRequest
	(*WorldBossBuyCountResponse)(nil),          // 250: client.WorldBossBuyCountResponse
	(*WorldBossSweepRequest)(nil),              // 251: client.WorldBossSweepRequest
	(*WorldBossSweepResponse)(nil),             // 252: client.WorldBossSweepResponse
	(*WorldBossBattleBeginRequest)(nil),        // 253: client.WorldBossBattleBeginRequest
	(*WorldBossBattleBeginResponse)(nil),       // 254: client.WorldBossBattleBeginResponse
	(*WorldBossBattleEndRequest)(nil),          // 255: client.WorldBossBattleEndRequest
	(*WorldBossBattleEndResponse)(nil),         // 256: client.WorldBossBattleEndResponse
	(*WorldBossRecordRequest)(nil),             // 257: client.WorldBossRecordRequest
	(*WorldBossRecordResponse)(nil),            // 258: client.WorldBossRecordResponse
	(*OpenBossRequest)(nil),                    // 259: client.OpenBossRequest
	(*OpenBossResponse)(nil),                   // 260: client.OpenBossResponse
	(*ChampionshipTaskRewardRequest)(nil),      // 261: client.ChampionshipTaskRewardRequest
	(*ChampionshipTaskRewardResponse)(nil),     // 262: client.ChampionshipTaskRewardResponse
	(*ChampionshipInfoRequest)(nil),            // 263: client.ChampionshipInfoRequest
	(*ChampionshipRankInfo)(nil),               // 264: client.ChampionshipRankInfo
	(*ChampionshipInfoResponse)(nil),           // 265: client.ChampionshipInfoResponse
	(*ChampionshipTimeInfo)(nil),               // 266: client.ChampionshipTimeInfo
	(*ChampionshipNotify)(nil),                 // 267: client.ChampionshipNotify
	(*ActivityListNotify)(nil),                 // 268: client.ActivityListNotify
	(*ActivityDataNewNotify)(nil),              // 269: client.ActivityDataNewNotify
	(*ActivityRedNotify)(nil),                  // 270: client.ActivityRedNotify
	(*ActivityOpenRequest)(nil),                // 271: client.ActivityOpenRequest
	(*ActivityOpenResponse)(nil),               // 272: client.ActivityOpenResponse
	(*ActivityFreePrizeRequest)(nil),           // 273: client.ActivityFreePrizeRequest
	(*ActivityFreePrizeResponse)(nil),          // 274: client.ActivityFreePrizeResponse
	(*GrowRoadTaskPrizeRequest)(nil),           // 275: client.GrowRoadTaskPrizeRequest
	(*GrowRoadTaskPrizeResponse)(nil),          // 276: client.GrowRoadTaskPrizeResponse
	(*ChargeGiftBuyNotify)(nil),                // 277: client.ChargeGiftBuyNotify
	(*OpenServerGiftBuyNotify)(nil),            // 278: client.OpenServerGiftBuyNotify
	(*OpenServerGiftNewNotify)(nil),            // 279: client.OpenServerGiftNewNotify
	(*AdventureRewardRequest)(nil),             // 280: client.AdventureRewardRequest
	(*AdventureRewardResponse)(nil),            // 281: client.AdventureRewardResponse
	(*IPacket)(nil),                            // 282: common.IPacket
	(*PBPlayerData)(nil),                       // 283: playerStruct.PBPlayerData
	(*PBAdvertInfo)(nil),                       // 284: playerStruct.PBAdvertInfo
	(*PBJsonInfo)(nil),                         // 285: playerStruct.PBJsonInfo
	(*PBStringInt64)(nil),                      // 286: playerStruct.PBStringInt64
	(EmDoingType)(0),                           // 287: common.EmDoingType
	(*PBAddItemData)(nil),                      // 288: playerStruct.PBAddItemData
	(*PBNotice)(nil),                           // 289: playerStruct.PBNotice
	(*PBMail)(nil),                             // 290: playerStruct.PBMail
	(*PBItem)(nil),                             // 291: playerStruct.PBItem
	(*PBAddItem)(nil),                          // 292: playerStruct.PBAddItem
	(*PBU32U32)(nil),                           // 293: playerStruct.PBU32U32
	(*RankInfo)(nil),                           // 294: playerStruct.RankInfo
	(*PBTaskStageInfo)(nil),                    // 295: playerStruct.PBTaskStageInfo
	(*PBDailyTask)(nil),                        // 296: playerStruct.PBDailyTask
	(*PBClientData)(nil),                       // 297: playerStruct.PBClientData
	(*PBAvatar)(nil),                           // 298: playerStruct.PBAvatar
	(*PBAvatarFrame)(nil),                      // 299: playerStruct.PBAvatarFrame
	(*PBU32U64)(nil),                           // 300: playerStruct.PBU32U64
	(*PBShopGoodCfg)(nil),                      // 301: playerStruct.PBShopGoodCfg
	(*PBShopGoodInfo)(nil),                     // 302: playerStruct.PBShopGoodInfo
	(*PBPlayerSystemShop)(nil),                 // 303: playerStruct.PBPlayerSystemShop
	(*PBShopRefreshInfo)(nil),                  // 304: playerStruct.PBShopRefreshInfo
	(*PBDrawInfo)(nil),                         // 305: playerStruct.PBDrawInfo
	(*PBDrawPrizeInfo)(nil),                    // 306: playerStruct.PBDrawPrizeInfo
	(*PBCharge)(nil),                           // 307: playerStruct.PBCharge
	(*PBChargeBingchuanOrder)(nil),             // 308: playerStruct.PBChargeBingchuanOrder
	(*PBFirstCharge)(nil),                      // 309: playerStruct.PBFirstCharge
	(*PBBPInfo)(nil),                           // 310: playerStruct.PBBPInfo
	(*PBBPStageInfo)(nil),                      // 311: playerStruct.PBBPStageInfo
	(*PBChargeCard)(nil),                       // 312: playerStruct.PBChargeCard
	(*PBHookTech)(nil),                         // 313: playerStruct.PBHookTech
	(*EntryCondition)(nil),                     // 314: playerStruct.EntryCondition
	(*EntryEffect)(nil),                        // 315: playerStruct.EntryEffect
	(*PBSevenDayInfo)(nil),                     // 316: playerStruct.PBSevenDayInfo
	(*RouteInfo)(nil),                          // 317: common.RouteInfo
	(*PBPlayerSystemProfPartInfo)(nil),         // 318: playerStruct.PBPlayerSystemProfPartInfo
	(*PBEquipment)(nil),                        // 319: playerStruct.PBEquipment
	(*PBHero)(nil),                             // 320: playerStruct.PBHero
	(*PBHeroTeamList)(nil),                     // 321: playerStruct.PBHeroTeamList
	(*PBHeroBook)(nil),                         // 322: playerStruct.PBHeroBook
	(EmSyetemPropType)(0),                      // 323: common.EmSyetemPropType
	(*PBPropInfo)(nil),                         // 324: playerStruct.PBPropInfo
	(EmBattleType)(0),                          // 325: common.EmBattleType
	(*PBBattleMapInfo)(nil),                    // 326: playerStruct.PBBattleMapInfo
	(*BattleInfo)(nil),                         // 327: playerStruct.BattleInfo
	(*PBPlayerBattleData)(nil),                 // 328: playerStruct.PBPlayerBattleData
	(*PBBattleRelive)(nil),                     // 329: playerStruct.PBBattleRelive
	(*BattleKillMonsterInfo)(nil),              // 330: playerStruct.BattleKillMonsterInfo
	(*PBBattleSchedule)(nil),                   // 331: playerStruct.PBBattleSchedule
	(*PBCrystalRobot)(nil),                     // 332: playerStruct.PBCrystalRobot
	(*PBCrystal)(nil),                          // 333: playerStruct.PBCrystal
	(*PBCrystalBook)(nil),                      // 334: playerStruct.PBCrystalBook
	(*PBPlayerSystemWorldBoss)(nil),            // 335: playerStruct.PBPlayerSystemWorldBoss
	(*PBPlayerActivityInfo)(nil),               // 336: playerStruct.PBPlayerActivityInfo
	(*PBPlayerSystemActivity)(nil),             // 337: playerStruct.PBPlayerSystemActivity
	(*PBOpenServerGiftInfo)(nil),               // 338: playerStruct.PBOpenServerGiftInfo
}
var file_client_proto_depIdxs = []int32{
	282, // 0: client.LoginRequest.PacketHead:type_name -> common.IPacket
	282, // 1: client.LoginResponse.PacketHead:type_name -> common.IPacket
	282, // 2: client.HeartbeatRequest.PacketHead:type_name -> common.IPacket
	282, // 3: client.HeartbeatResponse.PacketHead:type_name -> common.IPacket
	282, // 4: client.AllPlayerInfoNotify.PacketHead:type_name -> common.IPacket
	283, // 5: client.AllPlayerInfoNotify.PlayerData:type_name -> playerStruct.PBPlayerData
	282, // 6: client.CommonNotify.PacketHead:type_name -> common.IPacket
	282, // 7: client.ProtocolNameNotify.PacketHead:type_name -> common.IPacket
	282, // 8: client.AdvertRequest.PacketHead:type_name -> common.IPacket
	282, // 9: client.AdvertResponse.PacketHead:type_name -> common.IPacket
	284, // 10: client.AdvertResponse.AdvestInfo:type_name -> playerStruct.PBAdvertInfo
	282, // 11: client.AdvertNotify.PacketHead:type_name -> common.IPacket
	284, // 12: client.AdvertNotify.AdvertList:type_name -> playerStruct.PBAdvertInfo
	282, // 13: client.ClientJsonNotify.PacketHead:type_name -> common.IPacket
	285, // 14: client.ClientJsonNotify.JsonList:type_name -> playerStruct.PBJsonInfo
	282, // 15: client.PlayerUpdateKvNotify.PacketHead:type_name -> common.IPacket
	286, // 16: client.PlayerUpdateKvNotify.ListInfo:type_name -> playerStruct.PBStringInt64
	282, // 17: client.SystemOpenNotify.PacketHead:type_name -> common.IPacket
	282, // 18: client.SystemOpenPrizeRequest.PacketHead:type_name -> common.IPacket
	282, // 19: client.SystemOpenPrizeResponse.PacketHead:type_name -> common.IPacket
	282, // 20: client.GmFuncRequest.PacketHead:type_name -> common.IPacket
	282, // 21: client.GmFuncResponse.PacketHead:type_name -> common.IPacket
	282, // 22: client.CommonPrizeNotify.PacketHead:type_name -> common.IPacket
	287, // 23: client.CommonPrizeNotify.DoingType:type_name -> common.EmDoingType
	288, // 24: client.CommonPrizeNotify.ItemInfo:type_name -> playerStruct.PBAddItemData
	282, // 25: client.PassTimeNotify.PacketHead:type_name -> common.IPacket
	282, // 26: client.NoticeRequest.PacketHead:type_name -> common.IPacket
	282, // 27: client.NoticeResponse.PacketHead:type_name -> common.IPacket
	289, // 28: client.NoticeResponse.NoticeList:type_name -> playerStruct.PBNotice
	282, // 29: client.NoticeNotify.PacketHead:type_name -> common.IPacket
	289, // 30: client.NoticeNotify.Notice:type_name -> playerStruct.PBNotice
	282, // 31: client.PageOpenRequest.PacketHead:type_name -> common.IPacket
	282, // 32: client.PageOpenResponse.PacketHead:type_name -> common.IPacket
	282, // 33: client.NewMailNotify.PacketHead:type_name -> common.IPacket
	290, // 34: client.NewMailNotify.Mail:type_name -> playerStruct.PBMail
	282, // 35: client.OnekeyAwardMailRequest.PacketHead:type_name -> common.IPacket
	282, // 36: client.OnekeyAwardMailResponse.PacketHead:type_name -> common.IPacket
	290, // 37: client.OnekeyAwardMailResponse.Mails:type_name -> playerStruct.PBMail
	282, // 38: client.AwardMailRequest.PacketHead:type_name -> common.IPacket
	282, // 39: client.AwardMailResponse.PacketHead:type_name -> common.IPacket
	290, // 40: client.AwardMailResponse.Mail:type_name -> playerStruct.PBMail
	282, // 41: client.OnekeyDeleteMailRequest.PacketHead:type_name -> common.IPacket
	282, // 42: client.OnekeyDeleteMailResponse.PacketHead:type_name -> common.IPacket
	282, // 43: client.DeleteMailRequest.PacketHead:type_name -> common.IPacket
	282, // 44: client.DeleteMailResponse.PacketHead:type_name -> common.IPacket
	282, // 45: client.ItemUpdateNotify.PacketHead:type_name -> common.IPacket
	291, // 46: client.ItemUpdateNotify.ItemList:type_name -> playerStruct.PBItem
	282, // 47: client.ItemBuyRequest.PacketHead:type_name -> common.IPacket
	282, // 48: client.ItemBuyResponse.PacketHead:type_name -> common.IPacket
	282, // 49: client.ItemUseRequest.PacketHead:type_name -> common.IPacket
	282, // 50: client.ItemUseResponse.PacketHead:type_name -> common.IPacket
	282, // 51: client.ItemUseShowRequest.PacketHead:type_name -> common.IPacket
	292, // 52: client.ItemUseShowInfo.Item:type_name -> playerStruct.PBAddItem
	282, // 53: client.ItemUseShowResponse.PacketHead:type_name -> common.IPacket
	39,  // 54: client.ItemUseShowResponse.ItemList:type_name -> client.ItemUseShowInfo
	282, // 55: client.ItemSelectRequest.PacketHead:type_name -> common.IPacket
	293, // 56: client.ItemSelectRequest.SelectList:type_name -> playerStruct.PBU32U32
	282, // 57: client.ItemSelectResponse.PacketHead:type_name -> common.IPacket
	293, // 58: client.ItemSelectResponse.SelectList:type_name -> playerStruct.PBU32U32
	282, // 59: client.GiftCodeRequest.PacketHead:type_name -> common.IPacket
	282, // 60: client.GiftCodeResponse.PacketHead:type_name -> common.IPacket
	282, // 61: client.RankRequest.PacketHead:type_name -> common.IPacket
	282, // 62: client.RankResponse.PacketHead:type_name -> common.IPacket
	294, // 63: client.RankResponse.RankList:type_name -> playerStruct.RankInfo
	294, // 64: client.RankResponse.SelfInfo:type_name -> playerStruct.RankInfo
	282, // 65: client.RankRewardRequest.PacketHead:type_name -> common.IPacket
	287, // 66: client.RankRewardRequest.Doing:type_name -> common.EmDoingType
	292, // 67: client.RankRewardRequest.Rewards:type_name -> playerStruct.PBAddItem
	282, // 68: client.RankRewardResponse.PacketHead:type_name -> common.IPacket
	282, // 69: client.RankUpdateNotify.PacketHead:type_name -> common.IPacket
	282, // 70: client.BoxOpenRequest.PacketHead:type_name -> common.IPacket
	282, // 71: client.BoxOpenResponse.PacketHead:type_name -> common.IPacket
	288, // 72: client.BoxOpenResponse.ItemInfo:type_name -> playerStruct.PBAddItemData
	282, // 73: client.BoxProgressRewardRequest.PacketHead:type_name -> common.IPacket
	282, // 74: client.BoxProgressRewardResponse.PacketHead:type_name -> common.IPacket
	282, // 75: client.MainTaskFinishRequest.PacketHead:type_name -> common.IPacket
	282, // 76: client.MainTaskFinishResponse.PacketHead:type_name -> common.IPacket
	295, // 77: client.MainTaskFinishResponse.MainTask:type_name -> playerStruct.PBTaskStageInfo
	282, // 78: client.DailyTaskNotify.PacketHead:type_name -> common.IPacket
	296, // 79: client.DailyTaskNotify.DailyTask:type_name -> playerStruct.PBDailyTask
	282, // 80: client.DailyTaskFinishRequest.PacketHead:type_name -> common.IPacket
	282, // 81: client.DailyTasFinishResponse.PacketHead:type_name -> common.IPacket
	295, // 82: client.DailyTasFinishResponse.Task:type_name -> playerStruct.PBTaskStageInfo
	282, // 83: client.DailyTaskScorePrizeRequest.PacketHead:type_name -> common.IPacket
	282, // 84: client.DailyTaskScorePrizeResponse.PacketHead:type_name -> common.IPacket
	282, // 85: client.SetClientRequest.PacketHead:type_name -> common.IPacket
	297, // 86: client.SetClientRequest.ClientData:type_name -> playerStruct.PBClientData
	282, // 87: client.SetClientResponse.PacketHead:type_name -> common.IPacket
	282, // 88: client.ChangeAvatarRequest.PacketHead:type_name -> common.IPacket
	282, // 89: client.ChangeAvatarResponse.PacketHead:type_name -> common.IPacket
	282, // 90: client.AvatarNotify.PacketHead:type_name -> common.IPacket
	298, // 91: client.AvatarNotify.Avatars:type_name -> playerStruct.PBAvatar
	282, // 92: client.AvatarFrameNotify.PacketHead:type_name -> common.IPacket
	299, // 93: client.AvatarFrameNotify.Frames:type_name -> playerStruct.PBAvatarFrame
	282, // 94: client.ChangeAvatarFrameRequest.PacketHead:type_name -> common.IPacket
	282, // 95: client.ChangeAvatarFrameResponse.PacketHead:type_name -> common.IPacket
	282, // 96: client.ChangePlayerNameRequest.PacketHead:type_name -> common.IPacket
	282, // 97: client.ChangePlayerNameResponse.PacketHead:type_name -> common.IPacket
	282, // 98: client.ShopListNotify.PacketHead:type_name -> common.IPacket
	300, // 99: client.ShopListNotify.ShopList:type_name -> playerStruct.PBU32U64
	282, // 100: client.ShopOpenRequest.PacketHead:type_name -> common.IPacket
	282, // 101: client.ShopOpenResponse.PacketHead:type_name -> common.IPacket
	301, // 102: client.ShopOpenResponse.GoodList:type_name -> playerStruct.PBShopGoodCfg
	282, // 103: client.ShopExchangeGoodNotify.PacketHead:type_name -> common.IPacket
	293, // 104: client.ShopExchangeGoodNotify.GoodInfo:type_name -> playerStruct.PBU32U32
	282, // 105: client.ShopExchangeRequest.PacketHead:type_name -> common.IPacket
	282, // 106: client.ShopExchangeResponse.PacketHead:type_name -> common.IPacket
	282, // 107: client.ShopBuyRequest.PacketHead:type_name -> common.IPacket
	282, // 108: client.ShopBuyResponse.PacketHead:type_name -> common.IPacket
	282, // 109: client.ShopUpdateOneGoodsNotify.PacketHead:type_name -> common.IPacket
	302, // 110: client.ShopUpdateOneGoodsNotify.ShopGood:type_name -> playerStruct.PBShopGoodInfo
	282, // 111: client.ShopUpdateNotify.PacketHead:type_name -> common.IPacket
	303, // 112: client.ShopUpdateNotify.Shop:type_name -> playerStruct.PBPlayerSystemShop
	282, // 113: client.ShopRefreshRequest.PacketHead:type_name -> common.IPacket
	282, // 114: client.ShopRefreshResponse.PacketHead:type_name -> common.IPacket
	304, // 115: client.ShopRefreshResponse.RefreshInfo:type_name -> playerStruct.PBShopRefreshInfo
	282, // 116: client.ShopRefreshTimeNotify.PacketHead:type_name -> common.IPacket
	304, // 117: client.ShopRefreshTimeNotify.RefreshInfo:type_name -> playerStruct.PBShopRefreshInfo
	282, // 118: client.DrawNotify.PacketHead:type_name -> common.IPacket
	305, // 119: client.DrawNotify.DrawList:type_name -> playerStruct.PBDrawInfo
	282, // 120: client.DrawRequest.PacketHead:type_name -> common.IPacket
	282, // 121: client.DrawResponse.PacketHead:type_name -> common.IPacket
	305, // 122: client.DrawResponse.DrawInfo:type_name -> playerStruct.PBDrawInfo
	282, // 123: client.DrawPrizeInfoRequest.PacketHead:type_name -> common.IPacket
	282, // 124: client.DrawPrizeInfoResponse.PacketHead:type_name -> common.IPacket
	306, // 125: client.DrawPrizeInfoResponse.PrizeList:type_name -> playerStruct.PBDrawPrizeInfo
	282, // 126: client.DrawScorePrizeRequest.PacketHead:type_name -> common.IPacket
	282, // 127: client.DrawScorePrizeResponse.PacketHead:type_name -> common.IPacket
	282, // 128: client.ChargeNotify.PacketHead:type_name -> common.IPacket
	307, // 129: client.ChargeNotify.Charge:type_name -> playerStruct.PBCharge
	282, // 130: client.ChargeOrderRequest.PacketHead:type_name -> common.IPacket
	282, // 131: client.ChargeOrderResponse.PacketHead:type_name -> common.IPacket
	308, // 132: client.ChargeOrderResponse.BingchuanOrder:type_name -> playerStruct.PBChargeBingchuanOrder
	282, // 133: client.ChargeQueryNotify.PacketHead:type_name -> common.IPacket
	282, // 134: client.ChargeQueryRequest.PacketHead:type_name -> common.IPacket
	282, // 135: client.ChargeQueryResponse.PacketHead:type_name -> common.IPacket
	282, // 136: client.FirstChargeNotify.PacketHead:type_name -> common.IPacket
	309, // 137: client.FirstChargeNotify.FirstChargeList:type_name -> playerStruct.PBFirstCharge
	282, // 138: client.FirstChargePrizeRequest.PacketHead:type_name -> common.IPacket
	282, // 139: client.FirstChargePrizeResponse.PacketHead:type_name -> common.IPacket
	282, // 140: client.BPNewNotify.PacketHead:type_name -> common.IPacket
	310, // 141: client.BPNewNotify.BPInfo:type_name -> playerStruct.PBBPInfo
	282, // 142: client.BPNewStageNotify.PacketHead:type_name -> common.IPacket
	311, // 143: client.BPNewStageNotify.StageList:type_name -> playerStruct.PBBPStageInfo
	282, // 144: client.BPValueNotify.PacketHead:type_name -> common.IPacket
	282, // 145: client.BPAcitiveNotify.PacketHead:type_name -> common.IPacket
	282, // 146: client.BPPrizeRequest.PacketHead:type_name -> common.IPacket
	282, // 147: client.BPPrizeResponse.PacketHead:type_name -> common.IPacket
	282, // 148: client.ChargeCardNewNotify.PacketHead:type_name -> common.IPacket
	312, // 149: client.ChargeCardNewNotify.CardInfo:type_name -> playerStruct.PBChargeCard
	282, // 150: client.ChargeCardUpdateNotify.PacketHead:type_name -> common.IPacket
	312, // 151: client.ChargeCardUpdateNotify.CardInfo:type_name -> playerStruct.PBChargeCard
	282, // 152: client.ChargeCardPrizeRequest.PacketHead:type_name -> common.IPacket
	282, // 153: client.ChargeCardPrizeResponse.PacketHead:type_name -> common.IPacket
	282, // 154: client.BroadcastNotify.PacketHead:type_name -> common.IPacket
	282, // 155: client.HeroBattleStarChangeRequest.PacketHead:type_name -> common.IPacket
	111, // 156: client.HeroBattleStarChangeRequest.Heros:type_name -> client.HeroBattleStarInfo
	282, // 157: client.HeroBattleStarChangeResponse.PacketHead:type_name -> common.IPacket
	282, // 158: client.HeroBattleStarChangeNotify.PacketHead:type_name -> common.IPacket
	111, // 159: client.HeroBattleStarChangeNotify.Heros:type_name -> client.HeroBattleStarInfo
	282, // 160: client.OfflineIncomeRewardRequest.PacketHead:type_name -> common.IPacket
	282, // 161: client.OfflineIncomeRewardResponse.PacketHead:type_name -> common.IPacket
	282, // 162: client.HookTechLevelNotify.PacketHead:type_name -> common.IPacket
	313, // 163: client.HookTechLevelNotify.HookTechList:type_name -> playerStruct.PBHookTech
	282, // 164: client.HookTechLevelRequest.PacketHead:type_name -> common.IPacket
	282, // 165: client.HookTechLevelResponse.PacketHead:type_name -> common.IPacket
	282, // 166: client.HookTechSpeedRequest.PacketHead:type_name -> common.IPacket
	282, // 167: client.HookTechSpeedResponse.PacketHead:type_name -> common.IPacket
	282, // 168: client.EntryConditionNotify.PacketHead:type_name -> common.IPacket
	314, // 169: client.EntryConditionNotify.Condition:type_name -> playerStruct.EntryCondition
	282, // 170: client.EntryEffectNotify.PacketHead:type_name -> common.IPacket
	315, // 171: client.EntryEffectNotify.Effect:type_name -> playerStruct.EntryEffect
	282, // 172: client.EntryUnlockRequest.PacketHead:type_name -> common.IPacket
	282, // 173: client.EntryUnlockResponse.PacketHead:type_name -> common.IPacket
	282, // 174: client.EntryTriggerRequest.PacketHead:type_name -> common.IPacket
	282, // 175: client.EntryTriggerResponse.PacketHead:type_name -> common.IPacket
	282, // 176: client.GetPlayerDataRequest.PacketHead:type_name -> common.IPacket
	282, // 177: client.GetPlayerDataResponse.PacketHead:type_name -> common.IPacket
	283, // 178: client.GetPlayerDataResponse.PlayerData:type_name -> playerStruct.PBPlayerData
	282, // 179: client.SetPlayerDataRequest.PacketHead:type_name -> common.IPacket
	282, // 180: client.SetPlayerDataResponse.PacketHead:type_name -> common.IPacket
	282, // 181: client.AchieveTaskInfoNotify.PacketHead:type_name -> common.IPacket
	295, // 182: client.AchieveTaskInfoNotify.TaskList:type_name -> playerStruct.PBTaskStageInfo
	282, // 183: client.SevenDayListNotify.PacketHead:type_name -> common.IPacket
	316, // 184: client.SevenDayListNotify.AddList:type_name -> playerStruct.PBSevenDayInfo
	282, // 185: client.SevenDayGiftNotify.PacketHead:type_name -> common.IPacket
	293, // 186: client.SevenDayGiftNotify.GiftInfo:type_name -> playerStruct.PBU32U32
	282, // 187: client.SevenDayActivePrizeRequest.PacketHead:type_name -> common.IPacket
	282, // 188: client.SevenDayActivePrizeResponse.PacketHead:type_name -> common.IPacket
	282, // 189: client.SevenDayTaskPrizeRequest.PacketHead:type_name -> common.IPacket
	282, // 190: client.SevenDayTaskPrizeResponse.PacketHead:type_name -> common.IPacket
	295, // 191: client.SevenDayTaskPrizeResponse.TaskStageInfo:type_name -> playerStruct.PBTaskStageInfo
	282, // 192: client.SevenDayBuyGiftRequest.PacketHead:type_name -> common.IPacket
	282, // 193: client.SevenDayBuyGiftResponse.PacketHead:type_name -> common.IPacket
	293, // 194: client.SevenDayBuyGiftResponse.GiftInfo:type_name -> playerStruct.PBU32U32
	317, // 195: client.UserRouteInfo.RouteInfo:type_name -> common.RouteInfo
	282, // 196: client.UpdateRouteNotify.PacketHead:type_name -> common.IPacket
	141, // 197: client.UpdateRouteNotify.Users:type_name -> client.UserRouteInfo
	282, // 198: client.ProfessionLevelRequest.PacketHead:type_name -> common.IPacket
	282, // 199: client.ProfessionLevelResponse.PacketHead:type_name -> common.IPacket
	282, // 200: client.ProfessionGradeRequest.PacketHead:type_name -> common.IPacket
	282, // 201: client.ProfessionGradeResponse.PacketHead:type_name -> common.IPacket
	282, // 202: client.ProfessionPeakRequest.PacketHead:type_name -> common.IPacket
	282, // 203: client.ProfessionPeakResponse.PacketHead:type_name -> common.IPacket
	282, // 204: client.ProfessionPeakLevelRequest.PacketHead:type_name -> common.IPacket
	282, // 205: client.ProfessionPeakLevelResponse.PacketHead:type_name -> common.IPacket
	282, // 206: client.ProfessionPartLevelRequest.PacketHead:type_name -> common.IPacket
	282, // 207: client.ProfessionPartLevelResponse.PacketHead:type_name -> common.IPacket
	282, // 208: client.ProfessionPartOnekeyLevelRequest.PacketHead:type_name -> common.IPacket
	282, // 209: client.ProfessionPartOnekeyLevelResponse.PacketHead:type_name -> common.IPacket
	318, // 210: client.ProfessionPartOnekeyLevelResponse.PartList:type_name -> playerStruct.PBPlayerSystemProfPartInfo
	282, // 211: client.ProfessionEquipRequest.PacketHead:type_name -> common.IPacket
	282, // 212: client.ProfessionEquipResponse.PacketHead:type_name -> common.IPacket
	282, // 213: client.ProfessionOnekeyUnEquipRequest.PacketHead:type_name -> common.IPacket
	282, // 214: client.ProfessionOnekeyUnEquipResponse.PacketHead:type_name -> common.IPacket
	282, // 215: client.ProfessionPartRefineRequest.PacketHead:type_name -> common.IPacket
	282, // 216: client.ProfessionPartRefineResponse.PacketHead:type_name -> common.IPacket
	282, // 217: client.ProfessionPartOnekeyRefineRequest.PacketHead:type_name -> common.IPacket
	282, // 218: client.ProfessionPartOnekeyRefineResponse.PacketHead:type_name -> common.IPacket
	318, // 219: client.ProfessionPartOnekeyRefineResponse.PartList:type_name -> playerStruct.PBPlayerSystemProfPartInfo
	282, // 220: client.ProfessionPartRefineTupoRequest.PacketHead:type_name -> common.IPacket
	282, // 221: client.ProfessionPartRefineTupoResponse.PacketHead:type_name -> common.IPacket
	282, // 222: client.ProfessionPartResetRequest.PacketHead:type_name -> common.IPacket
	282, // 223: client.ProfessionPartResetResponse.PacketHead:type_name -> common.IPacket
	318, // 224: client.ProfessionPartResetResponse.PartList:type_name -> playerStruct.PBPlayerSystemProfPartInfo
	282, // 225: client.EquipmentNotify.PacketHead:type_name -> common.IPacket
	319, // 226: client.EquipmentNotify.Equipment:type_name -> playerStruct.PBEquipment
	282, // 227: client.EquipmentSplitScoreNotify.PacketHead:type_name -> common.IPacket
	282, // 228: client.EquipmentSplitRequest.PacketHead:type_name -> common.IPacket
	282, // 229: client.EquipmentSplitResponse.PacketHead:type_name -> common.IPacket
	282, // 230: client.EquipmentBuyPosRequest.PacketHead:type_name -> common.IPacket
	282, // 231: client.EquipmentBuyPosResponse.PacketHead:type_name -> common.IPacket
	282, // 232: client.EquipmentAutoSplitRequest.PacketHead:type_name -> common.IPacket
	282, // 233: client.EquipmentAutoSplitResponse.PacketHead:type_name -> common.IPacket
	282, // 234: client.EquipmentLockRequest.PacketHead:type_name -> common.IPacket
	282, // 235: client.EquipmentLockResponse.PacketHead:type_name -> common.IPacket
	282, // 236: client.HookEquipmentAwardRequest.PacketHead:type_name -> common.IPacket
	282, // 237: client.HookEquipmentAwardResponse.PacketHead:type_name -> common.IPacket
	282, // 238: client.HeroNotify.PacketHead:type_name -> common.IPacket
	320, // 239: client.HeroNotify.Info:type_name -> playerStruct.PBHero
	282, // 240: client.HeroNewStarNotify.PacketHead:type_name -> common.IPacket
	320, // 241: client.HeroNewStarNotify.Info:type_name -> playerStruct.PBHero
	282, // 242: client.HeroFightPowerNotify.PacketHead:type_name -> common.IPacket
	282, // 243: client.HeroUpStarRequest.PacketHead:type_name -> common.IPacket
	282, // 244: client.HeroUpStarResponse.PacketHead:type_name -> common.IPacket
	282, // 245: client.HeroAutoUpStarRequest.PacketHead:type_name -> common.IPacket
	282, // 246: client.HeroAutoUpStarResponse.PacketHead:type_name -> common.IPacket
	293, // 247: client.HeroAutoUpStarResponse.HeroList:type_name -> playerStruct.PBU32U32
	282, // 248: client.HeroAwakenLevelRequest.PacketHead:type_name -> common.IPacket
	282, // 249: client.HeroAwakenLevelResponse.PacketHead:type_name -> common.IPacket
	282, // 250: client.HeroGameHeroListRequest.PacketHead:type_name -> common.IPacket
	321, // 251: client.HeroGameHeroListRequest.Team:type_name -> playerStruct.PBHeroTeamList
	282, // 252: client.HeroGameHeroListResponse.PacketHead:type_name -> common.IPacket
	321, // 253: client.HeroGameHeroListResponse.Team:type_name -> playerStruct.PBHeroTeamList
	282, // 254: client.HeroGameHeroListNotify.PacketHead:type_name -> common.IPacket
	321, // 255: client.HeroGameHeroListNotify.Team:type_name -> playerStruct.PBHeroTeamList
	282, // 256: client.HeroRebirthRequest.PacketHead:type_name -> common.IPacket
	282, // 257: client.HeroRebirthResponse.PacketHead:type_name -> common.IPacket
	282, // 258: client.HeroBookNotify.PacketHead:type_name -> common.IPacket
	322, // 259: client.HeroBookNotify.HeroBook:type_name -> playerStruct.PBHeroBook
	282, // 260: client.HeroBookActiveRequest.PacketHead:type_name -> common.IPacket
	282, // 261: client.HeroBookActiveResponse.PacketHead:type_name -> common.IPacket
	322, // 262: client.HeroBookActiveResponse.HeroBook:type_name -> playerStruct.PBHeroBook
	282, // 263: client.HeroBookUpStarRequest.PacketHead:type_name -> common.IPacket
	282, // 264: client.HeroBookUpStarResponse.PacketHead:type_name -> common.IPacket
	322, // 265: client.HeroBookUpStarResponse.HeroBook:type_name -> playerStruct.PBHeroBook
	282, // 266: client.SystemPropNotify.PacketHead:type_name -> common.IPacket
	323, // 267: client.SystemPropNotify.SyetemPropType:type_name -> common.EmSyetemPropType
	324, // 268: client.SystemPropNotify.PropInfoList:type_name -> playerStruct.PBPropInfo
	282, // 269: client.BattleMapNotify.PacketHead:type_name -> common.IPacket
	325, // 270: client.BattleMapNotify.BattleType:type_name -> common.EmBattleType
	326, // 271: client.BattleMapNotify.MapInfo:type_name -> playerStruct.PBBattleMapInfo
	282, // 272: client.BattleBeginRequest.PacketHead:type_name -> common.IPacket
	325, // 273: client.BattleBeginRequest.BattleType:type_name -> common.EmBattleType
	282, // 274: client.BattleBeginResponse.PacketHead:type_name -> common.IPacket
	325, // 275: client.BattleBeginResponse.BattleType:type_name -> common.EmBattleType
	282, // 276: client.BattleEndRequest.PacketHead:type_name -> common.IPacket
	327, // 277: client.BattleEndRequest.Battle:type_name -> playerStruct.BattleInfo
	282, // 278: client.BattleEndResponse.PacketHead:type_name -> common.IPacket
	325, // 279: client.BattleEndResponse.BattleType:type_name -> common.EmBattleType
	288, // 280: client.BattleEndResponse.ItemInfo:type_name -> playerStruct.PBAddItemData
	282, // 281: client.BattleRecordRequest.PacketHead:type_name -> common.IPacket
	325, // 282: client.BattleRecordRequest.BattleType:type_name -> common.EmBattleType
	282, // 283: client.BattleRecordResponse.PacketHead:type_name -> common.IPacket
	325, // 284: client.BattleRecordResponse.BattleType:type_name -> common.EmBattleType
	328, // 285: client.BattleRecordResponse.RecordList:type_name -> playerStruct.PBPlayerBattleData
	282, // 286: client.NormalBattlePrizeRequest.PacketHead:type_name -> common.IPacket
	282, // 287: client.NormalBattlePrizeResponse.PacketHead:type_name -> common.IPacket
	282, // 288: client.HookBattleAutoMapRequest.PacketHead:type_name -> common.IPacket
	282, // 289: client.HookBattleAutoMapResponse.PacketHead:type_name -> common.IPacket
	282, // 290: client.BattleReliveNotify.PacketHead:type_name -> common.IPacket
	329, // 291: client.BattleReliveNotify.Relive:type_name -> playerStruct.PBBattleRelive
	282, // 292: client.BattleReliveRequest.PacketHead:type_name -> common.IPacket
	325, // 293: client.BattleReliveRequest.BattleType:type_name -> common.EmBattleType
	282, // 294: client.BattleReliveResponse.PacketHead:type_name -> common.IPacket
	325, // 295: client.BattleReliveResponse.BattleType:type_name -> common.EmBattleType
	329, // 296: client.BattleReliveResponse.Relive:type_name -> playerStruct.PBBattleRelive
	282, // 297: client.BattleFunBuyRequest.PacketHead:type_name -> common.IPacket
	282, // 298: client.BattleFunBuyResponse.PacketHead:type_name -> common.IPacket
	282, // 299: client.HookBattleLootRequest.PacketHead:type_name -> common.IPacket
	330, // 300: client.HookBattleLootRequest.MonsterInfo:type_name -> playerStruct.BattleKillMonsterInfo
	282, // 301: client.HookBattleLootResponse.PacketHead:type_name -> common.IPacket
	282, // 302: client.BattleScheduleSaveRequest.PacketHead:type_name -> common.IPacket
	331, // 303: client.BattleScheduleSaveRequest.BattleSchedule:type_name -> playerStruct.PBBattleSchedule
	282, // 304: client.BattleScheduleSaveResponse.PacketHead:type_name -> common.IPacket
	331, // 305: client.BattleScheduleSaveResponse.BattleSchedule:type_name -> playerStruct.PBBattleSchedule
	282, // 306: client.CrystalRobotNotify.PacketHead:type_name -> common.IPacket
	332, // 307: client.CrystalRobotNotify.RobotInfo:type_name -> playerStruct.PBCrystalRobot
	282, // 308: client.CrystalNotify.PacketHead:type_name -> common.IPacket
	333, // 309: client.CrystalNotify.CrystalInfo:type_name -> playerStruct.PBCrystal
	282, // 310: client.CrystalRobotUpgradeRequest.PacketHead:type_name -> common.IPacket
	282, // 311: client.CrystalRobotUpgradeResponse.PacketHead:type_name -> common.IPacket
	282, // 312: client.CrystalRobotBattleRequest.PacketHead:type_name -> common.IPacket
	282, // 313: client.CrystalRobotBattleResponse.PacketHead:type_name -> common.IPacket
	282, // 314: client.CrystalRedefineRequest.PacketHead:type_name -> common.IPacket
	282, // 315: client.CrystalRedefineResponse.PacketHead:type_name -> common.IPacket
	282, // 316: client.CrystalUpgradeRequest.PacketHead:type_name -> common.IPacket
	282, // 317: client.CrystalUpgradeResponse.PacketHead:type_name -> common.IPacket
	282, // 318: client.BookStageRewardRequest.PacketHead:type_name -> common.IPacket
	282, // 319: client.BookStageRewardResponse.PacketHead:type_name -> common.IPacket
	334, // 320: client.BookStageRewardResponse.BookInfo:type_name -> playerStruct.PBCrystalBook
	282, // 321: client.BookCollectionCoinRequest.PacketHead:type_name -> common.IPacket
	282, // 322: client.BookCollectionCoinResponse.PacketHead:type_name -> common.IPacket
	282, // 323: client.GeneSchemeChangeRequest.PacketHead:type_name -> common.IPacket
	282, // 324: client.GeneSchemeChangeResponse.PacketHead:type_name -> common.IPacket
	282, // 325: client.GeneSchemeResetRequest.PacketHead:type_name -> common.IPacket
	282, // 326: client.GeneSchemeResetResponse.PacketHead:type_name -> common.IPacket
	282, // 327: client.GeneChangeNameRequest.PacketHead:type_name -> common.IPacket
	282, // 328: client.GeneChangeNameResponse.PacketHead:type_name -> common.IPacket
	282, // 329: client.GeneCardActiveRequest.PacketHead:type_name -> common.IPacket
	239, // 330: client.GeneCardActiveRequest.Actives:type_name -> client.GeneCardActiveInfo
	282, // 331: client.GeneCardActiveResponse.PacketHead:type_name -> common.IPacket
	282, // 332: client.GeneRobotActiveRequest.PacketHead:type_name -> common.IPacket
	282, // 333: client.GeneRobotActiveResponse.PacketHead:type_name -> common.IPacket
	282, // 334: client.GeneRobotCardActiveRequest.PacketHead:type_name -> common.IPacket
	239, // 335: client.GeneRobotCardActiveRequest.Actives:type_name -> client.GeneCardActiveInfo
	282, // 336: client.GeneRobotCardActiveResponse.PacketHead:type_name -> common.IPacket
	282, // 337: client.WorldBossNotify.PacketHead:type_name -> common.IPacket
	335, // 338: client.WorldBossNotify.WorldBoss:type_name -> playerStruct.PBPlayerSystemWorldBoss
	282, // 339: client.WorldBossStagePrizeRequest.PacketHead:type_name -> common.IPacket
	282, // 340: client.WorldBossStagePrizeResponse.PacketHead:type_name -> common.IPacket
	282, // 341: client.WorldBossBuyCountRequest.PacketHead:type_name -> common.IPacket
	282, // 342: client.WorldBossBuyCountResponse.PacketHead:type_name -> common.IPacket
	282, // 343: client.WorldBossSweepRequest.PacketHead:type_name -> common.IPacket
	282, // 344: client.WorldBossSweepResponse.PacketHead:type_name -> common.IPacket
	282, // 345: client.WorldBossBattleBeginRequest.PacketHead:type_name -> common.IPacket
	282, // 346: client.WorldBossBattleBeginResponse.PacketHead:type_name -> common.IPacket
	282, // 347: client.WorldBossBattleEndRequest.PacketHead:type_name -> common.IPacket
	327, // 348: client.WorldBossBattleEndRequest.Battle:type_name -> playerStruct.BattleInfo
	282, // 349: client.WorldBossBattleEndResponse.PacketHead:type_name -> common.IPacket
	288, // 350: client.WorldBossBattleEndResponse.ItemInfo:type_name -> playerStruct.PBAddItemData
	282, // 351: client.WorldBossRecordRequest.PacketHead:type_name -> common.IPacket
	282, // 352: client.WorldBossRecordResponse.PacketHead:type_name -> common.IPacket
	328, // 353: client.WorldBossRecordResponse.RecordInfo:type_name -> playerStruct.PBPlayerBattleData
	282, // 354: client.OpenBossRequest.PacketHead:type_name -> common.IPacket
	282, // 355: client.OpenBossResponse.PacketHead:type_name -> common.IPacket
	300, // 356: client.OpenBossResponse.WorldBossRank:type_name -> playerStruct.PBU32U64
	282, // 357: client.ChampionshipTaskRewardRequest.PacketHead:type_name -> common.IPacket
	282, // 358: client.ChampionshipTaskRewardResponse.PacketHead:type_name -> common.IPacket
	295, // 359: client.ChampionshipTaskRewardResponse.Task:type_name -> playerStruct.PBTaskStageInfo
	282, // 360: client.ChampionshipInfoRequest.PacketHead:type_name -> common.IPacket
	294, // 361: client.ChampionshipRankInfo.First:type_name -> playerStruct.RankInfo
	282, // 362: client.ChampionshipInfoResponse.PacketHead:type_name -> common.IPacket
	264, // 363: client.ChampionshipInfoResponse.List:type_name -> client.ChampionshipRankInfo
	282, // 364: client.ChampionshipNotify.PacketHead:type_name -> common.IPacket
	266, // 365: client.ChampionshipNotify.List:type_name -> client.ChampionshipTimeInfo
	282, // 366: client.ActivityListNotify.PacketHead:type_name -> common.IPacket
	336, // 367: client.ActivityListNotify.ActivityList:type_name -> playerStruct.PBPlayerActivityInfo
	282, // 368: client.ActivityDataNewNotify.PacketHead:type_name -> common.IPacket
	337, // 369: client.ActivityDataNewNotify.Info:type_name -> playerStruct.PBPlayerSystemActivity
	282, // 370: client.ActivityRedNotify.PacketHead:type_name -> common.IPacket
	282, // 371: client.ActivityOpenRequest.PacketHead:type_name -> common.IPacket
	282, // 372: client.ActivityOpenResponse.PacketHead:type_name -> common.IPacket
	282, // 373: client.ActivityFreePrizeRequest.PacketHead:type_name -> common.IPacket
	282, // 374: client.ActivityFreePrizeResponse.PacketHead:type_name -> common.IPacket
	282, // 375: client.GrowRoadTaskPrizeRequest.PacketHead:type_name -> common.IPacket
	282, // 376: client.GrowRoadTaskPrizeResponse.PacketHead:type_name -> common.IPacket
	295, // 377: client.GrowRoadTaskPrizeResponse.TaskStageInfo:type_name -> playerStruct.PBTaskStageInfo
	282, // 378: client.ChargeGiftBuyNotify.PacketHead:type_name -> common.IPacket
	293, // 379: client.ChargeGiftBuyNotify.BuyInfo:type_name -> playerStruct.PBU32U32
	282, // 380: client.OpenServerGiftBuyNotify.PacketHead:type_name -> common.IPacket
	293, // 381: client.OpenServerGiftBuyNotify.BuyInfo:type_name -> playerStruct.PBU32U32
	282, // 382: client.OpenServerGiftNewNotify.PacketHead:type_name -> common.IPacket
	338, // 383: client.OpenServerGiftNewNotify.GiftInfo:type_name -> playerStruct.PBOpenServerGiftInfo
	282, // 384: client.AdventureRewardRequest.PacketHead:type_name -> common.IPacket
	282, // 385: client.AdventureRewardResponse.PacketHead:type_name -> common.IPacket
	386, // [386:386] is the sub-list for method output_type
	386, // [386:386] is the sub-list for method input_type
	386, // [386:386] is the sub-list for extension type_name
	386, // [386:386] is the sub-list for extension extendee
	0,   // [0:386] is the sub-list for field type_name
}

func init() { file_client_proto_init() }
func file_client_proto_init() {
	if File_client_proto != nil {
		return
	}
	file_common_proto_init()
	file_playerStruct_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllPlayerInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtocolNameNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvertNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientJsonNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerUpdateKvNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOpenNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOpenPrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemOpenPrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GmFuncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GmFuncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonPrizeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassTimeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageOpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMailNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnekeyAwardMailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnekeyAwardMailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardMailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardMailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnekeyDeleteMailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnekeyDeleteMailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemBuyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemBuyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUseShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUseShowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUseShowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemSelectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemSelectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiftCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiftCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxOpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxProgressRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxProgressRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainTaskFinishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainTaskFinishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTaskNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTaskFinishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTasFinishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTaskScorePrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTaskScorePrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarFrameNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAvatarFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAvatarFrameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePlayerNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePlayerNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopListNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopOpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopExchangeGoodNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopExchangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopBuyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopBuyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopUpdateOneGoodsNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopRefreshRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopRefreshResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopRefreshTimeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawPrizeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawPrizeInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawScorePrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawScorePrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeQueryNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstChargeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstChargePrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstChargePrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BPNewNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BPNewStageNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BPValueNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BPAcitiveNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BPPrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BPPrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeCardNewNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeCardUpdateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeCardPrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeCardPrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroBattleStarInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroBattleStarChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroBattleStarChangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroBattleStarChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineIncomeRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineIncomeRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookTechLevelNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookTechLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookTechLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookTechSpeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookTechSpeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntryConditionNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntryEffectNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntryUnlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntryUnlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntryTriggerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntryTriggerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AchieveTaskInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SevenDayListNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SevenDayGiftNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SevenDayActivePrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SevenDayActivePrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SevenDayTaskPrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SevenDayTaskPrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SevenDayBuyGiftRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SevenDayBuyGiftResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRouteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRouteNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionGradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionGradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPeakRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPeakResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPeakLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPeakLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPartLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPartLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPartOnekeyLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPartOnekeyLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionEquipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionEquipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionOnekeyUnEquipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionOnekeyUnEquipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPartRefineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPartRefineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPartOnekeyRefineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPartOnekeyRefineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPartRefineTupoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPartRefineTupoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPartResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfessionPartResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentSplitScoreNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentSplitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentSplitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentBuyPosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentBuyPosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentAutoSplitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentAutoSplitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentLockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentLockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookEquipmentAwardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookEquipmentAwardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroNewStarNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroFightPowerNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroUpStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroUpStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroAutoUpStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroAutoUpStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroAwakenLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroAwakenLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroGameHeroListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroGameHeroListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroGameHeroListNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroRebirthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroRebirthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroBookNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroBookActiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroBookActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroBookUpStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroBookUpStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemPropNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleMapNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleBeginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleBeginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NormalBattlePrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NormalBattlePrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookBattleAutoMapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookBattleAutoMapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleReliveNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleReliveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleReliveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleFunBuyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleFunBuyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookBattleLootRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HookBattleLootResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleScheduleSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleScheduleSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalRobotNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalRobotUpgradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalRobotUpgradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalRobotBattleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalRobotBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalRedefineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalRedefineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalUpgradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalUpgradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookStageRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookStageRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookCollectionCoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookCollectionCoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneSchemeChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneSchemeChangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneSchemeResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneSchemeResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneChangeNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneChangeNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneCardActiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneCardActiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneCardActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneRobotActiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneRobotActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneRobotCardActiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneRobotCardActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossStagePrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossStagePrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossBuyCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossBuyCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossSweepRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossSweepResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossBattleBeginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossBattleBeginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossBattleEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossBattleEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldBossRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenBossRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenBossResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionshipTaskRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionshipTaskRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionshipInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionshipRankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionshipInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionshipTimeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChampionshipNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityListNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityDataNewNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityRedNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityOpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityFreePrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityFreePrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrowRoadTaskPrizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrowRoadTaskPrizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeGiftBuyNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenServerGiftBuyNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenServerGiftNewNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdventureRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdventureRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   282,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_proto_goTypes,
		DependencyIndexes: file_client_proto_depIdxs,
		MessageInfos:      file_client_proto_msgTypes,
	}.Build()
	File_client_proto = out.File
	file_client_proto_rawDesc = nil
	file_client_proto_goTypes = nil
	file_client_proto_depIdxs = nil
}
